__ZaBUNDLENAME__ = "search-worker", "object" != typeof globalThis && (globalThis = self),
    function(e) {
        var t = {};

        function n(r) {
            if (t[r]) return t[r].exports;
            var i = t[r] = {
                i: r,
                l: !1,
                exports: {}
            };
            return e[r].call(i.exports, i, i.exports, n), i.l = !0, i.exports
        }
        n.m = e, n.c = t, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            })
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, n.t = function(e, t) {
            if (1 & t && (e = n(e)), 8 & t) return e;
            if (4 & t && "object" == typeof e && e && e.__esModule) return e;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & t && "string" != typeof e)
                for (var i in e) n.d(r, i, function(t) {
                    return e[t]
                }.bind(null, i));
            return r
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return n.d(t, "a", t), t
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, n.p = "./zalo-chat-static.zadn.vn/v1/", n(n.s = 18)
    }({
        "+6XX": function(e, t, n) {
            var r = n("y1pI");
            e.exports = function(e) {
                return r(this.__data__, e) > -1
            }
        },
        "+ExH": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return p
            }));
            var r = n("oRsZ"),
                i = n("IpiK"),
                o = n("d04y"),
                s = n("pRxM"),
                a = n("b3Jv"),
                c = n("4IGy"),
                d = n("xS/Y"),
                u = n("rdC+"),
                l = n("pP8i");
            const p = {
                Core: r.a.basicSchema,
                MsgInfo: i.a.basicSchema,
                Qos: o.a.basicSchema,
                Reaction: s.a.basicSchema,
                Search: a.a.basicSchema,
                Storage: c.a.basicSchema,
                Res: d.a.basicSchema,
                SecureLocalstorage: u.a.basicSchema,
                ZLog: l.a.basicSchema
            }
        },
        "+eUS": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return v
            }));
            var r = n("jDHv"),
                i = n("+ExH"),
                o = n("YEoC"),
                s = n("oRsZ"),
                a = n("IpiK"),
                c = n("d04y"),
                d = n("pRxM"),
                u = n("b3Jv"),
                l = n("4IGy"),
                p = n("xS/Y"),
                m = n("rdC+"),
                h = n("pP8i");
            const f = (e, t) => {
                if (t === o.a.IDB) switch (e) {
                    case "Core":
                        return s.a.useIdb;
                    case "MsgInfo":
                        return a.a.useIdb;
                    case "Qos":
                        return c.a.useIdb;
                    case "Reaction":
                        return d.a.useIdb;
                    case "Search":
                        return u.a.useIdb;
                    case "Storage":
                        return l.a.useIdb;
                    case "Res":
                        return p.a.useIdb;
                    case "SecureLocalstorage":
                        return m.a.useIdb;
                    case "ZLog":
                        return h.a.useIdb;
                    default:
                        return
                }
                if (t === o.a.SQLite) switch (e) {
                    case "Core":
                        return s.a.useSqlite;
                    case "MsgInfo":
                        return a.a.useSqlite;
                    case "Qos":
                        return c.a.useSqlite;
                    case "Reaction":
                        return d.a.useSqlite;
                    case "Search":
                        return u.a.useSqlite;
                    case "Storage":
                        return l.a.useSqlite;
                    case "Res":
                        return p.a.useSqlite;
                    case "SecureLocalstorage":
                        return m.a.useSqlite;
                    case "ZLog":
                        return h.a.useSqlite;
                    default:
                        return
                }
            };
            var g = n("kFM4"),
                y = n("0slR"),
                _ = n("UJ0r"),
                E = n("teaq"),
                b = n("PhBv"),
                I = n("1UUk");

            function v(e) {
                Object(g.a)("RunMode", e), e !== o.e.Unknown && (r.ModuleContainer.resolve(I.b).install(), e !== o.e.Background && (setTimeout((() => {
                    r.ModuleContainer.resolve(b.b).start()
                }), 1), r.ModuleContainer.resolve(_.b).install(i.a), r.ModuleContainer.resolve(y.a).install(f), r.ModuleContainer.resolve(E.b).install()))
            }
        },
        "/9aa": function(e, t, n) {
            var r = n("NykK"),
                i = n("ExA7");
            e.exports = function(e) {
                return "symbol" == typeof e || i(e) && "[object Symbol]" == r(e)
            }
        },
        "/EgQ": function(e, t) {
            var n = {}.toString;
            e.exports = function(e) {
                return n.call(e).slice(8, -1)
            }
        },
        "/Pmb": function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("VTBJ"),
                i = n("N1xz"),
                o = n("igRa");
            t.default = class {
                constructor(e) {
                    this.flsData = void 0, this.recordedData = void 0, this.listener = void 0, this.startAt = void 0, this.safeFps = void 0, this.calcFallingFps = e => {
                        const {
                            fps: t,
                            now: n
                        } = e;
                        if (null == this.flsData.beforeDrop) t >= this.safeFps && (this.flsData.beforeDrop = t);
                        else if (this.flsData.beforeDrop > t && t < this.safeFps)(null == this.flsData.lowestDrop || this.flsData.lowestDrop > t) && (this.flsData.lowestDrop = t, this.flsData.lowestDropTs = n);
                        else if (null != this.flsData.lowestDrop && this.flsData.lowestDropTs) {
                            if (this.flsData.afterRecover = t, this.flsData.recoverTime = n - this.flsData.lowestDropTs, null == this.recordedData.lowestDrop || this.recordedData.lowestDrop > this.flsData.lowestDrop) {
                                var i;
                                this.recordedData = Object(r.a)({}, this.flsData);
                                const e = {
                                    beforeDrop: this.flsData.beforeDrop,
                                    lowestDrop: this.flsData.lowestDrop,
                                    recoverTime: this.flsData.recoverTime,
                                    afterRecover: this.flsData.afterRecover
                                };
                                null === (i = this.listener) || void 0 === i || i.call(this, e)
                            }
                            this.flsData = {}
                        } else t >= this.safeFps && (this.flsData.beforeDrop = t)
                    }, this.flsData = {}, this.recordedData = {};
                    const {
                        safeFpsGap: t = 10,
                        maxFps: n = 60
                    } = e || {};
                    this.safeFps = n - t
                }
                onData(e) {
                    this.listener = e
                }
                start() {
                    i.a.UIManager.on(o.a.FPS, this.calcFallingFps), this.startAt = Date.now()
                }
                end() {
                    if (!this.startAt) return {};
                    const e = {
                        beforeDrop: this.recordedData.beforeDrop,
                        lowestDrop: this.recordedData.lowestDrop,
                        recoverTime: this.recordedData.recoverTime,
                        afterRecover: this.recordedData.afterRecover,
                        startAt: this.startAt,
                        endAt: Date.now()
                    };
                    return this.flsData = {}, this.recordedData = {}, this.listener = void 0, i.a.UIManager.removeListener(o.a.FPS, this.calcFallingFps), this.startAt = void 0, e
                }
            }
        },
        "0rWR": function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("Mgpg"),
                s = n("YEoC"),
                a = n("DI/x"),
                c = n("PmZf"),
                d = n("LzQZ"),
                u = n("teaq"),
                l = n("UJ0r"),
                p = n("9rga");

            function m(e) {
                let t = {};
                return async function() {
                    for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
                    const o = r.length ? r.join("-") : "";
                    if (!t[o]) return t[o] = !0, e(...r)
                }
            }
            let h = i.ModuleContainer.injectable()(r = function(e, t) {
                return i.ModuleContainer.inject(u.b)(e, void 0, 0)
            }(r = function(e, t) {
                return i.ModuleContainer.inject(o.ZLoggerFactory)(e, void 0, 1)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === u.b ? Object : u.b, void 0 === o.ZLoggerFactory ? Object : o.ZLoggerFactory])(r = class extends l.a {
                constructor(e, t) {
                    super(), this.configurationManager = e, this.logger = void 0, this.dbSchema = null, this.logger = t.createZLogger("db", ["adapter-manager"]), this.closeDatabase = m(this.closeDatabase.bind(this)), this.closeAllDatabases = m(this.closeAllDatabases.bind(this)), this.deleteDatabase = m(this.deleteDatabase.bind(this)), this.deleteAllDatabases = m(this.deleteAllDatabases.bind(this))
                }
                install(e) {
                    this.dbSchema = e
                }
                getAllDBNames() {
                    if (!this.dbSchema) throw new a.v("The adapter manager hasn't been installed yet!");
                    return Object.keys(this.dbSchema)
                }
                async closeDatabase(e) {
                    const t = this.configurationManager.getDatabaseConfigs(e).map((e => this.getSpecificAdapterManager(e.type)));
                    await Promise.all(t.map((t => t.closeDatabase(e))))
                }
                async closeAllDatabases() {
                    const e = this.getAllDBNames(),
                        t = new Set;
                    for (const i of e) {
                        this.configurationManager.getDatabaseConfigs(i).map((e => e.type)).forEach((e => t.add(e)))
                    }
                    const n = i.ModuleContainer.resolve(d.a);
                    await n.waitUntilIdle();
                    const r = [],
                        o = t.values();
                    let s = o.next();
                    for (; !s.done;) {
                        const e = this.getSpecificAdapterManager(Number(s.value));
                        r.push(e.closeAllDatabases()), s = o.next()
                    }
                    await Promise.all(r)
                }
                async deleteDatabase(e) {
                    const t = this.configurationManager.getDatabaseConfigs(e).map((e => this.getSpecificAdapterManager(e.type)));
                    await Promise.all(t.map((t => t.deleteDatabase(e))))
                }
                async deleteAllDatabases() {
                    const e = this.getAllDBNames(),
                        t = new Set;
                    for (const i of e) {
                        this.configurationManager.getDatabaseConfigs(i).map((e => e.type)).forEach((e => t.add(e)))
                    }
                    const n = i.ModuleContainer.resolve(d.a);
                    await n.waitUntilIdle();
                    const r = [],
                        o = t.values();
                    let s = o.next();
                    for (; !s.done;) {
                        const e = this.getSpecificAdapterManager(Number(s.value));
                        r.push(e.deleteAllDatabases()), s = o.next()
                    }
                    await Promise.all(r)
                }
                doesDatabaseExists(e) {
                    const t = this.configurationManager.getDatabaseConfigs(e).map((e => this.getSpecificAdapterManager(e.type)));
                    return Promise.all(t.map((t => t.doesDatabaseExist(e)))).then((e => e.reduce(((e, t) => e && t), !0)))
                }
                getDatabaseAdapter(e, t, n) {
                    return this.getSpecificAdapterManager(t.type).getDatabaseAdapterForPlanner(e, t, n)
                }
                canUse(e) {
                    return e !== s.a.SQLite || this.canIUseSQLite()
                }
                canIUseSQLite() {
                    return !1
                }
                getSpecificAdapterManager(e) {
                    let t = p.b;
                    if (e === s.a.SQLite) t = p.c;
                    const n = i.ModuleContainer.resolve(t);
                    return n.hasAlreadyInitialized || (n.install(this.dbSchema), n.addEventListener(c.a.UnexpectedError, (e => {
                        this.dispatchEvent(new c.d(e.error))
                    }))), n
                }
            }) || r) || r) || r) || r) || r;
            i.ModuleContainer.registerSingleton(l.b, h)
        },
        "0slR": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("db-adapter-builder")
        },
        "12Ui": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("dal-qos-utils")
        },
        18: function(e, t, n) {
            e.exports = n("7F/P")
        },
        "1UUk": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return s
            })), n.d(t, "b", (function() {
                return a
            }));
            var r = n("jDHv"),
                i = n("AH6j"),
                o = n("pjo1");
            n("PmZf");
            class s extends i.b {
                constructor() {
                    super(...arguments), this.session = void 0
                }
                createQueryBuilder(e) {
                    return r.ModuleContainer.resolve(o.a).createQueryBuilder(e)
                }
            }
            const a = Object(r.define)("database-manager")
        },
        "1pet": function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, "MSG_SEEN", (function() {
                return r
            })), n.d(t, "MSG_DELIVERED", (function() {
                return i
            })), n.d(t, "MSG_LOCAL", (function() {
                return o
            })), n.d(t, "MSG_SENT", (function() {
                return s
            })), n.d(t, "MSG_CHECKING_EXIST", (function() {
                return a
            })), n.d(t, "MSG_FORWARDING", (function() {
                return c
            })), n.d(t, "MSG_FILE_EXPIRED", (function() {
                return d
            })), n.d(t, "MSG_UPLOAD_LOCAL", (function() {
                return u
            })), n.d(t, "MSG_RETRY_OLD_UPLOAD", (function() {
                return l
            })), n.d(t, "MSG_WAIT_DENOISE_CONTACT", (function() {
                return p
            })), n.d(t, "MSG_E2EE", (function() {
                return m
            })), n.d(t, "MSG_E2EE_FAILED", (function() {
                return h
            })), n.d(t, "MSG_E2EE_WAIT", (function() {
                return f
            })), n.d(t, "MSG_E2EE_REPLACE_WAITING", (function() {
                return g
            })), n.d(t, "MSG_E2EE_DUPLICATED", (function() {
                return y
            })), n.d(t, "MSG_E2EE_CHANGE_DEVICE", (function() {
                return _
            })), n.d(t, "MSG_E2EE_PENDING", (function() {
                return E
            })), n.d(t, "MSG_E2EE_UNDO", (function() {
                return b
            })), n.d(t, "MSG_FAIL", (function() {
                return I
            })), n.d(t, "MSG_CANCEL", (function() {
                return v
            })), n.d(t, "MSG_READ", (function() {
                return T
            })), n.d(t, "MSG_INFO", (function() {
                return O
            })), n.d(t, "MSG_GROUP_NOTI", (function() {
                return w
            })), n.d(t, "MSG_ERROR_INFO", (function() {
                return P
            })), n.d(t, "MSG_AFTER_READ", (function() {
                return S
            })), n.d(t, "MSG_ARTICLE", (function() {
                return A
            })), n.d(t, "MSG_TEXT", (function() {
                return R
            })), n.d(t, "MSG_STICKER", (function() {
                return M
            })), n.d(t, "MSG_STICKER_2", (function() {
                return N
            })), n.d(t, "MSG_FILE", (function() {
                return C
            })), n.d(t, "MSG_PHOTO", (function() {
                return D
            })), n.d(t, "MSG_PHOTO_2", (function() {
                return L
            })), n.d(t, "MSG_VOICE", (function() {
                return U
            })), n.d(t, "MSG_DOODLE", (function() {
                return x
            })), n.d(t, "MSG_GIF", (function() {
                return k
            })), n.d(t, "MSG_CONTACT", (function() {
                return B
            })), n.d(t, "MSG_VIDEO", (function() {
                return j
            })), n.d(t, "MSG_LOCATION", (function() {
                return F
            })), n.d(t, "MSG_UNDO", (function() {
                return G
            })), n.d(t, "MSG_OA", (function() {
                return q
            })), n.d(t, "MSG_ECARD", (function() {
                return H
            })), n.d(t, "MSG_POLL", (function() {
                return z
            })), n.d(t, "MSG_INFO_CHAT", (function() {
                return K
            })), n.d(t, "MSG_DEL_EVERYONE", (function() {
                return W
            })), n.d(t, "MSG_VANISH", (function() {
                return V
            })), n.d(t, "MSG_E2EE_DECRYPT_FAILED", (function() {
                return Y
            })), n.d(t, "MSG_E2EE_PENDING_DATA", (function() {
                return $
            })), n.d(t, "MSG_UNKNOWN", (function() {
                return Q
            })), n.d(t, "MSG_PHOTO_GROUP", (function() {
                return X
            })), n.d(t, "MSG_STICKER_GROUP", (function() {
                return Z
            })), n.d(t, "MSG_FRIEND_SENT_REQUEST", (function() {
                return J
            })), n.d(t, "MSG_SUGGEST_IN_CHAT", (function() {
                return ee
            })), n.d(t, "MSG_TODO", (function() {
                return te
            })), n.d(t, "MSG_TODO_DONE", (function() {
                return ne
            })), n.d(t, "MSG_PHOTO_THUMB_DONE", (function() {
                return re
            })), n.d(t, "MSG_FOLDER", (function() {
                return ie
            })), n.d(t, "MSG_SUBTYPE_FILE_EEXC", (function() {
                return oe
            })), n.d(t, "MSG_LINK_CLIENT", (function() {
                return se
            })), n.d(t, "MSG_SUBTYPE_PHOTO", (function() {
                return ae
            })), n.d(t, "MSG_SUBTYPE_GIF", (function() {
                return ce
            })), n.d(t, "MSG_SUBTYPE_LINK", (function() {
                return de
            })), n.d(t, "MSG_SUBTYPE_MEDIA_VIDEO", (function() {
                return ue
            })), n.d(t, "DEST_TYPING", (function() {
                return le
            })), n.d(t, "FILE_FTYPE", (function() {
                return pe
            })), n.d(t, "VOICE_TYPE", (function() {
                return me
            })), n.d(t, "FILE_FTYPE_TYPE", (function() {
                return he
            })), n.d(t, "FILE_UP_SRC", (function() {
                return fe
            })), n.d(t, "FILE_READER", (function() {
                return ge
            })), n.d(t, "NET_ERRORS", (function() {
                return ye
            })), n.d(t, "MSG_FOLDER_STATE", (function() {
                return _e
            })), n.d(t, "DOWNLOAD_TO_FORWARD", (function() {
                return Ee
            })), n.d(t, "MSG_SRC", (function() {
                return be
            })), n.d(t, "MSG_PREVIEW_SRC", (function() {
                return Ie
            })), n.d(t, "LOGIN_PAGE", (function() {
                return ve
            })), n.d(t, "APP_PAGE", (function() {
                return Te
            })), n.d(t, "AUTH_PAGE", (function() {
                return Oe
            })), n.d(t, "GROUPID_PREFIX", (function() {
                return we
            })), n.d(t, "OA_ID_PREFIX", (function() {
                return Pe
            })), n.d(t, "INITIAL_LOCAL_MSG_ID_PREFIX", (function() {
                return Se
            })), n.d(t, "SEARCH_FRIENDS", (function() {
                return Ae
            })), n.d(t, "SEARCH_GROUPS", (function() {
                return Re
            })), n.d(t, "SEARCH_CLOSEFRIENDS", (function() {
                return Me
            })), n.d(t, "SEARCH_MESSAGES", (function() {
                return Ne
            })), n.d(t, "SEARCH_CONTACTS", (function() {
                return Ce
            })), n.d(t, "SEARCH_ALL", (function() {
                return De
            })), n.d(t, "ACCENT", (function() {
                return Le
            })), n.d(t, "K_LEFT", (function() {
                return Ue
            })), n.d(t, "K_UP", (function() {
                return xe
            })), n.d(t, "K_RIGHT", (function() {
                return ke
            })), n.d(t, "K_DOWN", (function() {
                return Be
            })), n.d(t, "K_ENTER", (function() {
                return je
            })), n.d(t, "K_ESC", (function() {
                return Fe
            })), n.d(t, "K_SPACE", (function() {
                return Ge
            })), n.d(t, "K_F1", (function() {
                return qe
            })), n.d(t, "K_F2", (function() {
                return He
            })), n.d(t, "K_F3", (function() {
                return ze
            })), n.d(t, "K_F4", (function() {
                return Ke
            })), n.d(t, "K_TAB", (function() {
                return We
            })), n.d(t, "K_L", (function() {
                return Ve
            })), n.d(t, "K_F", (function() {
                return Ye
            })), n.d(t, "K_N", (function() {
                return $e
            })), n.d(t, "K_S", (function() {
                return Qe
            })), n.d(t, "K_P", (function() {
                return Xe
            })), n.d(t, "K_T", (function() {
                return Ze
            })), n.d(t, "K_B", (function() {
                return Je
            })), n.d(t, "K_I", (function() {
                return et
            })), n.d(t, "K_1", (function() {
                return tt
            })), n.d(t, "K_2", (function() {
                return nt
            })), n.d(t, "K_3", (function() {
                return rt
            })), n.d(t, "K_DEL", (function() {
                return it
            })), n.d(t, "K_PAGEUP", (function() {
                return ot
            })), n.d(t, "K_PAGEDOWN", (function() {
                return st
            })), n.d(t, "K_HOME", (function() {
                return at
            })), n.d(t, "K_END", (function() {
                return ct
            })), n.d(t, "K_SHIFT", (function() {
                return dt
            })), n.d(t, "K_CTRL", (function() {
                return ut
            })), n.d(t, "K_ALT", (function() {
                return lt
            })), n.d(t, "K_CMD_LEFT", (function() {
                return pt
            })), n.d(t, "K_CMD_RIGHT", (function() {
                return mt
            })), n.d(t, "K_CAPLOCK", (function() {
                return ht
            })), n.d(t, "Alt", (function() {
                return ft
            })), n.d(t, "CmdOrCtrl", (function() {
                return gt
            })), n.d(t, "Ctrl", (function() {
                return yt
            })), n.d(t, "HOTKEY_FOCUS", (function() {
                return _t
            })), n.d(t, "HOTKEY_FUNC", (function() {
                return Et
            })), n.d(t, "K_BACK_SPACE", (function() {
                return bt
            })), n.d(t, "K_COLON", (function() {
                return It
            })), n.d(t, "K_DASH", (function() {
                return vt
            })), n.d(t, "K_PERIOD", (function() {
                return Tt
            })), n.d(t, "SET_MUTE", (function() {
                return Ot
            })), n.d(t, "UNSET_MUTE", (function() {
                return wt
            })), n.d(t, "ALREADY_BLOCK_ERROR_CODE", (function() {
                return Pt
            })), n.d(t, "SET_BLOCK", (function() {
                return St
            })), n.d(t, "UNSET_BLOCK", (function() {
                return At
            })), n.d(t, "FRIEND_TYPE_NORMAL", (function() {
                return Rt
            })), n.d(t, "FRIEND_TYPE_OA", (function() {
                return Mt
            })), n.d(t, "STORAGE_VERSION", (function() {
                return Nt
            })), n.d(t, "STORAGE_VERSION_KEY", (function() {
                return Ct
            })), n.d(t, "CLI_MSG_TYPE_TEXT", (function() {
                return Dt
            })), n.d(t, "CLI_MSG_TYPE_VOICE", (function() {
                return Lt
            })), n.d(t, "CLI_MSG_TYPE_PHOTO", (function() {
                return Ut
            })), n.d(t, "CLI_MSG_TYPE_STICKER", (function() {
                return xt
            })), n.d(t, "CLI_MSG_TYPE_DOODLE", (function() {
                return kt
            })), n.d(t, "CLI_MSG_TYPE_CONTACT", (function() {
                return Bt
            })), n.d(t, "CLI_MSG_TYPE_LINK", (function() {
                return jt
            })), n.d(t, "CLI_MSG_TYPE_VIDEO", (function() {
                return Ft
            })), n.d(t, "CLI_MSG_TYPE_FILE", (function() {
                return Gt
            })), n.d(t, "CLI_MSG_TYPE_GIF", (function() {
                return qt
            })), n.d(t, "CLI_MSG_TYPE_LOCATION", (function() {
                return Ht
            })), n.d(t, "MSGTYPE_FORWARD_FILE", (function() {
                return zt
            })), n.d(t, "MSGTYPE_FORWARD_PHOTO", (function() {
                return Kt
            })), n.d(t, "MSGTYPE_FORWARD_VOICE", (function() {
                return Wt
            })), n.d(t, "MSGTYPE_FORWARD_GIF", (function() {
                return Vt
            })), n.d(t, "MSGTYPE_FORWARD_VIDEO", (function() {
                return Yt
            })), n.d(t, "MSGTYPE_FORWARD_CONTACT", (function() {
                return $t
            })), n.d(t, "MSGTYPE_FORWARD_LOCATION", (function() {
                return Qt
            })), n.d(t, "MSGTYPE_FORWARD_TEXT", (function() {
                return Xt
            })), n.d(t, "MSGTYPE_FORWARD_STICKER", (function() {
                return Zt
            })), n.d(t, "MSGTYPE_FORWARD_LINK", (function() {
                return Jt
            })), n.d(t, "IMAGE_TYPE_PNG", (function() {
                return en
            })), n.d(t, "IMAGE_TYPE_JPEG", (function() {
                return tn
            })), n.d(t, "IMAGE_TYPE_GIF", (function() {
                return nn
            })), n.d(t, "LINK_TYPE_PDF", (function() {
                return rn
            })), n.d(t, "LOGIN_TYPE_PASSWORD", (function() {
                return on
            })), n.d(t, "LOGIN_TYPE_QR", (function() {
                return sn
            })), n.d(t, "LOGIN_TYPE_FB", (function() {
                return an
            })), n.d(t, "LANG_INDEX_VI", (function() {
                return cn
            })), n.d(t, "LANG_INDEX_EN", (function() {
                return dn
            })), n.d(t, "FRIEND_REQUEST_TYPE_SUGGEST", (function() {
                return un
            })), n.d(t, "FRIEND_REQUEST_TYPE_REQUEST", (function() {
                return ln
            })), n.d(t, "FRIEND_REQUEST_SRC_GLOBAL_PHONE", (function() {
                return pn
            })), n.d(t, "FRIEND_REQUEST_SRC_GLOBAL_USERNAME", (function() {
                return mn
            })), n.d(t, "FRIEND_REQUEST_SRC_FIND_FRIEND_FORM", (function() {
                return hn
            })), n.d(t, "FRIEND_REQUEST_SRC_CONTACT_LIST_SUGGESTION", (function() {
                return fn
            })), n.d(t, "FRIEND_REQUEST_SRC_GROUP_CHAT", (function() {
                return gn
            })), n.d(t, "FRIEND_REQUEST_SRC_GROUP_LIST", (function() {
                return yn
            })), n.d(t, "FRIEND_REQUEST_SRC_ECARD", (function() {
                return _n
            })), n.d(t, "FRIEND_REQUEST_SRC_ZALO_ME_PHONE", (function() {
                return En
            })), n.d(t, "FRIEND_REQUEST_SRC_ZALO_ME_USERNAME", (function() {
                return bn
            })), n.d(t, "FRIEND_REQUEST_SRC_NEARBY", (function() {
                return In
            })), n.d(t, "FRIEND_REQUEST_SRC_FRIEND_RADAR", (function() {
                return vn
            })), n.d(t, "FRIEND_REQUEST_SRC_WIFI_FRIENDS", (function() {
                return Tn
            })), n.d(t, "FRIEND_REQUEST_SRC_DATA_MINING", (function() {
                return On
            })), n.d(t, "FRIEND_REQUEST_SRC_ZING_ME", (function() {
                return wn
            })), n.d(t, "FRIEND_REQUEST_SRC_FACEBOOK", (function() {
                return Pn
            })), n.d(t, "FRIEND_REQUEST_SRC_GOOGLE", (function() {
                return Sn
            })), n.d(t, "FRIEND_REQUEST_SRC_PHONE_CONVERSATION", (function() {
                return An
            })), n.d(t, "FRIEND_REQUEST_SRC_PHONE_FEED", (function() {
                return Rn
            })), n.d(t, "FRIEND_REQUEST_SRC_CHAT", (function() {
                return Mn
            })), n.d(t, "FRIEND_REQUEST_SRC_LAN", (function() {
                return Nn
            })), n.d(t, "FRIEND_REQUEST_MINING", (function() {
                return Cn
            })), n.d(t, "FRIEND_REQUEST_COUPLE", (function() {
                return Dn
            })), n.d(t, "FRIEND_REQUEST_GROUP_PENDING_REVIEW", (function() {
                return Ln
            })), n.d(t, "FRIEND_REQUEST_SRC_QR_CODE", (function() {
                return Un
            })), n.d(t, "CREATE_POLL_SRC_CHAT_BAR", (function() {
                return xn
            })), n.d(t, "CREATE_POLL_SRC_GROUP_BOARD", (function() {
                return kn
            })), n.d(t, "CREATE_POLL_SRC_GROUP_BOARD_PLUS", (function() {
                return Bn
            })), n.d(t, "CREATE_POLL_SRC_MENTION", (function() {
                return jn
            })), n.d(t, "CREATE_POLL_SRC_MSGFOOTER", (function() {
                return Fn
            })), n.d(t, "CREATE_POLL_SRC_UNKNOWN", (function() {
                return Gn
            })), n.d(t, "CREATE_NOTICE_SRC_CHAT_BAR", (function() {
                return qn
            })), n.d(t, "CREATE_NOTICE_SRC_GROUP_BOARD", (function() {
                return Hn
            })), n.d(t, "CREATE_NOTICE_SRC_GROUP_BOARD_PLUS", (function() {
                return zn
            })), n.d(t, "CREATE_NOTICE_SRC_MENTION", (function() {
                return Kn
            })), n.d(t, "CREATE_NOTICE_SRC_MSGINFO", (function() {
                return Wn
            })), n.d(t, "CREATE_NOTICE_SRC_KEYWORD", (function() {
                return Vn
            })), n.d(t, "CREATE_NOTICE_SRC_UNKNOWN", (function() {
                return Yn
            })), n.d(t, "EXTRA_BUTTON_REPLY", (function() {
                return $n
            })), n.d(t, "EXTRA_BUTTON_REMIND", (function() {
                return Qn
            })), n.d(t, "EXTRA_BUTTON_PIN", (function() {
                return Xn
            })), n.d(t, "EXTRA_BUTTON_ADD_FRIEND", (function() {
                return Zn
            })), n.d(t, "EXTRA_BUTTON_TODO", (function() {
                return Jn
            })), n.d(t, "EXTRA_BUTTON_CREATE_GROUP", (function() {
                return er
            })), n.d(t, "EXTRA_BUTTON_RECEIVE_TODO", (function() {
                return tr
            })), n.d(t, "EXTRA_BUTTON_SIMPLE_TEXT", (function() {
                return nr
            })), n.d(t, "EXTRA_BUTTON_CREATE_PRODUCT_CATALOG", (function() {
                return rr
            })), n.d(t, "PARSE_FROM_KEYWORD", (function() {
                return ir
            })), n.d(t, "TEXT_TOPIC", (function() {
                return or
            })), n.d(t, "LINK_TOPIC", (function() {
                return sr
            })), n.d(t, "MSG_TOPIC", (function() {
                return ar
            })), n.d(t, "POLL_TOPIC", (function() {
                return cr
            })), n.d(t, "REMINDER_TOPIC", (function() {
                return dr
            })), n.d(t, "POLL_INFO_CREATE", (function() {
                return ur
            })), n.d(t, "POLL_INFO_SHARE", (function() {
                return lr
            })), n.d(t, "POLL_INFO_JOIN", (function() {
                return pr
            })), n.d(t, "POLL_INFO_CHANGE_OPTION", (function() {
                return mr
            })), n.d(t, "FILE_TYPE_RECENT", (function() {
                return hr
            })), n.d(t, "FILE_TYPE_PHOTO", (function() {
                return fr
            })), n.d(t, "FILE_TYPE_DOWNLOADED", (function() {
                return gr
            })), n.d(t, "FILE_TYPE_GOOGLE_DRIVE", (function() {
                return yr
            })), n.d(t, "FILE_TYPE_DROPBOX", (function() {
                return _r
            })), n.d(t, "ACTIVE_TYPE_REGISTER", (function() {
                return Er
            })), n.d(t, "ACTIVE_TYPE_LOGIN_FACEBOOK", (function() {
                return br
            })), n.d(t, "ACTIVE_TYPE_LOGIN", (function() {
                return Ir
            })), n.d(t, "MSG_BUBBLE_LAYOUT_TYPE_SMALL", (function() {
                return vr
            })), n.d(t, "MSG_BUBBLE_LAYOUT_TYPE_NO_BORDER", (function() {
                return Tr
            })), n.d(t, "CHAT_WIDTH_LIM", (function() {
                return Or
            })), n.d(t, "BANNER_ACTION_OPEN_URL", (function() {
                return wr
            })), n.d(t, "BANNER_ACTION_SEND_MSG", (function() {
                return Pr
            })), n.d(t, "BANNER_ACTION_CREATE_EMPTY_GROUP", (function() {
                return Sr
            })), n.d(t, "BANNER_ACTION_SEND_ECARD_EVENT", (function() {
                return Ar
            })), n.d(t, "BANNER_POS_TAB_MSG_HEADER", (function() {
                return Rr
            })), n.d(t, "BANNER_POS_TAB_CONTACT_HEADER", (function() {
                return Mr
            })), n.d(t, "BANNER_POS_TAB_GROUP_HEADER", (function() {
                return Nr
            })), n.d(t, "BANNER_POS_TAB_FILE_HEADER", (function() {
                return Cr
            })), n.d(t, "BANNER_POS_CSC_HEADER", (function() {
                return Dr
            })), n.d(t, "BANNER_POS_EMPTY_SCREEN", (function() {
                return Lr
            })), n.d(t, "SIDEBAR_TOP_AVATAR", (function() {
                return Ur
            })), n.d(t, "SIDEBAR_LEFT_MENU", (function() {
                return xr
            })), n.d(t, "DEFAULT_AVATAR", (function() {
                return kr
            })), n.d(t, "OPTIONAL_UPDATE", (function() {
                return Br
            })), n.d(t, "REQUIRED_UPDATE", (function() {
                return jr
            })), n.d(t, "CONVERSATION_ITEM_HEIGHT", (function() {
                return Fr
            })), n.d(t, "CONTACT_ITEM_HEIGHT", (function() {
                return Gr
            })), n.d(t, "CONTACT_LABEL_HEIGHT", (function() {
                return qr
            })), n.d(t, "NOTI_ITEM_HEIGHT", (function() {
                return Hr
            })), n.d(t, "SEARCH_ITEM_HEIGHT", (function() {
                return zr
            })), n.d(t, "MSG_TEXT_CONTENT_ID_PREFIX", (function() {
                return Kr
            })), n.d(t, "GROUP_BOARD_ITEM_TYPE", (function() {
                return Wr
            })), n.d(t, "VIEW_NOTICE_MSG_ACTION", (function() {
                return Vr
            })), n.d(t, "SYNC_MOBILE_MESSAGE", (function() {
                return Yr
            })), n.d(t, "SYNC_DB_STATE", (function() {
                return $r
            })), n.d(t, "MAX_REF_LOAD_TOPIC", (function() {
                return Qr
            })), n.d(t, "GROUP_BOARD_REFRESH_TIMEOUT", (function() {
                return Xr
            })), n.d(t, "TIMEOUT_NEED_REQUEST_PROFILE_FR", (function() {
                return Zr
            })), n.d(t, "TOPIC_ACTION_CREATE", (function() {
                return Jr
            })), n.d(t, "TOPIC_ACTION_UPDATE", (function() {
                return ei
            })), n.d(t, "TOPIC_ACTION_PIN", (function() {
                return ti
            })), n.d(t, "CONV_OT_STATE", (function() {
                return ni
            })), n.d(t, "ON_FEATURE", (function() {
                return ri
            })), n.d(t, "LAST_TIME_FETCH_ME_PREFIX", (function() {
                return ii
            })), n.d(t, "SUBMIT_LAN_DATA", (function() {
                return oi
            })), n.d(t, "RETRY_MSG_TIMEOUT_DEFAULT", (function() {
                return si
            })), n.d(t, "RETRY_MSG_TIMEOUT_LONG", (function() {
                return ai
            })), n.d(t, "UP_TO_DATE", (function() {
                return ci
            })), n.d(t, "OPTIONAL", (function() {
                return di
            })), n.d(t, "REQUIRED", (function() {
                return ui
            })), n.d(t, "SILENT", (function() {
                return li
            })), n.d(t, "UPDATE_UNKNOW_ERR_CODE", (function() {
                return pi
            })), n.d(t, "ERR_STOP_RETRY", (function() {
                return mi
            })), n.d(t, "ERR_KICK_OUT", (function() {
                return hi
            })), n.d(t, "ERR_SESSION_TIMEOUT", (function() {
                return fi
            })), n.d(t, "ERR_SERVER_STOP", (function() {
                return gi
            })), n.d(t, "USER_MODE", (function() {
                return yi
            })), n.d(t, "COMPOSE_SUGGEST", (function() {
                return _i
            })), n.d(t, "FORWARD_ERR_CODE", (function() {
                return Ei
            })), n.d(t, "BUSY_IDLE_TIME", (function() {
                return bi
            })), n.d(t, "REPEAT_NONE", (function() {
                return Ii
            })), n.d(t, "REPEAT_ONCE", (function() {
                return vi
            })), n.d(t, "REPEAT_DAILY", (function() {
                return Ti
            })), n.d(t, "REPEAT_WEEKLY", (function() {
                return Oi
            })), n.d(t, "REPEAT_MONTHLY", (function() {
                return wi
            })), n.d(t, "REPEAT_CUSTOM", (function() {
                return Pi
            })), n.d(t, "fileExt", (function() {
                return Si
            })), n.d(t, "RESIZE_THRESHOLD", (function() {
                return Ai
            })), n.d(t, "MAX_PDF_PREVIEW_SIZE", (function() {
                return Ri
            })), n.d(t, "MAX_DOC_PPT_PREVIEW_SIZE", (function() {
                return Mi
            })), n.d(t, "MAX_EXCEL_PREVIEW_SIZE", (function() {
                return Ni
            })), n.d(t, "MAX_AUTO_DOWNLOAD_SIZE", (function() {
                return Ci
            })), n.d(t, "MAX_FILE_PHOTO_GEN_TIME", (function() {
                return Di
            })), n.d(t, "LAN_ITEM_TYPE", (function() {
                return Li
            })), n.d(t, "GREETING_SAMPLE_VI", (function() {
                return Ui
            })), n.d(t, "GREETING_SAMPLE_EN", (function() {
                return xi
            })), n.d(t, "LAN_TYPE", (function() {
                return ki
            })), n.d(t, "MY_CONNECTION_TYPE", (function() {
                return Bi
            })), n.d(t, "LAST_MESSAGE_ACTION", (function() {
                return ji
            })), n.d(t, "WIN_SIZE_LV", (function() {
                return Fi
            })), n.d(t, "LOCAL_CONVERSATION_TYPE", (function() {
                return Gi
            })), n.d(t, "COMPOSE_CONSTANT", (function() {
                return qi
            })), n.d(t, "FAKE_CONVERSATION_ID", (function() {
                return Hi
            })), n.d(t, "MAX_CHAR_SAY_HI", (function() {
                return zi
            })), n.d(t, "MAX_CHAR_BUSINESS_DESC", (function() {
                return Ki
            })), n.d(t, "MAX_CHAR_BUSINESS_URL", (function() {
                return Wi
            })), n.d(t, "MAX_CHAR_BUSINESS_EMAIL", (function() {
                return Vi
            })), n.d(t, "MAX_CHAR_BUSINESS_ADD", (function() {
                return Yi
            })), n.d(t, "INTERVAL_INFO", (function() {
                return $i
            })), n.d(t, "LINK_THUMB_DEFAULT_SERVER", (function() {
                return Qi
            })), n.d(t, "PROMOTE_FRIEND_SUGGESTION_LIFETIME", (function() {
                return Xi
            })), n.d(t, "PROMOTE_FRIEND_SUGGESTION_MID_INTERVAL", (function() {
                return Zi
            })), n.d(t, "PROMOTE_FRIEND_SUGGESTION_TINY_INTERVAL", (function() {
                return Ji
            })), n.d(t, "SHARE_FROM_MESSAGE", (function() {
                return eo
            })), n.d(t, "SHARE_FROM_MESSAGE_QUICK_ACTION", (function() {
                return to
            })), n.d(t, "SHARE_FROM_MESSAGE_GROUP_QUICK_ACTION", (function() {
                return no
            })), n.d(t, "SHARE_FROM_MESSAGE_RIGHT_ACTION", (function() {
                return ro
            })), n.d(t, "SHARE_FROM_MESSAGE_MULTI_SELECTION", (function() {
                return io
            })), n.d(t, "SHARE_FROM_MEDIA_STORE", (function() {
                return oo
            })), n.d(t, "SHARE_FROM_MEDIA_STORE_SINGLE", (function() {
                return so
            })), n.d(t, "SHARE_FROM_MEDIA_STORE_MULTIPLE", (function() {
                return ao
            })), n.d(t, "SHARE_FROM_MEDIA_STORE_TAB_SINGLE", (function() {
                return co
            })), n.d(t, "SHARE_FROM_MEDIA_STORE_TAB_MULTIPLE", (function() {
                return uo
            })), n.d(t, "SHARE_FROM_PHOTO_VIEW", (function() {
                return lo
            })), n.d(t, "NOTIFICATION_TYPE", (function() {
                return po
            })), n.d(t, "RANDOM_STICKER", (function() {
                return mo
            })), n.d(t, "VIEW_GROUP_PHOTO_SOURCE_CHAT", (function() {
                return ho
            })), n.d(t, "VIEW_GROUP_PHOTO_SOURCE_MEDIA_STORE", (function() {
                return fo
            })), n.d(t, "DEFAULT_LOAD_STATE", (function() {
                return go
            })), n.d(t, "MENTION_ALL_ID", (function() {
                return yo
            })), n.d(t, "MENTION_TYPE_USER", (function() {
                return _o
            })), n.d(t, "MENTION_TYPE_ALL", (function() {
                return Eo
            })), n.d(t, "SGG_SRC_UNKNOWN", (function() {
                return bo
            })), n.d(t, "SGG_SRC_CHATBAR", (function() {
                return Io
            })), n.d(t, "SGG_SRC_SUGGESTION", (function() {
                return vo
            })), n.d(t, "SGG_SRC_RIGHTMENU", (function() {
                return To
            })), n.d(t, "SGG_SRC_EVENT", (function() {
                return Oo
            })), n.d(t, "SGG_SRC_SEARCH_CHATBAR", (function() {
                return wo
            })), n.d(t, "SGG_SRC_SEARCH_RIGHTMENU", (function() {
                return Po
            })), n.d(t, "SGG_SRC_SEARCH_INPUTBOX", (function() {
                return So
            })), n.d(t, "SGG_SRC_BROADCAST", (function() {
                return Ao
            })), n.d(t, "DEFAULT_SUGGEST_SSG_LEN", (function() {
                return Ro
            })), n.d(t, "DEFAULT_SUGGEST_ITEM", (function() {
                return Mo
            })), n.d(t, "GLOBAL_SEARCH_MODE", (function() {
                return No
            })), n.d(t, "CLOSE_SUGGEST_ENTRYPOINT", (function() {
                return Co
            })), n.d(t, "CACHE_MANAGER", (function() {
                return Do
            })), n.d(t, "TODO_ROLE", (function() {
                return Lo
            })), n.d(t, "TODO_TAB_INDEX", (function() {
                return Uo
            })), n.d(t, "TODO_SECTION_INDEX", (function() {
                return xo
            })), n.d(t, "TODO_SECTION_INDEX_V2", (function() {
                return ko
            })), n.d(t, "TODO_TYPE", (function() {
                return Bo
            })), n.d(t, "TODO_CONVERSATION_TYPE", (function() {
                return jo
            })), n.d(t, "USER_ROLE", (function() {
                return Fo
            })), n.d(t, "CHAT_NOTIFICATION_TYPE", (function() {
                return Go
            })), n.d(t, "COLLAPSE_ONE_WEEK", (function() {
                return qo
            })), n.d(t, "COLLAPSE_TWO_WEEK", (function() {
                return Ho
            })), n.d(t, "MAX_TODO_CONTENT", (function() {
                return zo
            })), n.d(t, "MAX_TODO_DESCRIPTION", (function() {
                return Ko
            })), n.d(t, "SIZE_MINI_CHAT_INFO", (function() {
                return Wo
            })), n.d(t, "WIDTH_CHAT_INFO", (function() {
                return Vo
            })), n.d(t, "MIN_WIDTH_WINDOW_APP", (function() {
                return Yo
            })), n.d(t, "MSG_TYPE_MULTI_FW", (function() {
                return $o
            })), n.d(t, "REMINDER_SRC_CHATBAR", (function() {
                return Qo
            })), n.d(t, "REMINDER_SRC_FLOATMENU", (function() {
                return Xo
            })), n.d(t, "REMINDER_SRC_CONTEXTMENU", (function() {
                return Zo
            })), n.d(t, "REMINDER_SRC_EMPTY_LIST", (function() {
                return Jo
            })), n.d(t, "REMINDER_SRC_LIST", (function() {
                return es
            })), n.d(t, "REMINDER_SRC_MSG_SUGGESTION_HIGHLIGHT", (function() {
                return ts
            })), n.d(t, "REMINDER_SRC_MSG_SUGGESTION_BUTTON", (function() {
                return ns
            })), n.d(t, "CLEAR_UNREAD_TYPE", (function() {
                return rs
            })), n.d(t, "ECARD_TYPE", (function() {
                return is
            })), n.d(t, "NOTIFICATION_TAB", (function() {
                return os
            })), n.d(t, "PROFILE_INIT_MODE", (function() {
                return ss
            })), n.d(t, "GROUP_MEMBER_ERROR", (function() {
                return as
            })), n.d(t, "GET_GROUP_INFO_ERROR", (function() {
                return cs
            })), n.d(t, "IMPORTANT_TAB_FILTER", (function() {
                return ds
            })), n.d(t, "OTHERS_TAB_FILTERS", (function() {
                return us
            })), n.d(t, "SIZE_WINDOW", (function() {
                return ls
            })), n.d(t, "MEMBERS_TRACKING_SOURCE", (function() {
                return ps
            })), n.d(t, "INVITION_USER", (function() {
                return ms
            })), n.d(t, "MULTI_GROUP_INTERACTION_SRC", (function() {
                return hs
            })), n.d(t, "MUTUAL_GROUP_SRC", (function() {
                return fs
            })), n.d(t, "STR_DATE_REPLACE", (function() {
                return gs
            })), n.d(t, "SEND_MSG_OBJECT_ERROR", (function() {
                return ys
            })), n.d(t, "SCREEN_POPUP_HIDDEN_CHAT", (function() {
                return _s
            })), n.d(t, "VERSION_ECARD_NEW_FR", (function() {
                return Es
            })), n.d(t, "KEY_REMEMBER", (function() {
                return bs
            })), n.d(t, "KEY_CONFIG_NEW_REMEMBER", (function() {
                return Is
            })), n.d(t, "KEY_CONFIG_OPTION_REMEMBER", (function() {
                return vs
            })), n.d(t, "KEY_SET_VALUE_ACTION_LOG", (function() {
                return Ts
            })), n.d(t, "KEY_ACTION_LOG_USER_DEVICEID", (function() {
                return Os
            })), n.d(t, "OPTION_OLD_REMEMBER", (function() {
                return ws
            })), n.d(t, "OPTION_SHOW_CHECKBOX", (function() {
                return Ps
            })), n.d(t, "OPTION_AUTO_REMEMBER", (function() {
                return Ss
            })), n.d(t, "OPTION_DEFAULT_REMEMBER", (function() {
                return As
            })), n.d(t, "OPEN_BRACKET", (function() {
                return Rs
            })), n.d(t, "CLOSE_BRACKET", (function() {
                return Ms
            })), n.d(t, "EVENT_STATUS", (function() {
                return Ns
            })), n.d(t, "MINI_NOTIFICATION_TYPE", (function() {
                return Cs
            })), n.d(t, "MINI_NOTIFICATION_SUBTYPE", (function() {
                return Ds
            })), n.d(t, "TYPE_POPUP", (function() {
                return Ls
            })), n.d(t, "MAX_POPUP_HEIGHT", (function() {
                return Us
            })), n.d(t, "MAX_POPOP_HEIGHT_NO_PADDING", (function() {
                return xs
            })), n.d(t, "MAX_POPOP_HEIGHT_NO_PADDING_V0", (function() {
                return ks
            })), n.d(t, "MessageConstants", (function() {
                return Bs
            })), n.d(t, "MULTI_PHOTO_SELECTED_TYPE", (function() {
                return js
            })), n.d(t, "KEY_IPC_EDITOR_PHOTO", (function() {
                return Fs
            })), n.d(t, "POLL_STATES", (function() {
                return Gs
            })), n.d(t, "STICKER_EXT", (function() {
                return qs
            })), n.d(t, "STICKER_SOURCE", (function() {
                return Hs
            })), n.d(t, "URGENCY_MODE", (function() {
                return zs
            })), n.d(t, "AVATAR", (function() {
                return Ks
            })), n.d(t, "PENDING_APPROVE_SHOW_TYPE", (function() {
                return Ws
            })), n.d(t, "STATUS_REPORT", (function() {
                return Vs
            })), n.d(t, "SETTING_KEYS", (function() {
                return Ys
            })), n.d(t, "CHARACTER_LENGTH", (function() {
                return $s
            })), n.d(t, "ONE_DAY_MS", (function() {
                return Qs
            })), n.d(t, "ONE_MIN_MS", (function() {
                return Xs
            })), n.d(t, "TokenTypes", (function() {
                return Zs
            })), n.d(t, "MsgSources", (function() {
                return Js
            })), n.d(t, "COMPACT_LEVEL", (function() {
                return ea
            })), n.d(t, "CONV_FILTER", (function() {
                return ta
            })), n.d(t, "FILTER_CONV_TEXT", (function() {
                return na
            })), n.d(t, "ONE_HOUR_MS", (function() {
                return ra
            })), n.d(t, "BUBBLE_MSG_ID", (function() {
                return ia
            })), n.d(t, "MESSAGE_ICON", (function() {
                return oa
            })), n.d(t, "PhotoViewer", (function() {
                return sa
            })), n.d(t, "MODAL_CONFIRM", (function() {
                return aa
            })), n.d(t, "ModalIdentitiesDefine", (function() {
                return ca
            })), n.d(t, "PopoverIdentitiesDefine", (function() {
                return da
            })), n.d(t, "SRC_GET_PROFILE", (function() {
                return ua
            })), n.d(t, "MediaType", (function() {
                return la
            })), n.d(t, "MANUAL_UPDATE_STATUS", (function() {
                return pa
            })), n.d(t, "CATALOG", (function() {
                return ma
            })), n.d(t, "NetWorkError", (function() {
                return ha
            })), n.d(t, "CallMessageAction", (function() {
                return fa
            })), n.d(t, "RecommendType", (function() {
                return ga
            })), n.d(t, "TO_GENERATE_LOCAL_MSGID", (function() {
                return ya
            })), n.d(t, "ACCOUNT_PACKAGES", (function() {
                return _a
            })), n.d(t, "EventFriend", (function() {
                return Ea
            })), n.d(t, "EventGroup", (function() {
                return ba
            })), n.d(t, "ParamsSettingGroup", (function() {
                return Ia
            })), n.d(t, "PromiseStatus", (function() {
                return va
            })), n.d(t, "SRC_VIEW_FRIEND_REQ", (function() {
                return Ta
            })), n.d(t, "MSG_SEGMENT", (function() {
                return Oa
            })), n.d(t, "MEDIA_TYPE", (function() {
                return wa
            })), n.d(t, "GroupPhotoType", (function() {
                return Pa
            })), n.d(t, "BlackListPopupNoti", (function() {
                return Sa
            })), n.d(t, "CONVERSATION_TYPE", (function() {
                return Aa
            })), n.d(t, "FirstLoginLocalStorageKeys", (function() {
                return Ra
            })), n.d(t, "RegisterLocalStorageKeys", (function() {
                return Ma
            })), n.d(t, "ZLoggerLocalStorageKeys", (function() {
                return Na
            })), n.d(t, "SEASONAL_TIP", (function() {
                return Ca
            })), n.d(t, "IN_69_TESTING", (function() {
                return Da
            })), n.d(t, "TAG_NAME_HELPER_EVENTS", (function() {
                return La
            }));
            const r = 3,
                i = 2,
                o = 10,
                s = 1,
                a = -20,
                c = -21,
                d = -22,
                u = -23,
                l = -24,
                p = -25,
                m = 3e3,
                h = 3001,
                f = 3002,
                g = 3005,
                y = 3006,
                _ = 3003,
                E = 3004,
                b = 3007,
                I = -2,
                v = -7,
                T = 4,
                O = -4,
                w = -6,
                P = -5,
                S = 5,
                A = 0,
                R = 1,
                M = 4,
                N = 13,
                C = 19,
                D = 2,
                L = 11,
                U = 3,
                x = 5,
                k = 7,
                B = 6,
                j = 18,
                F = 17,
                G = 20,
                q = 21,
                H = 25,
                z = 26,
                K = -1909,
                W = -27,
                V = -28,
                Y = -29,
                $ = -30,
                Q = -3,
                X = 2503,
                Z = 2502,
                J = 2504,
                ee = 2505,
                te = 2506,
                ne = 2507,
                re = 101,
                ie = 23,
                oe = 24,
                se = 1805,
                ae = 1,
                ce = 2,
                de = 3,
                ue = 2,
                le = {
                    USER: 3,
                    PAGE: 5
                },
                pe = {
                    FILE: 1,
                    FOLDER: 2
                },
                me = {
                    AMR: 5,
                    AAC: 6
                },
                he = {
                    FILE: {
                        NORMAL: 1,
                        EEXC: 2
                    },
                    FOLDER: {
                        NORMAL: 1,
                        ALBUM: 2
                    }
                },
                fe = {
                    NotSet: 0,
                    TextEditor: 1
                },
                ge = {
                    NotSet: 0,
                    TextEditor: 1
                },
                ye = {
                    NO_NETWORK: "net::ERR_INTERNET_DISCONNECTED"
                },
                _e = {
                    ZIPPING: 120,
                    UNZIPPING: 121,
                    DONE_ZIP: 123
                },
                Ee = {
                    DOWNLOAD: 911,
                    UPLOAD: 912
                },
                be = {
                    UNKNOWN: -1,
                    POLL: 1,
                    SYNC_MOBILE_MESSAGE: 2,
                    CLOUD: 3,
                    LOCAL: 5,
                    SYNC_MOBILE_DB: 7,
                    GET_PREVIEW: 8,
                    CLOUD_FIRST: 9,
                    SOCKET: 10,
                    MISS_MSG: 11,
                    CLOUD_LOADER: 12,
                    AUTO_LOADER: 13
                },
                Ie = {
                    UNKNOWN: -1,
                    MSG_CACHE: 1,
                    CONV_CACHE: 2,
                    CONV_ATTR: 3
                },
                ve = "/login",
                Te = "/",
                Oe = "/",
                we = "g",
                Pe = "o",
                Se = ".",
                Ae = 1,
                Re = 2,
                Me = 4,
                Ne = 8,
                Ce = 7,
                De = 15,
                Le = {
                    SAC: 1,
                    HUYEN: 2,
                    HOI: 3,
                    NGA: 4,
                    NANG: 5,
                    UW: 6,
                    OO: 7,
                    AW: 8
                },
                Ue = 37,
                xe = 38,
                ke = 39,
                Be = 40,
                je = 13,
                Fe = 27,
                Ge = 32,
                qe = 112,
                He = 113,
                ze = 114,
                Ke = 115,
                We = 9,
                Ve = 76,
                Ye = 70,
                $e = 78,
                Qe = 83,
                Xe = 80,
                Ze = 84,
                Je = 66,
                et = 73,
                tt = 49,
                nt = 50,
                rt = 51,
                it = 46,
                ot = 33,
                st = 34,
                at = 36,
                ct = 35,
                dt = 16,
                ut = 17,
                lt = 18,
                pt = 91,
                mt = 93,
                ht = 20,
                ft = "Alt+",
                gt = "CmdOrCtrl+",
                yt = "Ctrl+",
                _t = "HOTKEY_FOCUS",
                Et = "HOTKEY_FUNC",
                bt = 8,
                It = 186,
                vt = 189,
                Tt = 190,
                Ot = 1,
                wt = 3,
                Pt = 215,
                St = 1,
                At = 2,
                Rt = 0,
                Mt = 5,
                Nt = "1.0.6",
                Ct = "zapp_version",
                Dt = 1,
                Lt = 31,
                Ut = 32,
                xt = 36,
                kt = 37,
                Bt = 38,
                jt = 40,
                Ft = 44,
                Gt = 46,
                qt = 49,
                Ht = 43,
                zt = 1,
                Kt = 2,
                Wt = 3,
                Vt = 4,
                Yt = 5,
                $t = 6,
                Qt = 7,
                Xt = 8,
                Zt = 9,
                Jt = 10,
                en = 0,
                tn = 1,
                nn = 2,
                rn = 3,
                on = "LOGIN_PASSWORD",
                sn = "LOGIN_QR",
                an = "LOGIN_FB",
                cn = 0,
                dn = 1,
                un = 1,
                ln = 2,
                pn = 85,
                mn = 86,
                hn = 40,
                fn = 41,
                gn = 31,
                yn = 21,
                _n = 32,
                En = 91,
                bn = 92,
                In = 80,
                vn = 83,
                Tn = 84,
                On = 90,
                wn = 42,
                Pn = 43,
                Sn = 44,
                An = 93,
                Rn = 94,
                Mn = 30,
                Nn = 95,
                Cn = 96,
                Dn = 342,
                Ln = 962,
                Un = 47,
                xn = 1,
                kn = 2,
                Bn = 3,
                jn = 4,
                Fn = 5,
                Gn = -1,
                qn = 1,
                Hn = 2,
                zn = 3,
                Kn = 4,
                Wn = 5,
                Vn = 6,
                Yn = -1,
                $n = 1,
                Qn = 2,
                Xn = 3,
                Zn = 4,
                Jn = 5,
                er = 6,
                tr = 7,
                nr = 8,
                rr = 9,
                ir = 1,
                or = 0,
                sr = 1,
                ar = 2,
                cr = 3,
                dr = 4,
                ur = 0,
                lr = 1,
                pr = 2,
                mr = 3,
                hr = "recent",
                fr = "photo",
                gr = "downloaded",
                yr = "googledrive",
                _r = "dropbox",
                Er = 1,
                br = 2,
                Ir = 3,
                vr = 2,
                Tr = 3,
                Or = 520,
                wr = "open_url",
                Pr = "forward_message",
                Sr = "create_empty_group",
                Ar = "send_ecard_event",
                Rr = "tabmsg.header",
                Mr = "tabcontact.header",
                Nr = "tabgroup.header",
                Cr = "tabfile.header",
                Dr = "csc.headerbar",
                Lr = "csc.emptyscreen",
                Ur = "sidebar.topavatar",
                xr = "sidebar.leftmenu",
                kr = "https://s120-ava-talk.zadn.vn/default",
                Br = 1,
                jr = 2,
                Fr = 72,
                Gr = 72,
                qr = 47,
                Hr = 68,
                zr = 72,
                Kr = "mtc-",
                Wr = {
                    ALL: 0,
                    GNOTICE_TOPIC: 1,
                    GNOTICE_MESSAGE: 2,
                    POLL: 3,
                    GSUGGESTION: 4,
                    DATE_TITLE: 5,
                    MORE: -1,
                    LOADMORE: -2,
                    BOTTOM_ALL: -3,
                    BOTTOM_TOPIC: -4,
                    BOTTOM_POLL: -5,
                    BOTTOM_REMINDER: -6
                },
                Vr = {
                    ROLLED_MSG: "ROLLED_MSG",
                    PIN_MSG: "PIN_MSG"
                },
                Yr = {
                    DONT_SYNC: -1,
                    DONE: 0,
                    WAIT_CONFIRM: 1,
                    WAIT_MOBILE_CONFIRM: 2,
                    ERR: 3,
                    WAIT_FOR_DATA: 4
                },
                $r = {
                    DONT_SYNC: -1,
                    START: 1,
                    USR_CONFIRMED_PC: 2,
                    USR_CONFIRMED_MB: 3,
                    WAIT_FOR_DB: 6,
                    DL: 7,
                    PASSWORD: 8,
                    MERGE: 9,
                    MERGING: 10,
                    ABORT: 11,
                    ABORTED: 12,
                    DONE: 14,
                    ERR: 15,
                    RESUME_MERGE: 16,
                    RESUME: 17,
                    ERR_CODE: {
                        ERR_DL: 1,
                        ERR_SEND_CONFRIM: 2,
                        ERR_TIMEOUT: 3,
                        ERR_NO_PERMISSION: 4,
                        ERR_TIMEOUT_DB: 5,
                        ERR_MERGE: 8,
                        ERR_PROCESS_DB_NOT_RESPONSE: 9,
                        ERR_CANT_GET_UIDS: 10,
                        ERR_ABORT: 12,
                        ERR_NO_PROCESS: 13,
                        ERR_INVALID_DB_INFO: 14,
                        ERR_INVALID_ENCRYPT_TYPE: 15,
                        ERR_GET_INFO: 16,
                        ERR_NO_CKEY: 17,
                        ERR_MB_RESTORE: 18,
                        ERR_MB_EXPORT_DB: 19,
                        ERR_DL_NO_NETWORK: 20,
                        ERR_NO_NETWORK: 21,
                        ERR_MERGE_STUCK: 22,
                        ERR_CLIENT_NOT_SUPPORT: 23,
                        ERR_DL_NOSPC: 24,
                        ERR_MERGE_NOSPC: 25
                    },
                    ERR_MERGE_CODE: {
                        NO_PATH: 2,
                        NO_UID: 3,
                        NO_UIN: 4,
                        ERR_DECRYPT: 50,
                        ERR_ENCRYPT: 60,
                        ERR_DE_CP: 7,
                        UNKNOWN: 10,
                        NO_MID: 8,
                        CHANGE_USERID: 9
                    },
                    POPUPEnum: {
                        NOTI: 1,
                        MOBILEGUIDE: 2,
                        CANCELNOTI: 3,
                        STOPNOTI: 4,
                        SYNC_ERR: 5
                    }
                },
                Qr = 20,
                Xr = 864e5,
                Zr = 18e4,
                Jr = 1,
                ei = 2,
                ti = 3,
                ni = {
                    none: 0,
                    needOut: 1,
                    newConv: 2
                },
                ri = {
                    imAddFr: !1,
                    QUICK_EMOJI: !0,
                    POPUP_QUICK_EMOJI: !1,
                    CONTACT_LIST_SUGGEST: !0,
                    FRIEND_CENTER_SETTING: !1,
                    ENABLE_SUGGEST_FRIEND_SECTION_CONTACT_LIST: !1,
                    ENABLE_FRIEND_REQUEST_SECTION_CONTACT_LIST: !1,
                    DISABLE_ACTIVE_LAN_STATUS: !1,
                    SIDEBAR_SCREENSHOT: !0,
                    FRIEND_WP_VERSION_2: !0,
                    COMMENT_TOOLS: !0,
                    TODO_ACROSS_GROUP: !0,
                    NEW_REMINDER_API: !0,
                    ENABLE_SENDTOME_REMINDER: !0,
                    ENABLE_THREADS_LIST: !1
                },
                ii = "me_ts",
                oi = "__lstsbnet_",
                si = 1,
                ai = 2,
                ci = 0,
                di = 1,
                ui = 2,
                li = 3,
                pi = 5091,
                mi = -69,
                hi = 600,
                fi = 102,
                gi = 112,
                yi = {
                    AVAILABLE: 0,
                    AWAY: 1,
                    BUSY: 2,
                    INVISIBLE: 3
                },
                _i = {
                    DEFAULT: "DEFAULT",
                    SEARCH_BY_NAME: "SEARCH_BY_NAME"
                },
                Ei = {
                    EXPIRED: 1,
                    FORWARD_FAIL: 2,
                    SEND_FAIL: 3,
                    STUCK: 4,
                    SERVER_YAWNING: 5,
                    DOWNLOAD_TO_FORWARD: 6
                },
                bi = 5e3,
                Ii = 0,
                vi = 0,
                Ti = 1,
                Oi = 2,
                wi = 3,
                Pi = 4,
                Si = {
                    doc: [".doc", ".docx"],
                    pdf: [".pdf"],
                    pp: [".ppt", "pptx"],
                    excel: [".xlsx", ".xls"],
                    photo: ["jpeg", "jpg", "png"]
                },
                Ai = 2621440,
                Ri = 15728640,
                Mi = 10485760,
                Ni = 5242880,
                Ci = 10485760,
                Di = 3e3,
                Li = {
                    TITLE: 0,
                    DETAIL: 1,
                    MORE_WIFI: 2,
                    MORE_LOCATION: 3,
                    SEPARATOR: 4,
                    MULTI_ITEMS: 5,
                    SINGLE_ITEM: 6,
                    TITLE_HISTORY: 7
                },
                Ui = ["Xin chào, tôi là "],
                xi = ["Hi, I'm "],
                ki = {
                    MAYBE: -1,
                    SAME_WIFI: 1,
                    SAME_LOCATION: 2
                },
                Bi = {
                    WIRE: "Wire",
                    WIRELESS: "Wireless"
                },
                ji = {
                    reminder: "remind_topic"
                },
                Fi = {
                    BOTH: 2,
                    LEFT_INCLUDE: 1,
                    RIGHT_INCLUDE: -1,
                    MID_ONLY: 0
                },
                Gi = {
                    SUGGESTION: 1,
                    BROADCAST: -2
                },
                qi = {
                    DEFAULT: "DEFAULT",
                    SEARCH_BY_NAME: "SEARCH_BY_NAME",
                    RECENT_CONTACT: "RECENT_CONTACT",
                    GROUP: "GROUP",
                    MAX_RECENT: 5,
                    SUGGEST_LIST_ID: 1,
                    SELECTED_LIST_ID: 2,
                    TAB_ALL: "TAB_ALL",
                    TAB_SELECTED: "TAB_SELECTED",
                    TAB_ERROR: "TAB_ERROR",
                    MEMBER_NOTFOUND: 1,
                    MEMBER_UNKNOWN_ERROR: 2,
                    DANGER_TIP: 1,
                    NORMAL_TIP: 2
                },
                Hi = {
                    FRIEND_CENTER: "-1000",
                    GROUP_CENTER: "-2000",
                    NEW_GROUP: "g",
                    BROADCAST_CONV: "b",
                    NIGHT_CHAT: "n"
                },
                zi = 150,
                Ki = 250,
                Wi = 150,
                Vi = 100,
                Yi = 200,
                $i = 6048e5,
                Qi = "https://link.photo.talk.zdn.vn/photolink/720/aHR0cHM6Ly9yZXMtemFsby56YWRuLnZuL3VwbG9hZC9tZWRpYS8yMDE4LzkvMTQvaW1fcGFyc2VsaW5rX2VtcHR5XzE1MzY5MDI2Mjg2MDZfMjM2NjQzLnBuZw==",
                Xi = 6048e5,
                Zi = 864e5,
                Ji = 144e5,
                eo = "SHARE_FROM_MESSAGE",
                to = "SHARE_FROM_MESSAGE_QUICK_ACTION",
                no = "SHARE_FROM_MESSAGE_GROUP_QUICK_ACTION",
                ro = "SHARE_FROM_MESSAGE_RIGHT_ACTION",
                io = "SHARE_FROM_MESSAGE_MULTI_SELECTION",
                oo = "SHARE_FROM_MEDIA_STORE",
                so = "SHARE_FROM_MEDIA_STORE_SINGLE",
                ao = "SHARE_FROM_MEDIA_STORE_MULTIPLE",
                co = "SHARE_FROM_MEDIA_STORE_TAB_SINGLE",
                uo = "SHARE_FROM_MEDIA_STORE_TAB_MULTIPLE",
                lo = "SHARE_FROM_PHOTO_VIEW",
                po = {
                    MENTION: 0,
                    YOU_SENT_REQUEST: 1,
                    YOU_RECEIVED_REQUEST: 2,
                    FR_REQ_AGREE: 3
                },
                mo = [{
                    id: 18009,
                    catId: 10130
                }, {
                    id: 21458,
                    catId: 10302
                }, {
                    id: 16713,
                    catId: 10047
                }, {
                    id: 394,
                    catId: 14
                }],
                ho = 1,
                fo = 2,
                go = {
                    LOADING: 0,
                    RESULT: 1,
                    EMPTY: 2,
                    ERROR: 3
                },
                yo = "-1",
                _o = 0,
                Eo = 1,
                bo = -1,
                Io = 1,
                vo = 2,
                To = 3,
                Oo = 4,
                wo = 5,
                Po = 6,
                So = 7,
                Ao = 8,
                Ro = 4,
                Mo = 85,
                No = {
                    DEFAULT: -1
                },
                Co = {
                    CLICK_CLOSE: 1,
                    SEND_SUGGEST: 2,
                    SEND_MSG: 3,
                    CHANGE_TERM: 4
                },
                Do = {
                    FULLDISK_CHECK_RESULT_EMPTY: 1,
                    COMMAND_LINE_EXIT_CODE_0: 2,
                    COMMAND_LINE_ERROR_UNKNOW: 3,
                    COMMAND_LINE_NOT_SPAWN: 4,
                    THRES_HOLD_COMMAND_LINE_EXIT_CODE_0: 5,
                    THRES_HOLD_COMMAND_LINE_ERROR_UNKNOW: 6,
                    THRES_HOLD_COMMAND_LINE_NOT_SPAWN: 7,
                    GET_FILES_COMMAND_LINE_EXIT_CODE_0: 8,
                    GET_FILES_COMMAND_LINE_ERROR_UNKNOW: 9,
                    GET_FILES_COMMAND_LINE_NOT_SPAWN: 10,
                    FILES_INFO_EXECUTION_ERROR: 11,
                    ROLL_CACHE_EXECUTION_ERROR: 12
                },
                Lo = {
                    ASSIGNEE: 1,
                    ASSIGNER: 2
                },
                Uo = {
                    ALL: -1,
                    I_ASSIGNED: 0,
                    ASSIGNED_TO_ME: 1,
                    DONE: 2,
                    WATCHERS: 3
                },
                xo = {
                    ALL: -1,
                    TODAY: 0,
                    FUTURE: 1,
                    NODATE: 2,
                    EXPIRED: 3
                },
                ko = {
                    ALL: -1,
                    DOING: 0,
                    DONE: 1,
                    OVERDUE: 2,
                    NOT_RECEIVED: 4,
                    DOING_ONLY: 5
                },
                Bo = {
                    ALL: 0,
                    TODO: 1,
                    FINISHED_TODO: 2
                },
                jo = {
                    UNKNOWN: 0,
                    NOT_FOR_WORK: -1,
                    FOR_WORK: 1
                },
                Fo = {
                    BOSS: 1,
                    NONE: 0
                },
                Go = {
                    URGENT: 100,
                    IMPORTANT: 200,
                    MENTION_ME: 300,
                    MENTION_ALL: 400,
                    REACTION: 500
                },
                qo = "one_week",
                Ho = "two_week",
                zo = 2e3,
                Ko = 100,
                Wo = {
                    MIN_HEIGHT: "450px",
                    MAX_HEIGHT: "1080px",
                    WIDTH: "340px",
                    HEIGHT: "70%",
                    PADDING_TOP: "70px",
                    PADDING_RIGHT: "20px",
                    PADDING_TOP_CHATINFO: "3px",
                    PADDING_BOTTOM_CHATINFO: 3
                },
                Vo = 340,
                Yo = 580,
                $o = {
                    TEXT: "1",
                    STICKER: "2",
                    LINK: "3"
                },
                Qo = 100,
                Xo = 101,
                Zo = 102,
                Jo = 103,
                es = 104,
                ts = 105,
                ns = 106,
                rs = {
                    REACTION: 1
                },
                is = {
                    NONE: "0",
                    BIRTHDAY: "1",
                    FRIEND_ACCEPT: "2",
                    FRIEND_ACCEPT_PASSIVE: "3",
                    A7_RETURN_ACTIVE: "4",
                    A7_RETURN_PASSIVE: "5",
                    GROUP_JOIN: "6"
                },
                os = {
                    IMPORTANT_TAB: 1,
                    OTHERS_TAB: 2
                },
                ss = {
                    PROFILE_PAGE: 0,
                    SUGGEST_PAGE: 1,
                    GROUP_MEM_PAGE: 2,
                    MUTUAL_GROUP: 3,
                    PROFILE_GROUP: 4,
                    REPORT_USER: 5,
                    CATALOG_PAGE: 6
                },
                as = {
                    BLOCKED_STRANGER_USER: 122,
                    NOT_A_ZALO_USER: -100,
                    NOT_IN_PHONEBOOK: 244,
                    STRANGER: 245,
                    GROUP_LINK_NOT_AVAILABLE: 246,
                    IGNORED_GROUP: 247,
                    WAIT_FOR_ADMIN_APPROVAL: 248,
                    OVER_MEM_LIMIT: 177,
                    MEMBER_ALREADY: 178,
                    NOT_PERMISSION: 166,
                    ADD_TO_BIG_GROUP: 264,
                    BAN_JOIN_GROUP: 257,
                    WAITING_APPROVAL: 240,
                    EXISTED_WAITING_APPROVAL: 252,
                    OUTDATED_TTL: 280,
                    OVER_LIMIT_TTL_THREAD: 281,
                    OVER_MEM_LIMIT_TTL: 283,
                    BLOCKED_IN_GROUP_BY_ADMIN: 175
                },
                cs = {
                    GROUP_NO_EXIST: 161,
                    NO_MEMBER_IN_GROUP: 164,
                    NO_DATA: -2308
                },
                ds = {
                    ALL: 1,
                    URGENT_MSG: 2,
                    IMPORTANT_MSG: 3,
                    MENTION_ME: 4,
                    MENTION_ALL: 5,
                    UNREAD: 6
                },
                us = {
                    ALL: 1,
                    UNREAD: 2
                },
                ls = {
                    MIN_WIDTH_CHAT_AREA: 420,
                    MIN_WIDTH_LEFT_SIDEBAR: 376,
                    MAX_WIDTH_LEFT_SIDEBAR: 408,
                    WIDTH_RIGHT_SIDEBAR: 344,
                    MIN_WIDTH_CHAT_AREA_TRIGGER_CHANGE_STYLE: 480
                },
                ps = {
                    friend: -1,
                    searchPhoneGlobal: 85,
                    searchUsernameGlobal: 86
                },
                ms = {
                    STRANGER: 1,
                    BLOCK_USER: 2
                },
                hs = {
                    UNKNOWN: -1,
                    PROFILE: 0,
                    MEDIA_STORE: 1,
                    CONTEXT_MENU: 2,
                    OPERATE: 3,
                    REVIEW_RETRY: 4,
                    SUGGESTION: 5
                },
                fs = {
                    PROFILE: 1,
                    RIGHT_MENU: 2
                },
                gs = {
                    weekday: "$weekday$s",
                    day: "$day$s",
                    month: "$month$s",
                    year: "$year$s",
                    hour: "$hour$s",
                    minute: "$minute$s"
                },
                ys = {
                    SEND_LINK_TO_STRANGER: 243
                },
                _s = {
                    NONE: 0,
                    INTRODUCE: 1,
                    CREATE_PIN: 2,
                    CONFIRM_PIN: 3,
                    HIDE_CONV: 4,
                    HIDE_CONV_SUCCESS: 5,
                    OPEN_CONV: 6,
                    UNHIDE_CONV: 7,
                    SET_PIN_SUCCESS: 8,
                    REMOVE_PIN: 9,
                    CHANGE_PIN_STEP_1: 10,
                    CHANGE_PIN_STEP_2: 11,
                    CHANGE_PIN_STEP_3: 13,
                    CHANGE_PIN_SUCCESS: 14,
                    CREATE_PIN_FROM_SETTING: 15,
                    CONFIRM_PIN_FROM_SETTING: 16,
                    UNHIDE_CONV_BY_PIN: 17
                },
                Es = 1,
                bs = "need_set_remember",
                Is = "config_new_remember",
                vs = "config_opt_remember",
                Ts = "set_value_action_log",
                Os = "action_log_device_id",
                ws = 0,
                Ps = 1,
                Ss = 2,
                As = Ss,
                Rs = new Set(["{", "(", "[", "<"]),
                Ms = new Set(["}", ")", "]", ">"]),
                Ns = {
                    NONE: 0,
                    ACCEPT: 1,
                    REJECT: 2
                },
                Cs = {
                    INFO: 0,
                    SUCCESS: 1,
                    WARNING: 2,
                    ERROR: 3
                },
                Ds = {
                    NORMAL: 0,
                    COMPACT: 1
                },
                Ls = {
                    INFO: 0,
                    SUCCESS: 1,
                    WARNING: 2,
                    ERROR: 3
                },
                Us = "calc(100vh - 84px - 58px - 80px - 24px - 2px)",
                xs = "calc(100vh - 84px - 80px - 24px - 2px)",
                ks = "calc(100vh - 30px - 40px)",
                Bs = {
                    MAX_MSG_ID: "9999999999999999",
                    MAX_USER_ID: "99999999999999999999",
                    MAX_SENDDTTM: "9999999999999999",
                    MIN_MSG_ID: "",
                    MIN_USER_ID: "",
                    MIN_SENDDTTM: "",
                    MIN_CONVERSATION_ID: "",
                    MAX_CONVERSATION_ID: "g99999999999999999999"
                },
                js = {
                    TYPE_SELECTED_FULL: 1,
                    TYPE_SELECTED_PARTIAL: 2,
                    TYPE_UNSELECTED: 3
                },
                Fs = "edit-photo",
                Gs = {
                    PENDING: 1,
                    ONGOING: 2,
                    DONE: 3
                },
                qs = {
                    PNG: 0,
                    JPG: 1,
                    WEBP: 2
                },
                Hs = {
                    ZALO: 0,
                    TENOR: 1
                },
                zs = {
                    NORMAL: -1,
                    IMPORTANT: 1,
                    URGENT: 2,
                    MENTION: 3
                },
                Ks = {
                    STRANGER: "stranger",
                    SYSTEM: "system",
                    SUGGEST: "suggest",
                    GROUP: "group",
                    DEFAULTGROUP: "dgroup",
                    DEFAULT: "default",
                    NOT_FOUND: "notfound"
                },
                Ws = {
                    SHOW_ALL: 1,
                    REDDOT: 2,
                    CLOSE: 3
                },
                Vs = {
                    SENSITIVE: 1,
                    ANOYING: 2,
                    FRAUDING: 3,
                    MAX_CHAR_REASON: 1e3
                },
                Ys = {
                    setting_2FA_status: "setting_2FA_status",
                    show_online_status: "show_online_status",
                    show_seen: "show_seen",
                    quick_message_status: "quick_message_status",
                    archived_chat_status: "archived_chat_status"
                },
                $s = 7.5,
                Qs = 864e5,
                Xs = 6e4,
                Zs = {
                    TEXT_TOKEN: 0,
                    EMOJI_TOKEN: 1,
                    LINK_TOKEN: 2,
                    EMAIL_TOKEN: 4,
                    MENTION_TOKEN: 5,
                    NOT_MENTION_TOKEN: 6,
                    HIGH_LIGHT: 7,
                    TEXT: 8,
                    DOTDOTDOT: 9,
                    EMOJI_TOKEN_V2: 10,
                    NEWS_KEYWORD: 11,
                    LANGUAGE_CHANGE: 12,
                    ICON_CONTACT: 13,
                    PHONE_NUMBER: 14
                },
                Js = {
                    SOCKET: "SOCKET",
                    POLLING: "POLLING",
                    UNSET: "UNSET"
                },
                ea = {
                    COMPACT: 0,
                    SEMI_COMPACT: 1,
                    NORMAL: 2
                },
                ta = {
                    ALL: "all",
                    MEDIA: "media_box",
                    STRANGER: "stranger_box",
                    UNREAD: "unread",
                    ARCHIVED: "archived_chat"
                },
                na = Object.values(ta),
                ra = 36e5,
                ia = "bb_msg_id",
                oa = {
                    TEXT: null,
                    URGENT: "icon-solid-alert",
                    IMPORTANT: "icon-solid-important",
                    STICKER: "icon-outline-sticker",
                    FILE: "icon-outline-file",
                    FOLDER: "icon-outline-folder",
                    PHOTO: "icon-outline-picture",
                    LINK: "icon-outline-link",
                    CONTACT: "icon-outline-contact",
                    GIF: "combined-shape",
                    LOCATION: "icon-outline-location",
                    POLL: "icon-outline-poll",
                    VIDEO: "icon-outline-video-2",
                    REMIND: "icon-outline-reminder",
                    CALLING: "Call-To",
                    RECEIVECALL: "Call-Receive",
                    MISSCALL: "Miss-Call",
                    VOICE: "icon-outline-voice-msg",
                    ECARD: "icon-outline-ecard-msg",
                    STICKER_SET: "icon-outline-sticker",
                    DOODLE: "icon-outline-doodle"
                },
                sa = {
                    MaxScale: 7
                },
                aa = {
                    confirmIdentities: "confirm_modal"
                },
                ca = {
                    ADD_ADMIN_COMPOSE: "ADD_ADMIN_COMPOSE",
                    ADD_CONV_LABEL: "ADD_CONV_LABEL",
                    ADD_MEMBER_COMPOSE: "ADD_MEMBER_COMPOSE",
                    APP_DOWNLOAD_UPDATE: "APP_DOWNLOAD_UPDATE",
                    ADD_FRIEND: "ADD_FRIEND",
                    APP_FEEDBACK: "APP_FEEDBACK",
                    APP_INFO: "APP_INFO",
                    APP_UPDATE_INFO: "APP_UPDATE_INFO",
                    ADD_BLOCK_LIST: "ADD_BLOCK_LIST",
                    BLACK_LIST: "BLACK_LIST",
                    BROADCAST_COMPSE: "BROADCAST_COMPSE",
                    BUSY_PREVIEW: "BUSY_PREVIEW",
                    CHANGE_AVT: "CHANGE_AVT",
                    CHANGE_OWNER: "CHANGE_OWNER",
                    CHANGE_PW: "CHANGE_PW",
                    COPY_EXCEL: "COPY_EXCEL",
                    CREATE_GROUP_COMPOSE: "CREATE_GROUP_COMPOSE",
                    EDIT_ALIAS: "EDIT_ALIAS",
                    EMOJI_SETTING: "EMOJI_SETTING",
                    EVENT_ECARD: "EVENT_ECARD",
                    FSS_PREVIEW: "FSS_PREVIEW",
                    EXPORT: "EXPORT",
                    FILE_INTRO: "FILE_INTRO",
                    FILE_PICKER: "FILE_PICKER",
                    FIND_FRIEND: "FIND_FRIEND",
                    FRIEND_PROFILE: "FRIEND_PROFILE",
                    FRIEND_SUGGESTION: "FRIEND_SUGGESTION",
                    GROUP_CALL: "GROUP_CALL",
                    GROUP_POLL_CREATE: "GROUP_POLL_CREATE",
                    GROUP_POLL_VOTE: "GROUP_POLL_VOTE",
                    GROUP_PREVIEW: "GROUP_PREVIEW",
                    GROUP_PREVIEW_MEM: "GROUP_PREVIEW_MEM",
                    GROUP_PROFILE: "GROUP_PROFILE",
                    HIDDEN_CHAT: "HIDDEN_CHAT",
                    HIDDEN_CHAT_POPUP: "HIDDEN_CHAT_POPUP",
                    IMAGE_SHOW: "IMAGE_SHOW",
                    IMPORT: "IMPORT",
                    INVITE_MULTI: "INVITE_MULTI",
                    INVITE_STRANGER: "INVITE_STRANGER",
                    LABEL_INTRO: "LABEL_INTRO",
                    MANAGE_LABEL: "MANAGE_LABEL",
                    MSG_DETAIL: "MSG_DETAIL",
                    MSG_INFO: "MSG_INFO",
                    MUTE: "MUTE",
                    NOTICE_COMPOSE: "NOTICE_COMPOSE",
                    NOTI_GUIDE: "NOTI_GUIDE",
                    PIN_CONVERSATION: "PIN_CONVERSATION",
                    PIN_LIMIT_POPUP: "PIN_LIMIT_POPUP",
                    PIN_LIMIT_MODAL: "PIN_LIMIT_MODAL",
                    POST_ADD_GROUP: "POST_ADD_GROUP",
                    POST_DOWNLOAD: "POST_DOWNLOAD",
                    PW_BACKUP: "PW_BACKUP",
                    RATING: "RATING",
                    REMINDER_COMPOSE: "REMINDER_COMPOSE",
                    SCREENCAP: "SCREENCAP",
                    SEASONAL_TEMPLATE: "SEASONAL_TEMPLATE",
                    SETTINGS: "SETTINGS",
                    SET_APP_LOCK: "SET_APP_LOCK",
                    SHARE_CONTACT: "SHARE_CONTACT",
                    SHARE_MSG_COMPOSE: "SHARE_MSG_COMPOSE",
                    SHORTCUT: "SHORTCUT",
                    SYNC_DB: "SYNC_DB",
                    SYNC_MSG: "SYNC_MSG",
                    TODO_CONGRAT: "TODO_CONGRAT",
                    TODO_EDITOR: "TODO_EDITOR",
                    TODO_MULTI_VIEW: "TODO_MULTI_VIEW",
                    TODO_PREVIEW: "TODO_PREVIEW",
                    UNPIN_POPUP: "UNPIN_POPUP",
                    UNPIN_MODAL: "UNPIN_MODAL",
                    UPDATE_PROFILE: "UPDATE_PROFILE",
                    VIDEO_CALL_SUGGEST: "VIDEO_CALL_SUGGEST",
                    WARNING_CAP_MAC: "WARNING_CAP_MAC",
                    WHITE_LIST_MODAL: "WHITE_LIST_MODAL",
                    CONFIRM_DOWNLOAD_ERROR: "CONFIRM_DOWNLOAD_ERROR",
                    CONFIRM_DELETE_MSG: "CONFIRM_DELETE_MSG",
                    CONFIRM_RECOVER: "CONFIRM_RECOVER",
                    CREATE_GROUP_WITH_FRIEND: "CREATE_GROUP_WITH_FRIEND",
                    REMOVE_MEMBER_NOTIFICATION: "REMOVE_MEMBER_NOTIFICATION",
                    TFE_EDITOR: "TFE_EDITOR",
                    TTL_PICKER: "TTL_PICKER",
                    QM_MANAGER: "QM_MANAGER",
                    QM_MODIFIER: "QM_MODIFIER",
                    QM_DELETION: "QM_DELETION",
                    E2EE_MSG_INFO: "E2EE_MSG_INFO",
                    E2EE_ONBOARDING: "E2EE_ONBOARDING",
                    E2EE_SETUP: "E2EE_SETUP",
                    E2EE_LIMIT_FILE_SIZE: "E2EE_LIMIT_FILE_SIZE",
                    E2EE_DOWNGRADE: "E2EE_DOWNGRADE",
                    E2EE_WARNING: "E2EE_WARNING",
                    E2EE_GROUP_CREATE_FAIL: "E2EE_GROUP_CREATE_FAIL",
                    E2EE_GROUP_ADD_MEM_WARN: "E2EE_GROUP_ADD_MEM_WARN",
                    E2EE_GROUP_ADD_MEM_INFO: "E2EE_GROUP_ADD_MEM_INFO",
                    E2EE_GROUP_INVITE_MULTI_FAIL: "E2EE_GROUP_INVITE_MULTI_FAIL",
                    E2EE_GROUP_DEBUGGER: "E2EE_GROUP_DEBUGGER",
                    CATALOG_CREATE_POPUP: "CATALOG_CREATE_POPUP",
                    CREATE_PRODUCT_POPUP: "CREATE_PRODUCT_POPUP",
                    CREATE_CATALOG_POPUP: "CREATE_CATALOG_POPUP",
                    TOGGLE_CONFIRM_DEL: "TOGGLE_CONFIRM_DEL",
                    MUTE_BANNER_CONFIRM: "MUTE_BANNER_CONFIRM",
                    TOGGLE_POPUP_CPU_PERF: "TOGGLE_POPUP_CPU_PERF",
                    CATALOG_LIST: "CATALOG_LIST",
                    AR_MANAGE: "AR_MANAGE",
                    AR_EDITOR: "AR_EDITOR",
                    AR_THREAD_PICKER: "AR_THREAD_PICKER",
                    BROADCAST_RESEND: "BROADCAST_RESEND",
                    TWO_FACTOR_AUTHENTICATION_OTP: "TWO_FACTOR_AUTHENTICATION_OTP",
                    LIMIT_CONTACT: "LIMIT_CONTACT",
                    POP_PINNED_CONVERSATION: "POP_PINNED_CONVERSATION",
                    SEND_STRESSED_TEST: "SEND_STRESSED_TEST",
                    VIEW_NOTICE: "VIEW_NOTICE",
                    MEDIA_STATUS_DEBUGGER: "MEDIA_STATUS_DEBUGGER",
                    RESMGMT_TEST: "RESMGMT_TEST"
                },
                da = {
                    STICKER_SUGGESTION: "sticker-suggestion",
                    SEASONAL_STICKER: "seasonal-sticker",
                    TAG_NAME_INPUT: "tag-name-input",
                    TAG_NAME_TODO: "tag-name-todo",
                    LEFTBAR_MOREMENU: "leftBar-moreMenu",
                    LEFTBAR_TOOLSMENU: "leftBar-toolsMenu",
                    MEDIA_DOCK_TOOLBAR: "media-dock-toolbar",
                    EMOJI_POP: "emoji-pop",
                    DATE_FILTER_SEARCH_TOOL: "date-filter-search-tool",
                    DATE_FILTER_MEDIA: "date-filter-media",
                    DATE_FILTER_GLOBAL_SEARCH: "date-filter-global-search",
                    STICKER_TAG: "sticker-tag",
                    COLOR_MENU: "color-menmu",
                    CALENDAR: "calendar",
                    CALENDAR_REMINDER: "CALENDAR_REMINDER",
                    CALENDAR_TODO_ADVAN: "CALENDAR_TODO_ADVAN",
                    CALENDAR_TODO_EDITOR: "CALENDAR_TODO_EDITOR",
                    CALENDAR_DATE_PICKER: "CALENDAR_DATE_PICKER",
                    CALENDAR_DROPDOWN_TIME: "CALENDAR_DROPDOWN_TIME",
                    IMPORTANT_MSG_ENTRY: "important-msg-entry",
                    EDIT_LABEL: "edit-label",
                    MANAGE_LABEL: "manage-label",
                    MEDIA_DOCK_TODO: "media-dock-todo",
                    TODO_ADVAN_FILTER: "todo-advan-filter",
                    DROPDOWN: "dropdown",
                    DROPDOWN_INFO_FOLDER: "DROPDOWN_INFO_FOLDER",
                    DROPDOWN_SETTING: "DROPDOWN_SETTING",
                    DROPDOWN_LANGUAGE: "DROPDOWN_LANGUAGE",
                    DROPDOWN_PROXY: "DROPDOWN_PROXY",
                    DROPDOWN_LABEL: "DROPDOWN_LABEL",
                    DROPDOWN_WEEKDAY_PICKER: "DROPDOWN_WEEKDAY_PICKER",
                    DROPDOWN_TODO_MEMBER_ASSIGN: "DROPDOWN_TODO_MEMBER_ASSIGN",
                    DROPDOWN_TODO_MEMBER_FOLLOW: "DROPDOWN_TODO_MEMBER_FOLLOW",
                    DROPDOWN_SINGLE_DEVICE_1: "DROPDOWN_SINGLE_DEVICE_1",
                    DROPDOWN_SINGLE_DEVICE_2: "DROPDOWN_SINGLE_DEVICE_2",
                    DROPDOWN_SINGLE_DEVICE_3: "DROPDOWN_SINGLE_DEVICE_3",
                    DROPDOWN_SINGLE_ASSIGN_MEMBER: "DROPDOWN_SINGLE_ASSIGN_MEMBER",
                    DROPDOWN_SINGLE_ACTIVITIES: "DROPDOWN_SINGLE_ACTIVITIES",
                    DROPDOWN_DATA_PICKER_1: "DROPDOWN_DATA_PICKER_1",
                    DROPDOWN_DATA_PICKER_2: "DROPDOWN_DATA_PICKER_2",
                    DROPDOWN_DATA_PICKER_3: "DROPDOWN_DATA_PICKER_3",
                    DROPDOWN_WEEKDAY_REPEAT: "DROPDOWN_WEEKDAY_REPEAT",
                    INTERNAL_DROPDOWN: "INTERNAL_DROPDOWN",
                    MY_PROFILE: "my-profile",
                    FILTER_LABEL: "filter_label",
                    USER_STATUS: "user_status",
                    GROUP_BOARD_ACTION: "group-board-action",
                    GROUP_BOARD_ITEM: "group-board-item",
                    CONTEXTMENU_CONV_LIST: "contextmenu-conv-list",
                    CONTEXTMENU_CONTACT_LIST: "contextmenu-contact-list",
                    CONTEXTMENU_CONTACT_ITEM: "contextmenu-contact-item",
                    CONTEXTMENU_GROUP_ITEM: "contextmenu-group-item",
                    CONTEXTMENU_RECENT_ITEM: "contextmenu-recent-item",
                    CONTEXTMENU_SEARCH_ITEM: "CONTEXTMENU_SEARCH_ITEM",
                    CONTEXTMENU_GROUP_CENTER: "CONTEXTMENU_GROUP_CENTER",
                    CONTEXTMENU_RECENT_LIST: "CONTEXTMENU_RECENT_LIST",
                    CONTEXTMENU_CONTACT_LIST: "CONTEXTMENU_CONTACT_LIST",
                    CHAT_BOX_INFO: "Chat-box-infor",
                    CHAT_BOX_LIST_1: "chat-box-list-1",
                    CHAT_BOX_LIST_2: "chat-box-list-2",
                    CHAT_BOX_MENTION: "fun-more-setting-1",
                    CHAT_DATA_SORT_FUNCTION: "chat-data-sort-function",
                    CHAT_BOX_START_MSG: "fun-more-setting-2",
                    CHAT_BOX_TOPIC_BANNER: "group-topic",
                    VIEW_NOTICE_MSG_MENU: "view-notice-msg-menu",
                    ECRAD_REMINDER: "ecard-reminder",
                    FILE_MENU_TOOLBAR: "file-menu",
                    SCREEN_SHOT_TOOLBAR: "screenshot-menu",
                    MORE_MENU_TOOLBAR: "toolbar-more-menu",
                    CHAT_BOX_MEDIA: "chat-box-media",
                    CHAT_BOX_MEMBER: "chat-box-member",
                    CHAT_BOX_MUTUAL_GROUP: "chat-box-mutual-group",
                    CHAT_BOX_SET_GROUP: "chat-box-set-group",
                    TOPIC_BANNER: "topic_banner",
                    FONT_SIZE_MENU: "font-size-menu",
                    RICH_TEXT_TOOL: "rich-text-tool",
                    CLOUD_CONTEXT: "cloud-context",
                    FILE_MANAGER: "file-manager",
                    MEDIA_ACTION_FILE_MANAGER: "media-action_filemanager",
                    FILE_PCIKER: "file-picker",
                    CHAT_BOX_VIEW_NOTE_CANCEL: "chat-box-view-note-cancel",
                    CHAT_BOX_VIEW_NOTE_CHANGE: "chat-box-view-note-change",
                    GROUP_POLL_INFO: "group-poll-info",
                    GROUP_POLL_VOTE: "group-poll-vote",
                    GROUP_CENTER: "group-center",
                    MENU_GROUP_CENTER: "menu-group-center",
                    ACTION_GROUP_CENTER: "action-group-center",
                    LABEL_BADGE: "label-badge",
                    LABEL_SHORTCUT: "label-shortcut",
                    IMPORTANT_MSG_ITEM: "important-msg-item",
                    MENTION_ITEM: "mention-item",
                    NOTI_FILTER_BTN: "noti-filter-btn",
                    REACTION_MSG_ITEM: "reaction-msg-item",
                    TODO_ACTION: "todo-action",
                    TODO_BANNER: "todo-banner",
                    TODO_LIST: "todo-list",
                    TODO_PREVIEW: "todo-preview",
                    DROPDOWN_V2: "dropdown-v2",
                    FILE_TYPE_DROPDOWN: "FILE_TYPE_DROPDOWN",
                    SENDER_MEDIA_DROPDOWN: "SENDER_MEDIA_DROPDOWN",
                    SENDER_SEARCH_TOOL_DROPDOWN: "SENDER_SEARCH_TOOL_DROPDOWN",
                    MEDIA_ACTION: "media-action",
                    MEDIA_ACTION_RIGHT_MENU: "MEDIA_ACTION_RIGHT_MENU",
                    MESSAGE_ACTION: "message-action",
                    MULTI_SELECT_MESSAGE: "multi-select-message",
                    MULTI_SELECT_FILES: "multi-select-files",
                    MULTI_SELECT_LINK: "multi-select-link",
                    MULTI_SELECT_IMAGE: "multi-select-image",
                    TAB_CONTAINER: "tab-container",
                    LIST_ROOM_ITEM: "list-room-item",
                    SHOW_ALL_MESSAGE: "show-all-message",
                    MAIN_LANGUAGE: "main-language",
                    LOGIN_PASSWORD: "login-password",
                    SWITCH_LANGUAGE: "switch-language",
                    FILE_TYPE_DROPDOWN_GLOBAL_SEARCH: "FILE_TYPE_DROPDOWN_GLOBAL_SEARCH",
                    SENDER_DROPDOWN_GLOBAL_SEARCH: "SENDER_DROPDOWN_GLOBAL_SEARCH",
                    POP_AVATAR: "popup-avatar",
                    QM_SEARCH: "QuickMessage_Search",
                    QM_DASHBOARD: "QuickMessage_Dashboard",
                    QM_WELCOME: "QuickMessage_Welcome",
                    QM_WELCOME_EXT_MENU: "QuickMessage_Welcome_Ext_Menu",
                    CATALOG_PRODUCT_SUGGESTION: "CatalogProductSuggestion",
                    E2EE_GROUP_DEBUG_DROPDOWN: "E2eeGroupDebugDropdown",
                    CONV_ACTION_MENU: "CONV_ACTION_MENU",
                    CONV_LABEL_MENU: "CONV_LABEL_MENU",
                    CHAT_BOX_SEASONAL: "CHAT_BOX_SEASONAL",
                    ERROR_SENDING_FILE: "ERROR_SENDING_FILE",
                    COMPOSER_TOOL_EMOJI: "COMPOSER_TOOL_EMOJI",
                    COMPOSER_TOOL_STICKER: "COMPOSER_TOOL_STICKER",
                    RESMGMT_CHAT_DATA_SORT_FUNCTION: "chat-data-sort-function",
                    RESMGMT_CHAT_DATA_FILTER_FUNCTION: "chat-data-filter-function",
                    ACTION_FRIEND_LIST: "ACTION_FRIEND_LIST",
                    CONTACT_TAB_FILTER_SORT: "CONTACT_TAB_FILTER_SORT",
                    CONTACT_TAB_FILTER_ARRANGE: "CONTACT_TAB_FILTER_ARRANGE"
                },
                ua = {
                    OTHER: -1,
                    POP_PROFILE: 0,
                    CHAT_VIEW: 1,
                    DONT_REQ_SERVER: 2,
                    FORCE_GET: 3,
                    FULL_DATA: 4,
                    FETCH_MINI_INFO: 5
                },
                la = {
                    Image: "image",
                    File: "file",
                    Link: "link"
                },
                pa = {
                    INITIALIZE: 0,
                    CHECKING: 1,
                    CHECKED_NO_UPDATE: 2,
                    NEED_UPDATE: 3,
                    CHECKED_SILENT_UPDATE: 4,
                    CHECKED_NOTIFY_UPDATE: 5,
                    START_DOWNLOAD: 6,
                    DOWNLOADING: 7,
                    DOWNLOAD_ERROR_RETRY: 8,
                    DOWNLOAD_ERROR: 9,
                    INSTALLING: 10,
                    FALLBACK: 11
                },
                ma = {
                    CATALOG_ID_DEFAULT_NO_EXIST: -1
                },
                ha = {
                    NO_NETWORK: "ERR_NO_NETWORK",
                    TIMEOUT_SENT: "ERR_CONNECTION_TIMED_OUT_SENT",
                    TIMEOUT: "ERR_CONNECTION_TIMED_OUT"
                },
                fa = {
                    MissCall: "recommened.misscall",
                    CallTime: "recommened.calltime",
                    Calling: "recommened.calling",
                    ReceiveCall: "recommened.receivecall"
                },
                ga = {
                    User: "recommened.user",
                    OA: "recommened.vip",
                    Gif: "recommend.gif",
                    Link: "recommened.link"
                },
                ya = -10,
                _a = Object.freeze({
                    BASIC_ACCOUNT: 0,
                    PRO_1_ACCOUNT: 1,
                    PRO_2_ACCOUNT: 2,
                    PRO_3_ACCOUNT: 3
                }),
                Ea = {
                    ADD_FRIEND: "ADD_FRIEND",
                    REMOVE_FRIEND: "REMOVE_FRIEND",
                    BLOCK_FRIEND: "BLOCK_FRIEND",
                    UNBLOCK_FRIEND: "UNBLOCK_FRIEND",
                    UPGRADE_BIZ_PROFILE: "UPGRADE_BIZ_PROFILE",
                    DOWNGRADE_BIZ_PROFILE: "DOWNGRADE_BIZ_PROFILE"
                },
                ba = {
                    JOIN: "JOIN",
                    FETCH_GROUP_LIST: "FETCH_GROUP_LIST",
                    GROUP_INFO_CHANGED: "GROUP_INFO_CHANGED",
                    LEAVE_GROUP: "LEAVE_GROUP",
                    BLOCK_MEMBER: "BLOCK_MEMBER",
                    CHANGE_OWNER: "CHANGE_OWNER",
                    REMOVE_ADMIN: "REMOVE_ADMIN",
                    ADD_ADMIN: "ADD_ADMIN"
                },
                Ia = {
                    ONLY_ADMIN_CHAT: "lockSendMsg",
                    LOCK_CREATE_POLL: "lockCreatePoll",
                    LOCK_CREATE_POST: "lockCreatePost",
                    SIGN_ADMIN_MSG: "signAdminMsg",
                    JOIN_GR_APPROVE: "joinAppr",
                    ONLY_ADMIN_CHANGE_GR_NAME: "blockName",
                    ONLY_ADMIN_SET_TOPIC: "setTopicOnly"
                },
                va = {
                    SUCCESS: "success",
                    ERROR: "error"
                },
                Ta = {
                    CARD_CSC: 32,
                    SEARCH_PHONE_GLOBAL: 85
                },
                Oa = {
                    LINK: 0,
                    MENTION: 1,
                    TEXT: 2,
                    ICON: 3,
                    PHOTO: 4,
                    VIDEO: 5,
                    AVATAR: 6,
                    QUOTE: 7,
                    PRIORITY: 8,
                    RTF: 9,
                    EMOJI: 10,
                    FILE: 11,
                    FOLDER: 12,
                    REMINDER: 13,
                    CONTACT: 14,
                    POLL: 15,
                    STICKER: 16,
                    MAP: 17,
                    AUDIO: 18,
                    GIF: 19
                },
                wa = {
                    MEDIA: "media",
                    LINK: "link",
                    FILE: "file",
                    IMAGE: "image",
                    VIDEO: "video"
                },
                Pa = new Set([D, x, j]),
                Sa = new Set([O, J, ee]),
                Aa = Object.freeze({
                    CLOUD: 1,
                    GROUP: 2,
                    FRIEND: 3
                }),
                Ra = {
                    IS_FIRST_LOGIN: "is_first_login",
                    FIRST_LOGIN_TIME: "first_login_time"
                },
                Ma = {
                    IS_REGISTERED_ON_THIS_DEVICE: "is_registered_on_this_device",
                    TOS_CONFIRMED_DATA: "tos-confirmed-data"
                },
                Na = {
                    RENDERER_CONSOLE_MODE: "renderer_console_mode"
                },
                Ca = {
                    SEASONAL_ID: "SEASONAL_ID",
                    SHOWED: "_show",
                    EFFECT_TIP: "EFFECT_TIP",
                    PREVIEW_TIP: "PREVIEW_TIP"
                },
                Da = !1,
                La = {
                    ON_MODE_CHANGE: "ON_MODE_CHANGE"
                }
        },
        "1uat": function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("MlIO"), function() {
                var e = r,
                    t = e.lib.Hasher,
                    n = e.x64,
                    i = n.Word,
                    o = n.WordArray,
                    s = e.algo;

                function a() {
                    return i.create.apply(i, arguments)
                }
                var c = [a(1116352408, 3609767458), a(1899447441, 602891725), a(3049323471, 3964484399), a(3921009573, 2173295548), a(961987163, 4081628472), a(1508970993, 3053834265), a(2453635748, 2937671579), a(2870763221, 3664609560), a(3624381080, 2734883394), a(310598401, 1164996542), a(607225278, 1323610764), a(1426881987, 3590304994), a(1925078388, 4068182383), a(2162078206, 991336113), a(2614888103, 633803317), a(3248222580, 3479774868), a(3835390401, 2666613458), a(4022224774, 944711139), a(264347078, 2341262773), a(604807628, 2007800933), a(770255983, 1495990901), a(1249150122, 1856431235), a(1555081692, 3175218132), a(1996064986, 2198950837), a(2554220882, 3999719339), a(2821834349, 766784016), a(2952996808, 2566594879), a(3210313671, 3203337956), a(3336571891, 1034457026), a(3584528711, 2466948901), a(113926993, 3758326383), a(338241895, 168717936), a(666307205, 1188179964), a(773529912, 1546045734), a(1294757372, 1522805485), a(1396182291, 2643833823), a(1695183700, 2343527390), a(1986661051, 1014477480), a(2177026350, 1206759142), a(2456956037, 344077627), a(2730485921, 1290863460), a(2820302411, 3158454273), a(3259730800, 3505952657), a(3345764771, 106217008), a(3516065817, 3606008344), a(3600352804, 1432725776), a(4094571909, 1467031594), a(275423344, 851169720), a(430227734, 3100823752), a(506948616, 1363258195), a(659060556, 3750685593), a(883997877, 3785050280), a(958139571, 3318307427), a(1322822218, 3812723403), a(1537002063, 2003034995), a(1747873779, 3602036899), a(1955562222, 1575990012), a(2024104815, 1125592928), a(2227730452, 2716904306), a(2361852424, 442776044), a(2428436474, 593698344), a(2756734187, 3733110249), a(3204031479, 2999351573), a(3329325298, 3815920427), a(3391569614, 3928383900), a(3515267271, 566280711), a(3940187606, 3454069534), a(4118630271, 4000239992), a(116418474, 1914138554), a(174292421, 2731055270), a(289380356, 3203993006), a(460393269, 320620315), a(685471733, 587496836), a(852142971, 1086792851), a(1017036298, 365543100), a(1126000580, 2618297676), a(1288033470, 3409855158), a(1501505948, 4234509866), a(1607167915, 987167468), a(1816402316, 1246189591)],
                    d = [];
                ! function() {
                    for (var e = 0; e < 80; e++) d[e] = a()
                }();
                var u = s.SHA512 = t.extend({
                    _doReset: function() {
                        this._hash = new o.init([new i.init(1779033703, 4089235720), new i.init(3144134277, 2227873595), new i.init(1013904242, 4271175723), new i.init(2773480762, 1595750129), new i.init(1359893119, 2917565137), new i.init(2600822924, 725511199), new i.init(528734635, 4215389547), new i.init(1541459225, 327033209)])
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = this._hash.words, r = n[0], i = n[1], o = n[2], s = n[3], a = n[4], u = n[5], l = n[6], p = n[7], m = r.high, h = r.low, f = i.high, g = i.low, y = o.high, _ = o.low, E = s.high, b = s.low, I = a.high, v = a.low, T = u.high, O = u.low, w = l.high, P = l.low, S = p.high, A = p.low, R = m, M = h, N = f, C = g, D = y, L = _, U = E, x = b, k = I, B = v, j = T, F = O, G = w, q = P, H = S, z = A, K = 0; K < 80; K++) {
                            var W = d[K];
                            if (K < 16) var V = W.high = 0 | e[t + 2 * K],
                                Y = W.low = 0 | e[t + 2 * K + 1];
                            else {
                                var $ = d[K - 15],
                                    Q = $.high,
                                    X = $.low,
                                    Z = (Q >>> 1 | X << 31) ^ (Q >>> 8 | X << 24) ^ Q >>> 7,
                                    J = (X >>> 1 | Q << 31) ^ (X >>> 8 | Q << 24) ^ (X >>> 7 | Q << 25),
                                    ee = d[K - 2],
                                    te = ee.high,
                                    ne = ee.low,
                                    re = (te >>> 19 | ne << 13) ^ (te << 3 | ne >>> 29) ^ te >>> 6,
                                    ie = (ne >>> 19 | te << 13) ^ (ne << 3 | te >>> 29) ^ (ne >>> 6 | te << 26),
                                    oe = d[K - 7],
                                    se = oe.high,
                                    ae = oe.low,
                                    ce = d[K - 16],
                                    de = ce.high,
                                    ue = ce.low;
                                V = (V = (V = Z + se + ((Y = J + ae) >>> 0 < J >>> 0 ? 1 : 0)) + re + ((Y += ie) >>> 0 < ie >>> 0 ? 1 : 0)) + de + ((Y += ue) >>> 0 < ue >>> 0 ? 1 : 0), W.high = V, W.low = Y
                            }
                            var le, pe = k & j ^ ~k & G,
                                me = B & F ^ ~B & q,
                                he = R & N ^ R & D ^ N & D,
                                fe = M & C ^ M & L ^ C & L,
                                ge = (R >>> 28 | M << 4) ^ (R << 30 | M >>> 2) ^ (R << 25 | M >>> 7),
                                ye = (M >>> 28 | R << 4) ^ (M << 30 | R >>> 2) ^ (M << 25 | R >>> 7),
                                _e = (k >>> 14 | B << 18) ^ (k >>> 18 | B << 14) ^ (k << 23 | B >>> 9),
                                Ee = (B >>> 14 | k << 18) ^ (B >>> 18 | k << 14) ^ (B << 23 | k >>> 9),
                                be = c[K],
                                Ie = be.high,
                                ve = be.low,
                                Te = H + _e + ((le = z + Ee) >>> 0 < z >>> 0 ? 1 : 0),
                                Oe = ye + fe;
                            H = G, z = q, G = j, q = F, j = k, F = B, k = U + (Te = (Te = (Te = Te + pe + ((le += me) >>> 0 < me >>> 0 ? 1 : 0)) + Ie + ((le += ve) >>> 0 < ve >>> 0 ? 1 : 0)) + V + ((le += Y) >>> 0 < Y >>> 0 ? 1 : 0)) + ((B = x + le | 0) >>> 0 < x >>> 0 ? 1 : 0) | 0, U = D, x = L, D = N, L = C, N = R, C = M, R = Te + (ge + he + (Oe >>> 0 < ye >>> 0 ? 1 : 0)) + ((M = le + Oe | 0) >>> 0 < le >>> 0 ? 1 : 0) | 0
                        }
                        h = r.low = h + M, r.high = m + R + (h >>> 0 < M >>> 0 ? 1 : 0), g = i.low = g + C, i.high = f + N + (g >>> 0 < C >>> 0 ? 1 : 0), _ = o.low = _ + L, o.high = y + D + (_ >>> 0 < L >>> 0 ? 1 : 0), b = s.low = b + x, s.high = E + U + (b >>> 0 < x >>> 0 ? 1 : 0), v = a.low = v + B, a.high = I + k + (v >>> 0 < B >>> 0 ? 1 : 0), O = u.low = O + F, u.high = T + j + (O >>> 0 < F >>> 0 ? 1 : 0), P = l.low = P + q, l.high = w + G + (P >>> 0 < q >>> 0 ? 1 : 0), A = p.low = A + z, p.high = S + H + (A >>> 0 < z >>> 0 ? 1 : 0)
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            t = e.words,
                            n = 8 * this._nDataBytes,
                            r = 8 * e.sigBytes;
                        return t[r >>> 5] |= 128 << 24 - r % 32, t[30 + (r + 128 >>> 10 << 5)] = Math.floor(n / 4294967296), t[31 + (r + 128 >>> 10 << 5)] = n, e.sigBytes = 4 * t.length, this._process(), this._hash.toX32()
                    },
                    clone: function() {
                        var e = t.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    },
                    blockSize: 32
                });
                e.SHA512 = t._createHelper(u), e.HmacSHA512 = t._createHmacHelper(u)
            }(), r.SHA512)
        },
        "1vzR": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("uS0h"),
                o = n("rCOr");

            function s(e, t, n, i) {
                return new r.Token(r.Type.map, i, n)
            }

            function a(e, t) {
                i.encodeUintValue(e, r.Type.map.majorEncoded, t.value)
            }
            a.compareTokens = i.encodeUint.compareTokens, a.encodedSize = function(e) {
                return i.encodeUintValue.encodedSize(e.value)
            }, t.decodeMap16 = function(e, t, n, r) {
                return s(0, 0, 3, i.readUint16(e, t + 1, r))
            }, t.decodeMap32 = function(e, t, n, r) {
                return s(0, 0, 5, i.readUint32(e, t + 1, r))
            }, t.decodeMap64 = function(e, t, n, r) {
                const a = i.readUint64(e, t + 1, r);
                if ("bigint" == typeof a) throw new Error(`${o.decodeErrPrefix} 64-bit integer map lengths not supported`);
                return s(0, 0, 9, a)
            }, t.decodeMap8 = function(e, t, n, r) {
                return s(0, 0, 2, i.readUint8(e, t + 1, r))
            }, t.decodeMapCompact = function(e, t, n, r) {
                return s(0, 0, 1, n)
            }, t.decodeMapIndefinite = function(e, t, n, r) {
                if (!1 === r.allowIndefinite) throw new Error(`${o.decodeErrPrefix} indefinite length items not allowed`);
                return s(0, 0, 1, 1 / 0)
            }, t.encodeMap = a
        },
        "2gN3": function(e, t, n) {
            var r = n("Kz5y")["__core-js_shared__"];
            e.exports = r
        },
        "39uu": function(e, t) {
            e.exports = function(e) {
                return "object" == typeof e ? null !== e : "function" == typeof e
            }
        },
        "3EqI": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            class r {
                constructor() {
                    this.pendings = void 0, this.pendings = new Map
                }
                markStart(e) {
                    void 0 === e && (e = r.DEFAULT_JOB_ID);
                    let t = () => {};
                    const n = new Promise((e => {
                        t = e
                    })).finally((() => {
                        this.pendings.delete(e)
                    }));
                    this.pendings.set(e, {
                        promise: n,
                        resolver: t,
                        fulfilled: !1
                    })
                }
                markEnd(e) {
                    void 0 === e && (e = r.DEFAULT_JOB_ID);
                    const t = this.pendings.get(e);
                    t && (t.fulfilled = !0, t.resolver())
                }
                isPending(e) {
                    void 0 === e && (e = r.DEFAULT_JOB_ID);
                    const t = this.pendings.get(e);
                    return !!t && !t.fulfilled
                }
                isDone(e) {
                    return void 0 === e && (e = r.DEFAULT_JOB_ID), !this.isPending(e)
                }
                async wait(e) {
                    void 0 === e && (e = r.DEFAULT_JOB_ID);
                    const t = this.pendings.get(e);
                    t && await t.promise
                }
            }
            r.DEFAULT_JOB_ID = "z1000";
            class i {
                constructor() {
                    this.jobQueue = {}, this.auditor = void 0, this.auditor = new r
                }
                exec(e, t) {
                    void 0 === e && (e = r.DEFAULT_JOB_ID), this.isPending(e) || this.auditor.markStart(e);
                    const n = this.jobQueue[e] || Promise.resolve(),
                        i = this.jobQueue[e] = n.then(t, t);
                    return i.finally((() => {
                        this.jobQueue[e] === i && delete this.jobQueue[e], this.jobQueue[e] || this.auditor.markEnd(e)
                    })), i
                }
                isPending(e) {
                    return this.auditor.isPending(e)
                }
                wait(e) {
                    return this.auditor.wait(e)
                }
            }
            const o = new i;
            t.b = o
        },
        "3Fdi": function(e, t) {
            var n = Function.prototype.toString;
            e.exports = function(e) {
                if (null != e) {
                    try {
                        return n.call(e)
                    } catch (t) {}
                    try {
                        return e + ""
                    } catch (t) {}
                }
                return ""
            }
        },
        "3wcW": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return d
            }));
            var r = n("VTBJ"),
                i = n("jDHv"),
                o = n("Mgpg"),
                s = n("UK4g"),
                a = n("DI/x"),
                c = n("rvru");
            class d {
                constructor(e, t, n) {
                    this.partition = e, this.instance = t, this.allowMissingTable = n, this.version = void 0, this.logger = void 0;
                    const r = i.ModuleContainer.resolve(o.ZLoggerFactory);
                    this.logger = r.createZLogger(s.g, ["migrate-executor"])
                }
                async upgrade(e, t) {
                    if (null !== t)
                        if (e < this.partition.milestoneVersion) {
                            0;
                            const e = this.partition.tables.map((e => ({
                                type: "create-table",
                                params: {
                                    table: e
                                }
                            })));
                            await this._applyMigrations(e)
                        } else {
                            const n = this.partition.tables;
                            for (const i of n) {
                                const {
                                    migrations: n
                                } = i;
                                if (0 === Object.keys(n).length) continue;
                                let o = e + 1;
                                for (; o <= t;) {
                                    const e = n[o];
                                    if (e) {
                                        const {
                                            scripts: t
                                        } = e, n = t.map((e => {
                                            let t = e.params || {};
                                            return Object(r.a)(Object(r.a)({}, e), {}, {
                                                params: Object(r.a)({
                                                    table: i
                                                }, t)
                                            })
                                        }));
                                        await this._applyMigrations(n)
                                    }
                                    o += 1
                                }
                            }
                        }
                }
                async validate() {
                    const e = this.partition.tables.map((e => e.tableName)),
                        t = await this._getTables(),
                        n = e.filter((e => -1 === t.indexOf(e)));
                    if (n.length > 0 && !this.allowMissingTable) {
                        0;
                        throw i.ModuleContainer.resolve(c.a).sendMissingTableQos(this.partition.database, n), new a.u(`Found missing table(s): ${JSON.stringify(n)}. But current adapter cannot create table without increasing the database version.`)
                    }
                }
                async _applyMigrations(e) {
                    for (let t = 0; t < e.length; t++) {
                        const n = e[t];
                        switch (n.type) {
                            case "create-table":
                                {
                                    const e = n.params.table,
                                        t = {
                                            partition: this.partition.name,
                                            table: e.name
                                        };this.logger.zsymb(0, 8648, 30002, "create table", t),
                                    await this._createTable(e).catch((e => {
                                        throw this.logger.zsymb(18, 8648, 30003, "create table error", t, e.message), e
                                    })),
                                    this.logger.zsymb(0, 8648, 30004, "create table done", t);
                                    break
                                }
                            case "create-index":
                                {
                                    const {
                                        table: e,
                                        indexName: t
                                    } = n.params,
                                    r = {
                                        partition: this.partition.name,
                                        table: e.name,
                                        index: t
                                    };this.logger.zsymb(0, 8648, 30005, "create index", r),
                                    await this._createIndex(e, t).catch((e => {
                                        throw this.logger.zsymb(18, 8648, 30006, "create index error", r, e.message), e
                                    })),
                                    this.logger.zsymb(0, 8648, 30007, "create index done", r);
                                    break
                                }
                            case "add-column":
                                {
                                    const {
                                        table: e,
                                        columns: t
                                    } = n.params,
                                    r = {
                                        partition: this.partition.name,
                                        table: e.name,
                                        columns: t
                                    };this.logger.zsymb(0, 8648, 30008, "add columns", r),
                                    await this._addColumns(e, t).catch((e => {
                                        throw this.logger.zsymb(18, 8648, 30009, "add columns error", r, e.message), e
                                    }));
                                    break
                                }
                            default:
                                throw new a.u(`Unhandled '${n.type}' migration script.`)
                        }
                    }
                }
            }
        },
        "3y9D": function(e, t, n) {
            var r, i, o, s, a, c, d, u;
            e.exports = (u = n("Ib8C"), i = (r = u).lib, o = i.WordArray, s = i.Hasher, a = r.algo, c = [], d = a.SHA1 = s.extend({
                _doReset: function() {
                    this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                },
                _doProcessBlock: function(e, t) {
                    for (var n = this._hash.words, r = n[0], i = n[1], o = n[2], s = n[3], a = n[4], d = 0; d < 80; d++) {
                        if (d < 16) c[d] = 0 | e[t + d];
                        else {
                            var u = c[d - 3] ^ c[d - 8] ^ c[d - 14] ^ c[d - 16];
                            c[d] = u << 1 | u >>> 31
                        }
                        var l = (r << 5 | r >>> 27) + a + c[d];
                        l += d < 20 ? 1518500249 + (i & o | ~i & s) : d < 40 ? 1859775393 + (i ^ o ^ s) : d < 60 ? (i & o | i & s | o & s) - 1894007588 : (i ^ o ^ s) - 899497514, a = s, s = o, o = i << 30 | i >>> 2, i = r, r = l
                    }
                    n[0] = n[0] + r | 0, n[1] = n[1] + i | 0, n[2] = n[2] + o | 0, n[3] = n[3] + s | 0, n[4] = n[4] + a | 0
                },
                _doFinalize: function() {
                    var e = this._data,
                        t = e.words,
                        n = 8 * this._nDataBytes,
                        r = 8 * e.sigBytes;
                    return t[r >>> 5] |= 128 << 24 - r % 32, t[14 + (r + 64 >>> 9 << 4)] = Math.floor(n / 4294967296), t[15 + (r + 64 >>> 9 << 4)] = n, e.sigBytes = 4 * t.length, this._process(), this._hash
                },
                clone: function() {
                    var e = s.clone.call(this);
                    return e._hash = this._hash.clone(), e
                }
            }), r.SHA1 = s._createHelper(d), r.HmacSHA1 = s._createHmacHelper(d), u.SHA1)
        },
        "44Ds": function(e, t, n) {
            var r = n("e4Nc");

            function i(e, t) {
                if ("function" != typeof e || null != t && "function" != typeof t) throw new TypeError("Expected a function");
                var n = function() {
                    var r = arguments,
                        i = t ? t.apply(this, r) : r[0],
                        o = n.cache;
                    if (o.has(i)) return o.get(i);
                    var s = e.apply(this, r);
                    return n.cache = o.set(i, s) || o, s
                };
                return n.cache = new(i.Cache || r), n
            }
            i.Cache = r, e.exports = i
        },
        "45ei": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            })), n.d(t, "d", (function() {
                return o
            })), n.d(t, "c", (function() {
                return a
            })), n.d(t, "b", (function() {
                return c
            })), n.d(t, "e", (function() {
                return d
            }));
            var r = n("AH6j");
            let i;
            ! function(e) {
                e.Start = "Start", e.InitServices = "InitServices", e.ServicesReady = "ServicesReady", e.Exit = "Exit", e.BeforeUnload = "BeforeUnload", e.Idle = "Idle", e.Active = "Active", e.FirstIdle = "FirstIdle", e.Authenticating = "Authenticating", e.Authenticated = "Authenticated", e.LogOut = "LogOut"
            }(i || (i = {}));
            class o extends r.a {
                constructor(e) {
                    super(i.InitServices), this.app = e
                }
            }
            class s extends r.a {
                constructor(e, t) {
                    super(e), this.type = e, this._session = void 0, this.getSession = () => this._session, this._session = t
                }
            }
            class a extends s {
                constructor(e) {
                    super(i.Authenticating, e)
                }
            }
            class c extends s {
                constructor(e) {
                    super(i.Authenticated, e)
                }
            }
            class d extends r.a {
                constructor(e) {
                    super(i.LogOut), this.shouldClearData = e
                }
            }
        },
        "49vF": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("PvD+");
            t.Bl = class {
                constructor(e = 256) {
                    this.chunkSize = e, this.cursor = 0, this.maxCursor = -1, this.chunks = [], this._initReuseChunk = null
                }
                reset() {
                    this.cursor = 0, this.maxCursor = -1, this.chunks.length && (this.chunks = []), null !== this._initReuseChunk && (this.chunks.push(this._initReuseChunk), this.maxCursor = this._initReuseChunk.length - 1)
                }
                push(e) {
                    let t = this.chunks[this.chunks.length - 1];
                    if (this.cursor + e.length <= this.maxCursor + 1) {
                        const n = t.length - (this.maxCursor - this.cursor) - 1;
                        t.set(e, n)
                    } else {
                        if (t) {
                            const e = t.length - (this.maxCursor - this.cursor) - 1;
                            e < t.length && (this.chunks[this.chunks.length - 1] = t.subarray(0, e), this.maxCursor = this.cursor - 1)
                        }
                        e.length < 64 && e.length < this.chunkSize ? (t = r.alloc(this.chunkSize), this.chunks.push(t), this.maxCursor += t.length, null === this._initReuseChunk && (this._initReuseChunk = t), t.set(e, 0)) : (this.chunks.push(e), this.maxCursor += e.length)
                    }
                    this.cursor += e.length
                }
                toBytes(e = !1) {
                    let t;
                    if (1 === this.chunks.length) {
                        const n = this.chunks[0];
                        e && this.cursor > n.length / 2 ? (t = this.cursor === n.length ? n : n.subarray(0, this.cursor), this._initReuseChunk = null, this.chunks = []) : t = r.slice(n, 0, this.cursor)
                    } else t = r.concat(this.chunks, this.cursor);
                    return e && this.reset(), t
                }
            }
        },
        "4IGy": function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "cocos-res",
                    name: "CocosRes",
                    fields: {
                        path: {
                            name: "path",
                            type: s.g.string
                        },
                        data: {
                            name: "data",
                            type: s.g.json
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "path"
                            }],
                            unique: !0
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "friend-blocked",
                    name: "FriendBlocked",
                    fields: {
                        key: {
                            name: "key",
                            type: s.g.string
                        },
                        val: {
                            name: "val",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "key"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p)),
                g = {
                    tableName: "info-cache",
                    name: "InfoCache",
                    fields: {
                        key: {
                            name: "key",
                            type: s.g.string
                        },
                        val: {
                            name: "val",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "key"
                            }],
                            unique: !0
                        }
                    }
                },
                y = new i.d(g),
                _ = new i.d(Object(r.a)({}, g)),
                E = new i.d(Object(r.a)({}, g)),
                b = {
                    tableName: "retry-cache",
                    name: "RetryCache",
                    fields: {
                        key: {
                            name: "key",
                            type: s.g.string
                        },
                        val: {
                            name: "val",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "key"
                            }],
                            unique: !0
                        }
                    }
                },
                I = new i.d(b),
                v = new i.d(Object(r.a)({}, b)),
                T = new i.d(Object(r.a)({}, b)),
                O = {
                    tableName: "db-stchecksum",
                    name: "StChecksum",
                    fields: {
                        checksum: {
                            name: "checksum",
                            type: s.g.string
                        },
                        url: {
                            name: "url",
                            type: s.g.string
                        },
                        size: {
                            name: "size",
                            type: s.g.integer
                        },
                        isGroup: {
                            name: "isGroup",
                            type: s.g.boolean
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer
                        },
                        zname: {
                            name: "zname",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "checksum"
                            }],
                            unique: !0
                        }
                    }
                },
                w = {
                    CocosRes: d,
                    FriendBlocked: m,
                    InfoCache: y,
                    RetryCache: I,
                    StChecksum: new i.d(O)
                },
                P = {
                    CocosRes: u,
                    FriendBlocked: h,
                    InfoCache: _,
                    RetryCache: v,
                    StChecksum: new i.d(Object(r.a)({}, O))
                },
                S = {
                    CocosRes: l,
                    FriendBlocked: f,
                    InfoCache: E,
                    RetryCache: T,
                    StChecksum: new i.d(Object(r.a)({}, O))
                },
                A = {
                    name: "Storage",
                    session: !1
                },
                R = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.const("Storage"), o.a.byTable()],
                    partitionsMap: Object(a.a)(S)
                },
                M = {
                    partitionNamingStrategy: [o.a.const("zlocalstorage")],
                    partitionsMap: Object(a.b)(P)
                },
                N = Object(r.a)(Object(r.a)(Object(r.a)({}, A), R), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                C = Object(r.a)(Object(r.a)(Object(r.a)({}, A), M), {}, {
                    version: 5,
                    milestoneVersion: 5,
                    type: s.a.IDB
                });
            let D = null,
                L = null;
            t.a = {
                basicSchema: w,
                get useSqlite() {
                    return null === D && (D = new i.a(N)), D
                },
                get useIdb() {
                    return null === L && (L = new i.a(C)), L
                }
            }
        },
        "4JQ2": function(e, t, n) {
            "use strict";
            (function(t) {
                var r = n("oxjq"),
                    i = n("ijAY"),
                    o = n("dnEP"),
                    s = n("fYZ/"),
                    a = n("bAum"),
                    c = Object.defineProperties,
                    d = "win32" === t.platform && !/^xterm/i.test(t.env.TERM);

                function u(e) {
                    this.enabled = e && void 0 !== e.enabled ? e.enabled : a
                }
                d && (i.blue.open = "[94m");
                var l, p = (l = {}, Object.keys(i).forEach((function(e) {
                        i[e].closeRe = new RegExp(r(i[e].close), "g"), l[e] = {
                            get: function() {
                                return h.call(this, this._styles.concat(e))
                            }
                        }
                    })), l),
                    m = c((function() {}), p);

                function h(e) {
                    var t = function() {
                        return f.apply(t, arguments)
                    };
                    return t._styles = e, t.enabled = this.enabled, t.__proto__ = m, t
                }

                function f() {
                    var e = arguments,
                        t = e.length,
                        n = 0 !== t && String(arguments[0]);
                    if (t > 1)
                        for (var r = 1; r < t; r++) n += " " + e[r];
                    if (!this.enabled || !n) return n;
                    var o = this._styles,
                        s = o.length,
                        a = i.dim.open;
                    for (!d || -1 === o.indexOf("gray") && -1 === o.indexOf("grey") || (i.dim.open = ""); s--;) {
                        var c = i[o[s]];
                        n = c.open + n.replace(c.closeRe, c.open) + c.close
                    }
                    return i.dim.open = a, n
                }
                c(u.prototype, function() {
                    var e = {};
                    return Object.keys(p).forEach((function(t) {
                        e[t] = {
                            get: function() {
                                return h.call(this, [t])
                            }
                        }
                    })), e
                }()), e.exports = new u, e.exports.styles = i, e.exports.hasColor = s, e.exports.stripColor = o, e.exports.supportsColor = a
            }).call(this, n("ckNr"))
        },
        "4W2c": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return o
            }));
            var r = n("DI/x"),
                i = n("YZti");
            class o extends class {
                constructor() {}
            } {
                constructor(e) {
                    super(), this.secureFields = e, this.cipcherKey = ""
                }
                init(e) {
                    this.cipcherKey = e
                }
                toDB(e) {
                    if ("" === this.cipcherKey) throw new r.j("Cipher key is unavailable!");
                    for (let t = 0; t < this.secureFields.length; t++) {
                        const n = this.secureFields[t];
                        e[n] && (e[n] = i.a.encrypt(JSON.stringify(e[n]), this.cipcherKey))
                    }
                }
                fromDB(e) {
                    if (e) {
                        if ("" === this.cipcherKey) throw new r.j("Cipher key is unavailable!");
                        for (let n = 0; n < this.secureFields.length; n++) {
                            const r = this.secureFields[n];
                            if ("string" == typeof e[r]) try {
                                e[r] = JSON.parse(i.a.decrypt(e[r], this.cipcherKey))
                            } catch (t) {}
                        }
                    }
                }
            }
        },
        "4kuk": function(e, t, n) {
            var r = n("SfRM"),
                i = n("Hvzi"),
                o = n("u8Dt"),
                s = n("ekgI"),
                a = n("JSQU");

            function c(e) {
                var t = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++t < n;) {
                    var r = e[t];
                    this.set(r[0], r[1])
                }
            }
            c.prototype.clear = r, c.prototype.delete = i, c.prototype.get = o, c.prototype.has = s, c.prototype.set = a, e.exports = c
        },
        "4uTw": function(e, t, n) {
            var r = n("Z0cm"),
                i = n("9ggG"),
                o = n("GNiM"),
                s = n("dt0z");
            e.exports = function(e, t) {
                return r(e) ? e : i(e, t) ? [e] : o(s(e))
            }
        },
        "5BYM": function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("igRa");
            t.default = class {
                constructor(e) {
                    this.isOpenFallingRecorder = void 0, this.uiManager = void 0, this.uiManager = e
                }
                isOpen() {
                    return !!this.isOpenFallingRecorder
                }
                toggleFpsFallingRecorder(e) {
                    this.isOpenFallingRecorder = "boolean" == typeof e ? e : !this.isOpenFallingRecorder, this.uiManager.triggerEvent(r.a.TOGGLE_FPS_FALLING, this.isOpenFallingRecorder)
                }
            }
        },
        "5Drw": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            }));
            class r {
                constructor(e) {
                    this.time = void 0, this.metrics = void 0, this.time = e, this.metrics = []
                }
                setTime(e) {
                    this.time = e
                }
                add(e) {
                    this.metrics.push(e)
                }
                static clone(e) {
                    const t = new r(e.time);
                    return e.metrics.forEach((e => t.add(e))), t
                }
            }
            t.b = class {
                constructor() {
                    this.timeNodes = void 0, this.startTime = void 0, this.isRunning = void 0, this.enabled = void 0, this.everyTimeNode = void 0, this.timer = void 0, this.listener = void 0, this.everyPassedTime = void 0, this.sort = e => {
                        for (let t = 1; t < e.length; t++) {
                            const n = e[t];
                            let r;
                            for (r = t - 1; r >= 0 && e[r].time > n.time; r--) e[r + 1] = e[r];
                            e[r + 1] = n
                        }
                        return e
                    }, this.timeNodes = [], this.startTime = 0, this.isRunning = !1, this.enabled = !1, this.everyPassedTime = 0
                }
                onMessage(e) {
                    this.listener = e
                }
                startUp(e) {
                    this.isRunning || (this.enabled = !0, this.timeNodes = this.sort(e), this.timeNodes.length && (this.startTime = Date.now(), this.run()))
                }
                startEvery(e) {
                    this.everyTimeNode = e, this.isRunning || (this.enabled = !0, this.startTime = Date.now(), this.everyPassedTime = 0, this.runEvery())
                }
                stop() {
                    clearTimeout(this.timer), this.enabled = !1, this.timeNodes = [], this.everyTimeNode = void 0
                }
                execTimeNode(e) {
                    if (this.enabled && this.listener) {
                        const t = {
                            startTime: this.startTime,
                            passedTime: e.time,
                            metrics: e.metrics
                        };
                        this.listener(t)
                    }
                }
                run() {
                    if (!this.enabled) return void this.stop();
                    this.isRunning = !0;
                    const e = Date.now() - this.startTime,
                        t = this.timeNodes.shift();
                    if (t) {
                        const n = t.time - e;
                        this.timer = setTimeout((() => {
                            this.execTimeNode(t), this.everyPassedTime = t.time, this.run(), this.isRunning = !1
                        }), n)
                    } else this.isRunning = !1, this.runEvery()
                }
                runEvery() {
                    if (!this.everyTimeNode) return;
                    if (!this.enabled) return void this.stop();
                    this.isRunning = !0;
                    const e = this.everyTimeNode.time;
                    e ? this.timer = setTimeout((() => {
                        if (this.everyTimeNode) {
                            const t = this.everyPassedTime + e,
                                n = r.clone(this.everyTimeNode);
                            n.setTime(t), this.execTimeNode(n), this.everyPassedTime = t, this.runEvery(), this.isRunning = !1
                        }
                    }), e) : this.isRunning = !1
                }
            }
        },
        "5hvy": function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("MlIO"), function(e) {
                var t = r,
                    n = t.lib,
                    i = n.WordArray,
                    o = n.Hasher,
                    s = t.x64.Word,
                    a = t.algo,
                    c = [],
                    d = [],
                    u = [];
                ! function() {
                    for (var e = 1, t = 0, n = 0; n < 24; n++) {
                        c[e + 5 * t] = (n + 1) * (n + 2) / 2 % 64;
                        var r = (2 * e + 3 * t) % 5;
                        e = t % 5, t = r
                    }
                    for (e = 0; e < 5; e++)
                        for (t = 0; t < 5; t++) d[e + 5 * t] = t + (2 * e + 3 * t) % 5 * 5;
                    for (var i = 1, o = 0; o < 24; o++) {
                        for (var a = 0, l = 0, p = 0; p < 7; p++) {
                            if (1 & i) {
                                var m = (1 << p) - 1;
                                m < 32 ? l ^= 1 << m : a ^= 1 << m - 32
                            }
                            128 & i ? i = i << 1 ^ 113 : i <<= 1
                        }
                        u[o] = s.create(a, l)
                    }
                }();
                var l = [];
                ! function() {
                    for (var e = 0; e < 25; e++) l[e] = s.create()
                }();
                var p = a.SHA3 = o.extend({
                    cfg: o.cfg.extend({
                        outputLength: 512
                    }),
                    _doReset: function() {
                        for (var e = this._state = [], t = 0; t < 25; t++) e[t] = new s.init;
                        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = this._state, r = this.blockSize / 2, i = 0; i < r; i++) {
                            var o = e[t + 2 * i],
                                s = e[t + 2 * i + 1];
                            o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), s = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), (A = n[i]).high ^= s, A.low ^= o
                        }
                        for (var a = 0; a < 24; a++) {
                            for (var p = 0; p < 5; p++) {
                                for (var m = 0, h = 0, f = 0; f < 5; f++) m ^= (A = n[p + 5 * f]).high, h ^= A.low;
                                var g = l[p];
                                g.high = m, g.low = h
                            }
                            for (p = 0; p < 5; p++) {
                                var y = l[(p + 4) % 5],
                                    _ = l[(p + 1) % 5],
                                    E = _.high,
                                    b = _.low;
                                for (m = y.high ^ (E << 1 | b >>> 31), h = y.low ^ (b << 1 | E >>> 31), f = 0; f < 5; f++)(A = n[p + 5 * f]).high ^= m, A.low ^= h
                            }
                            for (var I = 1; I < 25; I++) {
                                var v = (A = n[I]).high,
                                    T = A.low,
                                    O = c[I];
                                O < 32 ? (m = v << O | T >>> 32 - O, h = T << O | v >>> 32 - O) : (m = T << O - 32 | v >>> 64 - O, h = v << O - 32 | T >>> 64 - O);
                                var w = l[d[I]];
                                w.high = m, w.low = h
                            }
                            var P = l[0],
                                S = n[0];
                            for (P.high = S.high, P.low = S.low, p = 0; p < 5; p++)
                                for (f = 0; f < 5; f++) {
                                    var A = n[I = p + 5 * f],
                                        R = l[I],
                                        M = l[(p + 1) % 5 + 5 * f],
                                        N = l[(p + 2) % 5 + 5 * f];
                                    A.high = R.high ^ ~M.high & N.high, A.low = R.low ^ ~M.low & N.low
                                }
                            A = n[0];
                            var C = u[a];
                            A.high ^= C.high, A.low ^= C.low
                        }
                    },
                    _doFinalize: function() {
                        var t = this._data,
                            n = t.words,
                            r = (this._nDataBytes, 8 * t.sigBytes),
                            o = 32 * this.blockSize;
                        n[r >>> 5] |= 1 << 24 - r % 32, n[(e.ceil((r + 1) / o) * o >>> 5) - 1] |= 128, t.sigBytes = 4 * n.length, this._process();
                        for (var s = this._state, a = this.cfg.outputLength / 8, c = a / 8, d = [], u = 0; u < c; u++) {
                            var l = s[u],
                                p = l.high,
                                m = l.low;
                            p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8), m = 16711935 & (m << 8 | m >>> 24) | 4278255360 & (m << 24 | m >>> 8), d.push(m), d.push(p)
                        }
                        return new i.init(d, a)
                    },
                    clone: function() {
                        for (var e = o.clone.call(this), t = e._state = this._state.slice(0), n = 0; n < 25; n++) t[n] = t[n].clone();
                        return e
                    }
                });
                t.SHA3 = o._createHelper(p), t.HmacSHA3 = o._createHmacHelper(p)
            }(Math), r.SHA3)
        },
        "5yGw": function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("Mgpg"),
                s = n("DI/x"),
                a = n("PmZf"),
                c = n("1UUk"),
                d = n("0slR"),
                u = n("d/or"),
                l = n("teaq");
            let p = i.ModuleContainer.injectable()(r = function(e, t) {
                return i.ModuleContainer.inject(u.a)(e, void 0, 0)
            }(r = function(e, t) {
                return i.ModuleContainer.inject(d.a)(e, void 0, 1)
            }(r = function(e, t) {
                return i.ModuleContainer.inject(o.ZLoggerFactory)(e, void 0, 2)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === u.a ? Object : u.a, void 0 === d.a ? Object : d.a, void 0 === o.ZLoggerFactory ? Object : o.ZLoggerFactory])(r = class {
                constructor(e, t, n) {
                    this.settingsManager = e, this.adapterBuilder = t, this.configCache = void 0, this.logger = void 0, this.logger = n.createZLogger("db", ["config"]), this.configCache = new Map
                }
                install() {
                    i.ModuleContainer.resolve(c.b).addEventListener(a.a.SessionChange, (() => {
                        this.clearCache()
                    }))
                }
                getDatabaseConfigs(e) {
                    const t = this.configCache.get(e);
                    return t || this.createConfigCache(e)
                }
                clearCache() {
                    const e = this.configCache.values();
                    let t = e.next();
                    for (; !t.done;) {
                        t.value.forEach((e => e.clearCache())), t = e.next()
                    }
                    this.configCache.clear()
                }
                createConfigCache(e) {
                    const t = [],
                        n = this.getCurrentConfig(e);
                    if (n) {
                        t.push(n);
                        const r = this.getConfigForMigrate(e, n.type);
                        r && t.push(r)
                    }
                    return this.configCache.set(e, t), t
                }
                getConfigForMigrate(e, t) {
                    const n = this.settingsManager;
                    let r, i = n.getPreferredAdapter(e);
                    if (i !== t) {
                        if (i && (r = this.adapterBuilder.computeDatabaseConfig(e, i)), !i || !r) {
                            const t = n.preferAdapters;
                            for (let n = 0; n < t.length && (i = t[n], r = this.adapterBuilder.computeDatabaseConfig(e, i), !r); n++);
                        }
                        return r && t !== i ? r : void 0
                    }
                }
                getCurrentConfig(e) {
                    const t = this.settingsManager.getCurrentAdapterType(e);
                    if ("number" != typeof t) throw new s.g(`${t} is not a valid AdapterType value!`);
                    return this.adapterBuilder.computeDatabaseConfig(e, t)
                }
            }) || r) || r) || r) || r) || r) || r;
            i.ModuleContainer.registerSingleton(l.b, p)
        },
        "6A67": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("uS0h"),
                o = n("rCOr");

            function s(e, t, n, i) {
                return new r.Token(r.Type.array, i, n)
            }

            function a(e, t) {
                i.encodeUintValue(e, r.Type.array.majorEncoded, t.value)
            }
            a.compareTokens = i.encodeUint.compareTokens, a.encodedSize = function(e) {
                return i.encodeUintValue.encodedSize(e.value)
            }, t.decodeArray16 = function(e, t, n, r) {
                return s(0, 0, 3, i.readUint16(e, t + 1, r))
            }, t.decodeArray32 = function(e, t, n, r) {
                return s(0, 0, 5, i.readUint32(e, t + 1, r))
            }, t.decodeArray64 = function(e, t, n, r) {
                const a = i.readUint64(e, t + 1, r);
                if ("bigint" == typeof a) throw new Error(`${o.decodeErrPrefix} 64-bit integer array lengths not supported`);
                return s(0, 0, 9, a)
            }, t.decodeArray8 = function(e, t, n, r) {
                return s(0, 0, 2, i.readUint8(e, t + 1, r))
            }, t.decodeArrayCompact = function(e, t, n, r) {
                return s(0, 0, 1, n)
            }, t.decodeArrayIndefinite = function(e, t, n, r) {
                if (!1 === r.allowIndefinite) throw new Error(`${o.decodeErrPrefix} indefinite length items not allowed`);
                return s(0, 0, 1, 1 / 0)
            }, t.encodeArray = a
        },
        "6Sr9": function(e, t, n) {
            "use strict";
            n.d(t, "f", (function() {
                return l
            })), n.d(t, "c", (function() {
                return p
            })), n.d(t, "b", (function() {
                return m
            })), n.d(t, "d", (function() {
                return h
            })), n.d(t, "a", (function() {
                return f
            })), n.d(t, "e", (function() {
                return g
            }));
            var r = n("jDHv"),
                i = n("45ei");
            const o = [],
                s = [],
                a = [],
                c = [],
                d = [],
                u = [];

            function l() {
                return function(e) {
                    o.push(e)
                }
            }

            function p() {
                return function(e) {
                    s.push(e)
                }
            }

            function m() {
                return function(e) {
                    a.push(e)
                }
            }

            function h() {
                return function(e) {
                    c.push(e)
                }
            }

            function f() {
                return function(e) {
                    d.push(e)
                }
            }

            function g(e) {
                e.addEventListenerOnce(i.a.InitServices, (e => {
                    o.forEach((t => {
                        try {
                            r.ModuleContainer.resolveToken(t).onStart(e)
                        } catch (n) {}
                    }))
                })), e.addEventListenerOnce(i.a.Authenticating, (e => {
                    s.forEach((t => r.ModuleContainer.resolveToken(t).onAuthenticating(e)))
                })), e.addEventListenerOnce(i.a.Authenticated, (e => {
                    a.forEach((t => r.ModuleContainer.resolveToken(t).onAuthenticated(e)))
                })), e.addEventListenerOnce(i.a.ServicesReady, (e => {
                    d.forEach((t => r.ModuleContainer.resolveToken(t).onApplicationReady(e)))
                })), e.addEventListenerOnce(i.a.Exit, (() => {
                    c.forEach((e => r.ModuleContainer.resolveToken(e).onDispose()))
                })), e.addEventListenerOnce(i.a.LogOut, (() => {
                    u.forEach((e => r.ModuleContainer.resolveToken(e).onSessionExpired()))
                }))
            }
        },
        "6Vk1": function(e, t, n) {
            "use strict";
            n.d(t, "d", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "a", (function() {
                return s
            })), n.d(t, "b", (function() {
                return a
            }));
            var r = n("jDHv");
            let i;
            ! function(e) {
                e.LabelChange = "LabelChange", e.SelectedLabelChange = "SelectedLabelChange", e.LabelAddConvs = "LabelAddConvs", e.LabelRemoveConvs = "LabelRemoveConvs"
            }(i || (i = {}));
            class o extends Event {
                constructor(e, t) {
                    super(e), this.payload = void 0, this.payload = t
                }
            }
            const s = "label-data-manager",
                a = Object(r.define)(s)
        },
        "75pU": function(e, t) {
            function n(e, t, n, r) {
                var i, o = null == (i = r) || "number" == typeof i || "boolean" == typeof i ? r : n(r),
                    s = t.get(o);
                return void 0 === s && (s = e.call(this, r), t.set(o, s)), s
            }

            function r(e, t, n) {
                var r = Array.prototype.slice.call(arguments, 3),
                    i = n(r),
                    o = t.get(i);
                return void 0 === o && (o = e.apply(this, r), t.set(i, o)), o
            }

            function i(e, t, n, r, i) {
                return n.bind(t, e, r, i)
            }

            function o(e, t) {
                return i(e, this, 1 === e.length ? n : r, t.cache.create(), t.serializer)
            }

            function s() {
                return JSON.stringify(arguments)
            }

            function a() {
                this.cache = Object.create(null)
            }
            a.prototype.has = function(e) {
                return e in this.cache
            }, a.prototype.get = function(e) {
                return this.cache[e]
            }, a.prototype.set = function(e, t) {
                this.cache[e] = t
            };
            var c = {
                create: function() {
                    return new a
                }
            };
            e.exports = function(e, t) {
                var n = t && t.cache ? t.cache : c,
                    r = t && t.serializer ? t.serializer : s;
                return (t && t.strategy ? t.strategy : o)(e, {
                    cache: n,
                    serializer: r
                })
            }, e.exports.strategies = {
                variadic: function(e, t) {
                    return i(e, this, r, t.cache.create(), t.serializer)
                },
                monadic: function(e, t) {
                    return i(e, this, n, t.cache.create(), t.serializer)
                }
            }
        },
        "7F/P": function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("VTBJ"),
                i = (n("KFwE"), n("mwIZ")),
                o = n.n(i),
                s = n("jDHv"),
                a = n("Y58e");
            s.ModuleContainer.registerSingleton(a.a, class {
                get(e) {
                    const t = n("AdzE").default;
                    return o()(t, e)
                }
            });
            var c, d = n("jGDt"),
                u = n("i15Q");
            let l = Object(s.injectable)()(c = Reflect.metadata("design:type", Function)(c = Reflect.metadata("design:paramtypes", [])(c = class extends u.a {
                constructor() {
                    super(), this._enableConsole = !1
                }
            }) || c) || c) || c;
            s.ModuleContainer.registerSingleton(d.a, l);
            n("ezdo"), n("KdAX"), n("8ogj"), n("wKPd"), n("0rWR"), n("Lq8m"), n("nUpV"), n("5yGw"), n("hRcX"), n("gpNb"), n("rhBN"), n("cF85"), n("XidR");
            var p = n("zkos"),
                m = n("12Ui");
            s.ModuleContainer.registerSingleton(m.a, class {
                increaseSuccess(e, t, n, r, i) {
                    self.postReservedMsg([p.c, !0, e, t, n, , r, i])
                }
                increaseFailed(e, t, n, r, i, o, s) {
                    self.postReservedMsg([p.c, !1, e, t, n, r, i, o, s])
                }
            });
            var h, f = n("wH4e"),
                g = n("UK4g"),
                y = n("tHMN"),
                _ = n("jIg3"),
                E = n("Mgpg");
            let b = s.ModuleContainer.injectable()(h = function(e, t) {
                return s.ModuleContainer.inject(y.b)(e, void 0, 0)
            }(h = function(e, t) {
                return s.ModuleContainer.inject(E.ZLoggerFactory)(e, void 0, 1)
            }(h = Reflect.metadata("design:type", Function)(h = Reflect.metadata("design:paramtypes", [void 0 === y.a ? Object : y.a, void 0 === E.ZLoggerFactory ? Object : E.ZLoggerFactory])(h = class extends _.a {
                constructor(e, t) {
                    super(), this.engine = e, this.loggerFactory = t, this.logger = void 0, this.logger = this.loggerFactory.createZLogger(g.g, ["web-worker"]), this.engine.addEventListener(f.Events.UnexpectedError, (e => {
                        this.dispatchEvent(new f.UnexpectedErrorEvent(e.error))
                    })), this.engine.addEventListener(f.Events.QueryError, (e => {
                        this.dispatchEvent(new f.QueryErrorEvent(e.error))
                    }))
                }
                install() {
                    self.addReservedMsgListener(g.c, (e => {
                        const {
                            data: t
                        } = e, [n, r] = t;
                        this.authenticate(r)
                    }))
                }
                async closeDBs(e) {
                    let t = [];
                    e ? e.length && (t = e.map((e => this.engine.closeDatabase(e)))) : t = [this.engine.closeAllDatabases()], await Promise.all(t)
                }
                authenticate(e) {
                    e && (this.session = e, this.dispatchEvent(new f.SessionChangeEvent(e)), this.logger.zsymb(0, 8167, 30002, (() => ["authenticated", `id: ${e.userId}`])))
                }
                areYouOk() {
                    return !0
                }
            }) || h) || h) || h) || h) || h;
            s.ModuleContainer.registerSingleton(_.b, b);
            var I = n("fsN4");
            const v = "keyword",
                T = "keywordId",
                O = 2e3,
                w = Number.MAX_SAFE_INTEGER - 10,
                P = () => {},
                S = 1500,
                A = Object.freeze({
                    ADD_ALL_INDEX: 1,
                    GET_KEYWORD_ID: 2,
                    GET_CONTENT_ID: 3
                });
            class R {
                constructor(e, t) {
                    let {
                        freqNeed: n,
                        storeIndex: r,
                        shouldStop: i
                    } = t;
                    this.token = e, this.listAvailableContentIds = [], this.stepCounter = 0, this.flagEnd = 0, this.storeIndex = r, this.freqNeed = n, this.shouldStop = i || P, this._minId = w, this._maxId = w, this.needOptimize = 0, this._trimId = w
                }
                info() {
                    return `[${this.token}][${this.flagEnd}][${this.listAvailableContentIds.length}][${this.minId()}][${this.maxId()}]`
                }
                renew(e) {
                    let {
                        storeIndex: t,
                        shouldStop: n
                    } = e;
                    this.storeIndex = t, this.shouldStop = n || P
                }
                active() {
                    return this.listAvailableContentIds.length || 0 === this.flagEnd
                }
                valid() {
                    return this.listAvailableContentIds.length
                }
                contentIds() {
                    return [...this.listAvailableContentIds]
                }
                minId() {
                    return this.valid() ? (this._verifyDirty(), this._minId = this.listAvailableContentIds[this.listAvailableContentIds.length - 1], this._minId) : this.active() ? this._minId : w
                }
                maxId() {
                    return this.valid() ? (this._verifyDirty(), this._maxId = this.listAvailableContentIds[0], this._maxId) : this.active() ? this._trimId : w
                }
                size() {
                    return this.listAvailableContentIds.length
                }
                trim(e) {
                    if (e >= w) return 0;
                    this._trimId = Math.min(e, this._trimId);
                    let t = 0;
                    for (this._verifyDirty(); this.listAvailableContentIds.length && this.listAvailableContentIds[0] >= e;) t++, this.listAvailableContentIds.shift();
                    return t
                }
                getNext() {
                    return new Promise(((e, t) => {
                        let n = !1;
                        const r = () => {
                            n || (n = !0, this._getNext().then(e).catch((t => {
                                this.flagEnd = 1, e()
                            })))
                        };
                        if (1 == this.needOptimize) return this._optimize().then(r).catch(r);
                        r()
                    }))
                }
                _verifyDirty() {
                    this._listDirty && (this._listDirty = !1, this.listAvailableContentIds.sort(((e, t) => t - e)))
                }
                _push(e) {
                    if (e >= this._trimId) return !1;
                    if (this.listAvailableContentIds.length) {
                        this.listAvailableContentIds[this.listAvailableContentIds.length - 1] < e && (this._listDirty = !0)
                    }
                    return this.listAvailableContentIds.push(e), !0
                }
                _optimize() {
                    return new Promise(((e, t) => {
                        if (this.flagEnd) return e();
                        if (300 - this.listAvailableContentIds.length <= 0) return e();
                        if (1 != this.needOptimize) return e();
                        let n = this.stepCounter + 500,
                            r = this.stepCounter,
                            i = !1,
                            o = 0;
                        this.storeIndex.getAll({
                            from: this.token,
                            to: this.token
                        }, {
                            direction: f.CursorDirection.PREV,
                            aborted: () => this.shouldStop() || i,
                            onValue: e => {
                                if (o++, !i) return e.contentId < this._trimId ? (i = !0, void(this.stepCounter = Math.max(this.stepCounter, r - 1))) : void(r += 500)
                            },
                            limit: O,
                            advance: n,
                            stepCount: 500
                        }).then((() => {
                            i ? this.needOptimize = 0 : o == O && (this.stepCounter = r, this.needOptimize = 0), e()
                        })).catch(t)
                    }))
                }
                _getNext() {
                    return new Promise(((e, t) => {
                        if (this.flagEnd) return e();
                        if (300 - this.listAvailableContentIds.length <= 0) return e();
                        let n = this.stepCounter,
                            r = n;
                        this.storeIndex.getAll({
                            from: this.token,
                            to: this.token
                        }, {
                            limit: O,
                            direction: f.CursorDirection.PREV,
                            aborted: () => this.shouldStop() || this.listAvailableContentIds.length >= 300,
                            onValue: e => {
                                this.stepCounter++, (null == e ? void 0 : e.freq) >= this.freqNeed && this._push(e.contentId) && (r = this.stepCounter)
                            },
                            advance: n
                        }).then((() => {
                            if (this.shouldStop()) t("aborted");
                            else {
                                if (this.stepCounter <= n) return this.flagEnd = 1, e();
                                this._trimId !== w && !this.needOptimize && this.stepCounter - r >= 1e3 && (this.needOptimize += 1), e()
                            }
                        })).catch(t)
                    }))
                }
            }
            var M = new class {
                constructor() {
                    this.userId = null, this.MAX_RESULT_SEARCH = 5e3, this.db = null, this._checkOldData = !1, this._lockAll = !1, this._process = {
                        [A.ADD_ALL_INDEX]: this._addAllIndex.bind(this),
                        [A.GET_KEYWORD_ID]: this._getKeywordIds.bind(this),
                        [A.GET_CONTENT_ID]: this._getContentIds.bind(this)
                    }
                }
                setDataName(e, t) {
                    return new Promise(((t, n) => {
                        this.userId || (this.userId = e), t()
                    }))
                }
                delOldData() {
                    return new Promise(((e, t) => {
                        e()
                    }))
                }
                delAllData() {
                    const e = I.a.getInstance();
                    return e.Search.runTransaction([e.Search.StCont, e.Search.StKeyword, e.Search.StIdx], (e => {
                        for (let t = 0; t < e.length; t++) e[t].clear()
                    }))
                }
                migrate(e) {
                    return new Promise(((e, t) => {
                        t("disable migrate")
                    }))
                }
                checkOldDb(e) {
                    return new Promise(((e, t) => t("disable checkOldDb")))
                }
                _needOverrideContent(e, t) {
                    try {
                        if (!e.convId && t.convId) return !0
                    } catch (n) {}
                    return !1
                }
                async _getContentIds(e, t) {
                    void 0 === t && (t = !1);
                    const n = I.a.getInstance(),
                        r = {};
                    return n.Search.runTransaction([n.Search.StCont], (t => {
                        let [n] = t;
                        const i = e.map((async e => {
                            const {
                                msgId: t
                            } = e;
                            if (!(await n.get(t, {
                                    index: "msgId"
                                }))) {
                                await n.insert(e);
                                const {
                                    index: i
                                } = await n.get(t, {
                                    index: "msgId"
                                });
                                r[t] = i
                            }
                        }));
                        Promise.all(i)
                    })).then((() => r))
                }
                async _getKeywordIds(e) {
                    const t = I.a.getInstance(),
                        n = {};
                    return t.Search.runTransaction([t.Search.StKeyword], (t => {
                        let [r] = t;
                        const i = e.map((async e => {
                            const t = await r.get(e, {
                                index: "keyword"
                            });
                            if (null != t && t.index) n[e] = t.index;
                            else {
                                await r.insert({
                                    keyword: e
                                });
                                const {
                                    index: t
                                } = await r.get(e, {
                                    index: "keyword"
                                });
                                n[e] = t
                            }
                        }));
                        Promise.all(i)
                    })).then((() => n))
                }
                _addAllIndex(e) {
                    return I.a.getInstance().Search.StIdx.insertMulti(e)
                }
                search(e, t, n) {
                    let {
                        limitForEachKeyword: r = 400,
                        cache: i = {}
                    } = void 0 === n ? {} : n;
                    const o = I.a.getInstance();
                    return new Promise(((n, i) => {
                        o.Search.runTransaction([o.Search.StKeyword, o.Search.StIdx, o.Search.StCont], (o => {
                            let [s, a, c] = o, d = !1, u = !1, l = e.length, p = [], m = (e, t) => {
                                d || (d = !0, u = !0, e ? n(p) : i(t))
                            }, h = () => !(!u && !t()), g = null, y = (e, n) => {
                                if (h()) return m(!1, "aborted!!");
                                let r = new Set,
                                    i = e => {
                                        (e => !g || g.has(e))(e) && r.add(e)
                                    },
                                    o = e.length,
                                    s = () => {
                                        if (h()) return m(!1, "aborted!!");
                                        if (--o, o <= 0) {
                                            if (g) {
                                                let e = new Set;
                                                g.forEach((t => {
                                                    r.has(t) && e.add(t)
                                                })), g = e
                                            } else g = r;
                                            if (0 == g.size) return m(!0);
                                            --l, l <= 0 && (() => {
                                                let e = [];
                                                g && g.forEach((t => e.push(t)));
                                                let t = e.length,
                                                    n = () => {
                                                        if (h()) return m(!1, "aborted!!");
                                                        --t, t <= 0 && m(!0)
                                                    };
                                                if (t <= 0) return m(!0);
                                                e.forEach((e => {
                                                    c.get(e).then((e => {
                                                        p.push(e), n()
                                                    })).catch(n)
                                                }))
                                            })()
                                        }
                                    };
                                if (o <= 0) return s();
                                e.forEach((e => {
                                    a.getAll({
                                        from: e,
                                        to: e
                                    }, {
                                        direction: f.CursorDirection.PREV,
                                        aborted: () => {
                                            if (d || t()) return !0
                                        },
                                        onValue: e => {
                                            (null == e ? void 0 : e.freq) >= n && i(e.contentId)
                                        },
                                        limit: O,
                                        index: T
                                    }).then(s).catch(s)
                                }))
                            };
                            e.forEach((e => {
                                0;
                                let t = e.keyword,
                                    n = e.freq;
                                s.getAllKey({
                                    from: t,
                                    to: t + "￿"
                                }, {
                                    limit: r,
                                    index: v
                                }).then((e => {
                                    y(e, n)
                                })).catch((e => {
                                    y([], 0)
                                }))
                            }))
                        }), f.TransactionMode.READONLY)
                    }))
                }
                searchV2(e, t, n) {
                    let {
                        limitForEachKeyword: r = S,
                        cache: i = {},
                        progress: o = !1
                    } = void 0 === n ? {} : n;
                    return new Promise(((n, s) => {
                        t = t || P, i.resultList || (i.maxAllMin = 0, i.progress = 0, i.session_progress = 0, i.resultList = new Set, i.hasMore = 0, i.hasRet = new Set, i.ret = []);
                        let a = !1,
                            c = !1,
                            d = e => {
                                u(!1, e)
                            };
                        const u = (e, r) => {
                                a || (a = !0, c = !0, e ? (i.progress, i.ret, t(), n(i.ret)) : (i.progress, s(r)))
                            },
                            l = I.a.getInstance();
                        l.Search.runTransaction([l.Search.StKeyword, l.Search.StIdx, l.Search.StCont], (n => {
                            let [s, a, l] = n, p = a.index(T), m = i.resultList.size, h = new Set, f = (Date.now(), () => !(!c && !t())), g = () => {
                                let e = Array.from(h).filter((e => !i.hasRet.has(e)));
                                if (null == e || !e.length) return u(!0);
                                let t = e.length,
                                    n = () => {
                                        if (f()) return u(!1, "aborted!!");
                                        --t, t <= 0 && u(!0)
                                    };
                                if (t <= 0) return u(!0);
                                e.forEach((e => {
                                    l.get(e).then((t => {
                                        i.hasRet.has(e) || (i.hasRet.add(e), i.ret.push(t)), n()
                                    })).catch(n)
                                }))
                            }, y = function(e) {
                                if (void 0 === e && (e = !1), f()) return u(!1, "aborted!!");
                                e && (i.session_progress = 0), i.progress++, i.session_progress++;
                                let t = [];
                                i.tokenMap.forEach((e => {
                                    t.push.apply(t, e.similarTokenIds)
                                }));
                                let n = [];
                                t.forEach((e => {
                                    n.push(e.getNext())
                                })), Promise.all(n).then((e => {
                                    i.maxAllMin = 0, i.minAllMax = w;
                                    let n = !0;
                                    if (i.tokenMap.forEach((e => {
                                            let t = e.similarTokenIds,
                                                r = [],
                                                o = 0,
                                                s = 0,
                                                a = !1;
                                            t.forEach((e => {
                                                e.active() && (a = !0, o = Math.max(o, e.minId()), s = Math.max(s, e.maxId()), e.valid() && r.push.apply(r, e.contentIds()))
                                            })), a || (n = !1), e.set = new Set(r), i.minAllMax = Math.min(i.minAllMax, s), i.maxAllMin = Math.max(i.maxAllMin, o)
                                        })), !n) return i.hasMore = 0, g();
                                    i.tokenMap.forEach((e => {
                                        e.similarTokenIds = e.similarTokenIds.filter((e => (!!e.active() || (!1))))
                                    }));
                                    let r = 0,
                                        s = i.tokenMap[0].set.size,
                                        a = 0;
                                    i.tokenMap.forEach(((e, t) => {
                                        e.set.size < s && (s = e.set.size, r = t)
                                    })), i.tokenMap.length >= 2 ? i.tokenMap[r].set.forEach((e => {
                                        i.resultList.has(e) || i.tokenMap.find((t => !t.set.has(e))) || (i.resultList.add(e), h.add(e))
                                    })) : i.tokenMap[0].set.forEach((e => {
                                        i.resultList.has(e) || (i.resultList.add(e), h.add(e))
                                    }));
                                    let c = Math.min(i.maxAllMin, i.minAllMax + 1),
                                        d = !1,
                                        u = !1;
                                    if (t.forEach((e => {
                                            e.valid() ? (a += e.trim(c), d = !0) : !u && e.active() && (u = !0)
                                        })), 0 == a && !u) return i.hasMore = 0, g();
                                    if (!d) return i.hasMore = 0, g();
                                    if (o) {
                                        if (i.resultList.size > m + 20) return i.hasMore = 1, g()
                                    } else if (i.resultList.size > 5e3 && i.resultList.size > m + 20) return i.hasMore = 1, g();
                                    if (i.session_progress >= 1e4) return i.hasMore = 1, g();
                                    y()
                                })).catch(d)
                            }, _ = (e, t, n) => f() ? u(!1, "aborted!!") : null != t && t.length ? (i.tokenMap = i.tokenMap || [], i.tokenMap.push({
                                token: e,
                                set: new Set,
                                similarTokensCount: t.length,
                                maxAllMin: 0,
                                similarTokenIds: t.map((e => new R(e, {
                                    freqNeed: n,
                                    storeIndex: p,
                                    shouldStop: f
                                }))),
                                freqNeed: n
                            }), E--, void(0 === E && y(!0))) : u(!1, "not_found_token");
                            if (i.progress) return i.tokenMap.forEach((e => {
                                e.similarTokenIds.forEach((e => {
                                    e.renew({
                                        storeIndex: p,
                                        shouldStop: f
                                    })
                                }))
                            })), y(!0);
                            let E = e.length;
                            e.forEach(((t, n) => {
                                let i = t.keyword,
                                    o = t.freq;
                                const a = {
                                        from: i,
                                        to: i + (n == e.length - 1 ? "￿" : ""),
                                        excludeFrom: !1,
                                        excludeTo: !1
                                    },
                                    c = {
                                        limit: r,
                                        index: v
                                    };
                                s.getAllKey(a, c).then((e => {
                                    _(i, e, o)
                                })).catch((e => {
                                    _(i, [], 0)
                                }))
                            }))
                        }), f.TransactionMode.READONLY).then((() => {
                            u(!0)
                        })).catch(d)
                    }))
                }
            };
            var N = n("ES/k"),
                C = n("vFc7"),
                D = n("+eUS");
            Object(D.a)(f.RunMode.Worker);
            let L = [],
                U = 1,
                x = 2,
                k = 3,
                B = 5,
                j = 6,
                F = 9,
                G = {
                    [U]: function(e, t, n, r) {
                        return new Promise(((i, o) => {
                            let s, a = Date.now();
                            s = t ? () => Z(n, r) : () => !1;
                            let c = N.a.formatTextSearch(e);
                            if (!c) return i([]);
                            let d = c.split(" "),
                                u = d.length,
                                l = new Array(u);
                            l.fill(1);
                            for (let e = 0; e < u; ++e)
                                for (let t = 0; t < u; ++t) e !== t && d[t].startsWith(d[e]) && l[e]++;
                            let p = [],
                                m = new Set;
                            d.forEach(((e, t) => {
                                m.has(e) || (m.add(e), p.push({
                                    keyword: e,
                                    freq: l[t]
                                }))
                            })), p.sort(((e, t) => t.freq == e.freq ? t.keyword.length - e.keyword.length : t.freq - e.freq)), p.length >= 5 && (p = p.slice(0, 5));
                            let h = null,
                                f = [],
                                g = !0,
                                y = 0,
                                _ = {};
                            const E = e => {
                                if (s()) return o("aborted");
                                M.searchV2(p, s, {
                                    limitForEachKeyword: e,
                                    cache: _,
                                    progress: !!r.progress
                                }).then((e => {
                                    let t = _.hasMore,
                                        o = Date.now() - a > 3e3;
                                    if (t && !r.progress) return E();
                                    if (r && r.filter && (e = re(e, r.filter)), !t || e.length >= M.MAX_RESULT_SEARCH || o) return i(e);
                                    if (f = e, !h)
                                        if (g) {
                                            g = !1;
                                            let e = f ? f.length : 0;
                                            e != y && (y = e, ie(f, n))
                                        } else h = setTimeout((() => {
                                            h = null;
                                            let e = f ? f.length : 0;
                                            e != y && (y = e, ie(f, n))
                                        }), 600);
                                    E()
                                })).catch((e => {
                                    if (s()) return o("aborted");
                                    i(f)
                                }))
                            };
                            E()
                        }))
                    },
                    [x]: function(e) {
                        return new Promise(((t, n) => {
                            M._addAllIndex(e.list).then((n => {
                                e.migrateData && ne(e.migrateData), t()
                            })).catch(n)
                        }))
                    },
                    [4]: function(e) {
                        return new Promise(((t, n) => {
                            M.setDataName(e.userId, e.UIN).then((() => {
                                t()
                            })).catch((e => {
                                n(e)
                            }))
                        }))
                    },
                    [k]: function(e, t, n, r) {
                        void 0 === t && (t = !1);
                        return new Promise(((t, n) => {
                            if (e.length > 500) {
                                let t = e.slice(500, e.length);
                                J({
                                    act: k,
                                    data: t,
                                    taskId: $.next(),
                                    isAbort: !1,
                                    additions: r,
                                    priority: 1
                                }), e = e.slice(0, 500)
                            }
                            let i = [],
                                o = [],
                                s = new Set;
                            e.forEach((e => {
                                if (s.has(e.msgId)) return;
                                s.add(e.msgId), o.push(N.a.getContentObject(e));
                                let t = N.a.getTextFromMessage(e.content);
                                N.a.getListItems(t, e.msgId, i)
                            }));
                            let a = !1;
                            r && r.constructor == Object && r.migrate && (a = !0), J({
                                act: B,
                                data: {
                                    indexList: i,
                                    contents: o,
                                    migrate: a
                                },
                                taskId: $.next(),
                                isAbort: !1,
                                priority: 1
                            }), t()
                        }))
                    },
                    [B]: function(e) {
                        return new Promise(((t, n) => {
                            let {
                                indexList: i,
                                contents: o,
                                migrate: s
                            } = Object(r.a)({}, e), a = 2, c = null, d = {}, u = {};
                            s && (c = e.migrateData);
                            let l = [],
                                p = new Set;
                            i.forEach((e => {
                                p.has(e.keyword) || "" == e.keyword || (p.add(e.keyword), l.push(e.keyword))
                            }));
                            let m = () => {
                                if (a--, !a) {
                                    if (!h) return;
                                    clearTimeout(h);
                                    let e = [];
                                    if (i.forEach((t => {
                                            d.hasOwnProperty(t.msgId) && u.hasOwnProperty(t.keyword) && e.push({
                                                keywordId: u[t.keyword],
                                                contentId: d[t.msgId],
                                                freq: t.freq
                                            })
                                        })), !c && 0 === e.length) return t();
                                    J({
                                        act: x,
                                        data: {
                                            list: e,
                                            migrateData: c
                                        },
                                        taskId: $.next(),
                                        isAbort: !1,
                                        priority: 1
                                    }), t()
                                }
                            };
                            const h = setTimeout((() => {
                                t()
                            }), 1e4);
                            M._getContentIds(o, s).then((e => {
                                d = e, m()
                            })).catch(m), M._getKeywordIds(l).then((e => {
                                u = e, m()
                            })).catch(m)
                        }))
                    },
                    [7]: function(e) {
                        return new Promise(((t, n) => {
                            M.migrate(e).then((e => {
                                e && e.indexList.length > 0 ? J({
                                    act: B,
                                    data: {
                                        indexList: e.indexList,
                                        contents: e.contents,
                                        migrate: !0,
                                        migrateData: {
                                            lowerKw: e.lowerKw,
                                            done: e.done
                                        }
                                    },
                                    taskId: $.next(),
                                    isAbort: !1,
                                    priority: 1
                                }) : (e.lowerKw || e.done) && ne({
                                    lowerKw: e.lowerKw,
                                    done: e.done
                                }), t()
                            })).catch(n)
                        }))
                    },
                    [8]: function() {
                        return new Promise(((e, t) => {
                            M.delOldData().then((() => {
                                te("del old data success!!"), e()
                            })).catch(t)
                        }))
                    },
                    [F]: function() {
                        return new Promise(((e, t) => {
                            M.delAllData().then((() => {
                                te("del all data"), e()
                            })).catch(t)
                        }))
                    },
                    [10]: function(e) {
                        return new Promise(((t, n) => {
                            let r = [];
                            e.forEach((e => {
                                    let t = [],
                                        n = function() {
                                            try {
                                                return 1
                                            } catch (e) {
                                                return 3
                                            }
                                            return 2
                                        }();
                                    e.content && e.content.constructor == String && (t = C.h.parseDataMessage(e.content.toLowerCase())), t.length > 0 && t.forEach((t => {
                                        t && t.constructor === Array && 3 === t.length && r.push([C.a, e.msgKey, e.isGroup, t[0], t[1], e.msgId, e.content.length, e.ts, t[2], n].join("\t"))
                                    }))
                                })),
                                function(e) {
                                    if (!e || 0 == e.length) return;
                                    se.push.apply(se, e), oe && clearTimeout(oe);
                                    oe = setTimeout((() => {
                                        oe = null, se.length > 0 && self.postMessage({
                                            actionLog: !0,
                                            data: [...se]
                                        }), se = []
                                    }), 1e4)
                                }(r), t()
                        }))
                    },
                    [11]: function(e) {
                        return new Promise(((t, n) => {
                            te(e ? "_initTagging" + e.length : "_initTagging data == null"), C.h.prepareData(e), t()
                        }))
                    },
                    [15]: function(e) {
                        return new Promise((e => {
                            e()
                        }))
                    },
                    [16]: function(e) {
                        return new Promise(((t, n) => {
                            M.__checkRoll((e || {}).limits), t()
                        }))
                    },
                    [18]: function(e) {
                        return new Promise(((e, t) => {
                            t(null)
                        }))
                    }
                };
            let q = 2;
            let H = null;
            const z = "_",
                K = "with-filter-msgType",
                W = "with-filter-convId",
                V = "with-filter-convId_msgType",
                Y = {
                    [z]: [W, V],
                    [K]: [W, V],
                    [W]: [z, K],
                    [V]: [z, K]
                };
            const $ = new class {
                constructor() {
                    this.value = 1
                }
                next() {
                    return this.value++, this.value
                }
            };
            let Q = new Map;

            function X(e) {
                if (!e) return "_";
                let t = "_";
                if (e.searchType) return e.searchType;
                if (e.filter) {
                    let n = Object.keys(e.filter);
                    n.sort(((e, t) => e == t ? 0 : e > t ? 1 : -1)), n.length && (t = "with-filter-" + n.join("_"))
                }
                return e.searchType = t, t
            }

            function Z(e, t) {
                let n = X(t);
                return e != Q.get(n)
            }

            function J(e) {
                let t = !1;
                if (e.act == U) {
                    let t = X(e.additions);
                    Q.set(t, e.taskId), t && Y.hasOwnProperty(t) && Y[t].length && Y[t].forEach((t => {
                        Q.set(t, e.taskId)
                    }))
                }
                for (let i = 0; i < L.length; ++i)
                    if (n = L[i], r = e, n.priority >= r.priority) {
                        L.splice(i, 0, e), t = !0;
                        break
                    }
                var n, r;
                t || L.push(e),
                    function() {
                        if (1 == q) return;
                        q = 1, ee()
                    }()
            }

            function ee() {
                if (0 == L.length) return q = 2, H && clearTimeout(H), void(H = setTimeout((() => {
                    te("FLAG_SLEEP_TOO_LONG"), H = null
                }), 6e4));
                H && (clearTimeout(H), H = null);
                let e = L.pop();
                G[e.act](e.data, e.isAbort, e.taskId, e.additions).then((t => {
                    e.callback && self.postMessage({
                        success: !0,
                        data: t,
                        taskId: e.taskId
                    }), ee()
                })).catch((t => {
                    e.callback && self.postMessage({
                        success: !1,
                        data: t,
                        taskId: e.taskId
                    }), te("err " + e.act + " " + t), ee()
                }))
            }

            function te(e) {
                self.postMessage({
                    logErr: !0,
                    data: e
                })
            }

            function ne(e) {
                self.postMessage({
                    migrate: !0,
                    data: Object(r.a)({}, e)
                })
            }

            function re(e, t) {
                try {
                    return e.filter((e => {
                        for (let n in t)
                            if (t.hasOwnProperty(n) && (!e || e[n] != t[n])) return !1;
                        return !0
                    }))
                } catch (n) {
                    return e
                }
            }

            function ie(e, t) {
                self.postMessage({
                    progress: !0,
                    taskId: t,
                    data: e
                })
            }
            self.onmessage = e => {
                e.data;
                let t = e.data;
                switch (t.act) {
                    case j:
                        Q = new Map, L = L.filter((e => e.act != U));
                        break;
                    case F:
                        L = [], J(t);
                        break;
                    default:
                        J(t)
                }
            };
            let oe, se = []
        },
        "7FSS": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            }));
            const r = globalThis.zconsole || globalThis.console
        },
        "7xKq": function(e, t) {},
        "8/YW": function(e, t, n) {
            "use strict";
            var r = n("45ei");
            n.d(t, "b", (function() {
                return r.a
            })), n.d(t, "c", (function() {
                return r.d
            }));
            var i = n("Jcee");
            n.d(t, "a", (function() {
                return i.a
            }));
            var o = n("6Sr9");
            n.d(t, "d", (function() {
                return o.a
            })), n.d(t, "e", (function() {
                return o.b
            })), n.d(t, "f", (function() {
                return o.c
            })), n.d(t, "g", (function() {
                return o.d
            })), n.d(t, "h", (function() {
                return o.f
            }))
        },
        "8ogj": function(e, t, n) {
            "use strict";
            n("cfqX");
            var r = n("N1xz");
            (() => {
                r.a.install()
            })()
        },
        "9Nap": function(e, t, n) {
            var r = n("/9aa");
            e.exports = function(e) {
                if ("string" == typeof e || r(e)) return e;
                var t = e + "";
                return "0" == t && 1 / e == -Infinity ? "-0" : t
            }
        },
        "9OqN": function(e, t, n) {
            var r, i, o;
            e.exports = (o = n("Ib8C"), n("OLod"), o.mode.CTR = (r = o.lib.BlockCipherMode.extend(), i = r.Encryptor = r.extend({
                processBlock: function(e, t) {
                    var n = this._cipher,
                        r = n.blockSize,
                        i = this._iv,
                        o = this._counter;
                    i && (o = this._counter = i.slice(0), this._iv = void 0);
                    var s = o.slice(0);
                    n.encryptBlock(s, 0), o[r - 1] = o[r - 1] + 1 | 0;
                    for (var a = 0; a < r; a++) e[t + a] ^= s[a]
                }
            }), r.Decryptor = i, r), o.mode.CTR)
        },
        "9ggG": function(e, t, n) {
            var r = n("Z0cm"),
                i = n("/9aa"),
                o = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                s = /^\w*$/;
            e.exports = function(e, t) {
                if (r(e)) return !1;
                var n = typeof e;
                return !("number" != n && "symbol" != n && "boolean" != n && null != e && !i(e)) || (s.test(e) || !o.test(e) || null != t && e in Object(t))
            }
        },
        "9krk": function(e, t) {
            var n = {}.toString;
            e.exports = Array.isArray || function(e) {
                return "[object Array]" == n.call(e)
            }
        },
        "9rga": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return p
            })), n.d(t, "b", (function() {
                return f
            })), n.d(t, "c", (function() {
                return g
            }));
            var r = n("jDHv"),
                i = n("Uzj0"),
                o = n("AH6j"),
                s = n("Mgpg"),
                a = n("YEoC"),
                c = n("DI/x"),
                d = n("PmZf"),
                u = n("1UUk"),
                l = n("0slR");
            class p extends o.b {
                constructor() {
                    super(), this.session = void 0, this.dbSchema = null, this.adapterContainers = void 0, this.adapterBuilder = void 0, this.logger = void 0, this.adapterContainers = new Map, this.adapterBuilder = r.ModuleContainer.resolve(l.a);
                    const e = r.ModuleContainer.resolve(s.ZLoggerFactory);
                    this.logger = e.createZLogger("db", [this.getManagerName()])
                }
                install(e) {
                    this.dbSchema = e, r.ModuleContainer.resolve(u.b).addEventListener(d.a.SessionChange, (e => {
                        this.session = e.session, this.adapterContainers.clear()
                    }))
                }
                get hasAlreadyInitialized() {
                    return !!this.dbSchema
                }
                prepareAdapter(e) {
                    return e.addEventListener(d.a.UnexpectedError, (e => {
                        this.dispatchEvent(new d.d(e.error))
                    })), e
                }
                getAllDBNames() {
                    if (!this.dbSchema) throw new c.v(`The following adapter manager hasn't been installed yet: ${this.getManagerName()}!`);
                    return Object.keys(this.dbSchema)
                }
                getTablesNameOfDB(e) {
                    if (!this.dbSchema) throw new c.v(`The following adapter manager hasn't been installed yet: ${this.getManagerName()}!`);
                    const t = this.dbSchema[e];
                    if (!t) throw new c.n(e);
                    return Object.values(t).map((e => e.name))
                }
                async getDatabaseAdaptersFromScratch(e, t) {
                    void 0 === t && (t = !1);
                    const n = this.adapterBuilder.computeDatabaseConfig(e, this.getAdapterType());
                    if (!n) throw new c.m(e);
                    const r = {};
                    let i = this.getTablesNameOfDB(e);
                    for (const a of i) {
                        const t = this.adapterBuilder.computeDatabaseName(n, a, this.session),
                            i = this.adapterBuilder.computePartitionConfig(n, a, this.session);
                        if (!i) throw new c.p(a, this.session);
                        const o = this.adapterBuilder.computeTableConfig(i, a, e);
                        if (!o) throw new c.r(a);
                        let s = [];
                        n.supportPartitionByField && o.supportPartitionByField && (s = await this.getPartitionValues(t));
                        let d = [];
                        d = s.length ? s.map((e => "" !== e ? `${t}/${e}` : t)) : [t];
                        for (const e of d) r[e] || (r[e] = i)
                    }
                    const o = Object.keys(r);
                    for (const a of o) {
                        await this.isFullnameOfExistedDatabase(a) || delete r[a]
                    }
                    const s = Object.entries(r).map((e => {
                        let [n, r] = e;
                        return t ? this.getCreatedDatabaseAdapter(n, r) : this.adapterBuilder.computeDatabaseAdapter(n, r)
                    }));
                    return Promise.all(s).then((e => e.filter(Boolean)))
                }
                async doesDatabaseExist(e) {
                    const t = this.adapterBuilder.computeDatabaseConfig(e, this.getAdapterType());
                    if (!t) throw new c.m(e);
                    let n = this.getTablesNameOfDB(e);
                    const r = new Set;
                    for (const s of n) {
                        const n = this.adapterBuilder.computeDatabaseName(t, s, this.session),
                            i = this.adapterBuilder.computePartitionConfig(t, s, this.session);
                        if (!i) throw new c.p(s, this.session);
                        const o = this.adapterBuilder.computeTableConfig(i, s, e);
                        if (!o) throw new c.r(s);
                        let a = [];
                        t.supportPartitionByField && o.supportPartitionByField && (a = await this.getPartitionValues(n));
                        let d = [];
                        d = a.length ? a.map((e => "" !== e ? `${n}/${e}` : n)) : [n], d.forEach((e => r.add(e)))
                    }
                    const i = r.values();
                    let o = i.next();
                    for (; !o.done;) {
                        const e = o.value;
                        if (await this.isFullnameOfExistedDatabase(e)) return !0;
                        o = i.next()
                    }
                    return !1
                }
                getDatabaseAdapterForPlanner(e, t, n) {
                    const r = `${e}_${t.type}`;
                    let o = this.adapterContainers.get(r);
                    return o || (o = new i.b.Container, this.adapterContainers.set(r, o), this.adapterBuilder.computeDatabaseAdapter(e, t).then((e => {
                        e && (e = this.prepareAdapter(e)), o.resolve(e)
                    })).catch(o.reject)), o.value || o.promise.then((() => n())).catch((e => {
                        const t = new c.b(r, e.message);
                        this.logger.zsymb(18, 8706, 3e4, (() => [t])), this.dispatchEvent(new d.d(t))
                    })), o.value
                }
                async getCreatedDatabaseAdapter(e, t) {
                    const n = `${e}_${t.type}`;
                    let r = this.adapterContainers.get(n);
                    return r ? (r.value || await r.promise, r.value) : null
                }
                async closeDatabase(e) {
                    const t = (await this.getDatabaseAdaptersFromScratch(e, !0)).map((e => e.closeThisDatabase()));
                    return Promise.all(t).then((() => Promise.resolve())).catch((t => this.logger.zsymb(3, 8706, 30001, "CLOSE database failed!", e, t)))
                }
                closeAllDatabases() {
                    let e = this.getAllDBNames().map((e => this.closeDatabase(e)));
                    return Promise.all(e).then((() => Promise.resolve())).catch((e => this.logger.zsymb(3, 8706, 30002, "CLOSE ALL databases failed!", e)))
                }
                async deleteDatabase(e) {
                    const t = await this.getDatabaseAdaptersFromScratch(e);
                    0 === t.length && this.logger.zsymb(3, 8706, 30003, "'{}' database doesn't exist -> Skip its deletion", e);
                    const n = t.map((e => e.deleteThisDatabase()));
                    return Promise.all(n).then((() => Promise.resolve())).catch((t => this.logger.zsymb(3, 8706, 30004, "DELETE database failed!", e, t)))
                }
                async deleteAllDatabases() {
                    const e = this.getAllDBNames().map((e => this.deleteDatabase(e)));
                    await Promise.all(e).then((() => Promise.resolve())).catch((e => this.logger.zsymb(3, 8706, 30005, "DELETE ALL databases failed!", e)))
                }
            }
            const m = `database-adapter-manager-${a.a.IDB}`,
                h = `database-adapter-manager-${a.a.SQLite}`,
                f = Object(r.define)(m),
                g = Object(r.define)(h)
        },
        ADPh: function(e, t, n) {
            "use strict";
            n("d/or")
        },
        AH6j: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            })), n.d(t, "b", (function() {
                return i
            }));
            class r {
                constructor(e) {
                    this.type = e
                }
            }
            class i {
                constructor() {
                    this.events = void 0, this.events = new Map
                }
                addEventListener(e, t, n) {
                    const r = e.toString();
                    let i = this.events.get(r);
                    i || (i = [], this.events.set(r, i));
                    const o = () => this.removeEventListener(e, t);
                    if (!0 === (null == n ? void 0 : n.once)) {
                        const e = t;
                        t = t => (o(), e(t))
                    }
                    return i.push(t), o
                }
                addEventListenerOnce(e, t) {
                    return this.addEventListener(e, t, {
                        once: !0
                    })
                }
                removeEventListener(e, t) {
                    const n = e.toString(),
                        r = this.events.get(n);
                    if (!r) return;
                    this.events.set(n, r.filter((e => e !== t)))
                }
                dispatchEvent(e) {
                    let t = this.events.get(e.type);
                    if (t && 0 !== t.length) {
                        t = t.slice();
                        for (let n = 0; n < t.length; n++) {
                            const r = t[n];
                            r && r(e)
                        }
                    }
                }
            }
        },
        ALsQ: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.mode.CFB = function() {
                var e = r.lib.BlockCipherMode.extend();

                function t(e, t, n, r) {
                    var i = this._iv;
                    if (i) {
                        var o = i.slice(0);
                        this._iv = void 0
                    } else o = this._prevBlock;
                    r.encryptBlock(o, 0);
                    for (var s = 0; s < n; s++) e[t + s] ^= o[s]
                }
                return e.Encryptor = e.extend({
                    processBlock: function(e, n) {
                        var r = this._cipher,
                            i = r.blockSize;
                        t.call(this, e, n, i, r), this._prevBlock = e.slice(n, n + i)
                    }
                }), e.Decryptor = e.extend({
                    processBlock: function(e, n) {
                        var r = this._cipher,
                            i = r.blockSize,
                            o = e.slice(n, n + i);
                        t.call(this, e, n, i, r), this._prevBlock = o
                    }
                }), e
            }(), r.mode.CFB)
        },
        AP2z: function(e, t, n) {
            var r = n("nmnc"),
                i = Object.prototype,
                o = i.hasOwnProperty,
                s = i.toString,
                a = r ? r.toStringTag : void 0;
            e.exports = function(e) {
                var t = o.call(e, a),
                    n = e[a];
                try {
                    e[a] = void 0;
                    var r = !0
                } catch (c) {}
                var i = s.call(e);
                return r && (t ? e[a] = n : delete e[a]), i
            }
        },
        Abbu: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("YEoC");
            let i;
            var o;
            (o = i || (i = {})).isBeginTransaction = function(e) {
                return e.type === r.d.BeginTransaction
            }, o.isCommitTransaction = function(e) {
                return e.type === r.d.CommitTransaction
            }, o.isInsertQuery = function(e) {
                return e.type === r.d.Insert
            }, o.isInTransaction = function(e) {
                return !!e.transaction
            }, o.isValid = function(e) {
                return !0
            }, o.isPartitionlessQuery = function(e) {
                return e.type === r.d.BeginTransaction || e.type === r.d.CommitTransaction
            }
        },
        Abi4: function(e, t, n) {
            "use strict";
            n("0slR")
        },
        AdzE: function(e, t) {
            e.exports = Object.freeze({})
        },
        AnMC: function(e, t, n) {
            var r = n("wbIY"),
                i = n("QYBB"),
                o = n("LGyv");
            e.exports = r ? function(e, t, n) {
                return i.f(e, t, o(1, n))
            } : function(e, t, n) {
                return e[t] = n, e
            }
        },
        AoYG: function(e, t, n) {
            "use strict";
            var r;
            ! function(e) {
                e.TIME = "TIME", e.MEMORY = "MEMORY", e.CPU = "CPU", e.USAGE = "USAGE", e.APP_USAGE = "APP_USAGE", e.FPS = "FPS"
            }(r || (r = {})), t.a = r
        },
        Bvq2: function(e, t) {
            e.exports = function(e) {
                try {
                    return !!e()
                } catch (t) {
                    return !0
                }
            }
        },
        C9Dv: function(e, t, n) {
            "use strict";

            function r(e) {
                return {
                    default: {
                        tables: Object.values(e)
                    }
                }
            }

            function i(e) {
                return Object.values(e).reduce(((e, t) => (e[t.name] = {
                    tables: [t]
                }, e)), {})
            }
            n.d(t, "b", (function() {
                return r
            })), n.d(t, "a", (function() {
                return i
            }))
        },
        CDcE: function(e, t, n) {
            "use strict";
            n.d(t, "e", (function() {
                return s
            })), n.d(t, "a", (function() {
                return a
            })), n.d(t, "f", (function() {
                return c
            })), n.d(t, "c", (function() {
                return d
            })), n.d(t, "d", (function() {
                return u
            })), n.d(t, "b", (function() {
                return l
            }));
            var r = n("Y58e"),
                i = n("jDHv"),
                o = n("fsQs");

            function s(e, t) {
                void 0 === t && (t = !1);
                const n = e && ((r = e) && r.stack && r.message) ? `${e.name}: ${e.message}` : "Error: [Error]";
                var r;
                return t ? `${n}\ntrace: ${e.stack}` : n
            }

            function a() {
                const e = new WeakSet;
                return (t, n) => {
                    if ("object" == typeof n && null !== n) {
                        if (e.has(n)) return;
                        e.add(n)
                    }
                    return n
                }
            }

            function c(e, t, n) {
                void 0 === t && (t = 1 / 0), void 0 === n && (n = {});
                const {
                    replacer: r,
                    space: i
                } = n;
                return t = isNaN(+t) ? 1 : t, JSON.stringify(function e(t, n, i, o, s) {
                    return n && "object" == typeof n ? (s = Array.isArray(n), JSON.stringify(n, (function(t, a) {
                        if (s || i > 0) {
                            if (r && (a = r(t, a)), !t) return s = Array.isArray(a), n = a;
                            !o && (o = s ? [] : {}), o[t] = e(t, a, s ? i : i - 1, null, null)
                        }
                    })), o || (s ? [] : {})) : n
                }(0, e, t, null, i))
            }

            function d(e) {
                return e && "object" == typeof e && e.zlg_secme && e.zlg_secver === o.o
            }

            function u(e) {
                return !1 === i.ModuleContainer.resolve(r.a).get("zlogger.allowTruncateLine") ? e : {
                    args: e,
                    zlg_unlim: !0
                }
            }

            function l(e) {
                return e && "object" == typeof e && !0 === e.zlg_unlim
            }
        },
        CHYU: function(e, t, n) {
            "use strict";
            var r;
            ! function(e) {
                e.Main = "main", e.Render = "render", e.SharedWorker = "shared-worker", e.Photo = "photo", e.Web = "web", e.Embed = "embed", e.Login = "login", e.Unknown = "unknown"
            }(r || (r = {})), t.a = r
        },
        Cede: function(e, t, n) {
            "use strict";
            n("ipeT")
        },
        CtPB: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("uS0h"),
                o = n("fPcq"),
                s = n("pMzR"),
                a = n("g+yy"),
                c = n("6A67"),
                d = n("1vzR"),
                u = n("aMN+"),
                l = n("I383"),
                p = n("rCOr"),
                m = n("PvD+");

            function h(e, t, n) {
                throw new Error(`${p.decodeErrPrefix} encountered invalid minor (${n}) for major ${e[t]>>>5}`)
            }

            function f(e) {
                return () => {
                    throw new Error(`${p.decodeErrPrefix} ${e}`)
                }
            }
            const g = [];
            for (let _ = 0; _ <= 23; _++) g[_] = h;
            g[24] = i.decodeUint8, g[25] = i.decodeUint16, g[26] = i.decodeUint32, g[27] = i.decodeUint64, g[28] = h, g[29] = h, g[30] = h, g[31] = h;
            for (let _ = 32; _ <= 55; _++) g[_] = h;
            g[56] = o.decodeNegint8, g[57] = o.decodeNegint16, g[58] = o.decodeNegint32, g[59] = o.decodeNegint64, g[60] = h, g[61] = h, g[62] = h, g[63] = h;
            for (let _ = 64; _ <= 87; _++) g[_] = s.decodeBytesCompact;
            g[88] = s.decodeBytes8, g[89] = s.decodeBytes16, g[90] = s.decodeBytes32, g[91] = s.decodeBytes64, g[92] = h, g[93] = h, g[94] = h, g[95] = f("indefinite length bytes/strings are not supported");
            for (let _ = 96; _ <= 119; _++) g[_] = a.decodeStringCompact;
            g[120] = a.decodeString8, g[121] = a.decodeString16, g[122] = a.decodeString32, g[123] = a.decodeString64, g[124] = h, g[125] = h, g[126] = h, g[127] = f("indefinite length bytes/strings are not supported");
            for (let _ = 128; _ <= 151; _++) g[_] = c.decodeArrayCompact;
            g[152] = c.decodeArray8, g[153] = c.decodeArray16, g[154] = c.decodeArray32, g[155] = c.decodeArray64, g[156] = h, g[157] = h, g[158] = h, g[159] = c.decodeArrayIndefinite;
            for (let _ = 160; _ <= 183; _++) g[_] = d.decodeMapCompact;
            g[184] = d.decodeMap8, g[185] = d.decodeMap16, g[186] = d.decodeMap32, g[187] = d.decodeMap64, g[188] = h, g[189] = h, g[190] = h, g[191] = d.decodeMapIndefinite;
            for (let _ = 192; _ <= 215; _++) g[_] = u.decodeTagCompact;
            g[216] = u.decodeTag8, g[217] = u.decodeTag16, g[218] = u.decodeTag32, g[219] = u.decodeTag64, g[220] = h, g[221] = h, g[222] = h, g[223] = h;
            for (let _ = 224; _ <= 243; _++) g[_] = f("simple values are not supported");
            g[244] = h, g[245] = h, g[246] = h, g[247] = l.decodeUndefined, g[248] = f("simple values are not supported"), g[249] = l.decodeFloat16, g[250] = l.decodeFloat32, g[251] = l.decodeFloat64, g[252] = h, g[253] = h, g[254] = h, g[255] = l.decodeBreak;
            const y = [];
            for (let _ = 0; _ < 24; _++) y[_] = new r.Token(r.Type.uint, _, 1);
            for (let _ = -1; _ >= -24; _--) y[31 - _] = new r.Token(r.Type.negint, _, 1);
            y[64] = new r.Token(r.Type.bytes, new Uint8Array(0), 1), y[96] = new r.Token(r.Type.string, "", 1), y[128] = new r.Token(r.Type.array, 0, 1), y[160] = new r.Token(r.Type.map, 0, 1), y[244] = new r.Token(r.Type.false, !1, 1), y[245] = new r.Token(r.Type.true, !0, 1), y[246] = new r.Token(r.Type.null, null, 1), t.jump = g, t.quick = y, t.quickEncodeToken = function(e) {
                switch (e.type) {
                    case r.Type.false:
                        return m.fromArray([244]);
                    case r.Type.true:
                        return m.fromArray([245]);
                    case r.Type.null:
                        return m.fromArray([246]);
                    case r.Type.bytes:
                        return e.value.length ? void 0 : m.fromArray([64]);
                    case r.Type.string:
                        return "" === e.value ? m.fromArray([96]) : void 0;
                    case r.Type.array:
                        return 0 === e.value ? m.fromArray([128]) : void 0;
                    case r.Type.map:
                        return 0 === e.value ? m.fromArray([160]) : void 0;
                    case r.Type.uint:
                        return e.value < 24 ? m.fromArray([Number(e.value)]) : void 0;
                    case r.Type.negint:
                        if (e.value >= -24) return m.fromArray([31 - Number(e.value)])
                }
            }
        },
        Cwc5: function(e, t, n) {
            var r = n("NKxu"),
                i = n("Npjl");
            e.exports = function(e, t) {
                var n = i(e, t);
                return r(n) ? n : void 0
            }
        },
        Cwh7: function(e, t, n) {
            (function(e) {
                function n(e, t) {
                    for (var n = 0, r = e.length - 1; r >= 0; r--) {
                        var i = e[r];
                        "." === i ? e.splice(r, 1) : ".." === i ? (e.splice(r, 1), n++) : n && (e.splice(r, 1), n--)
                    }
                    if (t)
                        for (; n--; n) e.unshift("..");
                    return e
                }

                function r(e, t) {
                    if (e.filter) return e.filter(t);
                    for (var n = [], r = 0; r < e.length; r++) t(e[r], r, e) && n.push(e[r]);
                    return n
                }
                t.resolve = function() {
                    for (var t = "", i = !1, o = arguments.length - 1; o >= -1 && !i; o--) {
                        var s = o >= 0 ? arguments[o] : e.cwd();
                        if ("string" != typeof s) throw new TypeError("Arguments to path.resolve must be strings");
                        s && (t = s + "/" + t, i = "/" === s.charAt(0))
                    }
                    return (i ? "/" : "") + (t = n(r(t.split("/"), (function(e) {
                        return !!e
                    })), !i).join("/")) || "."
                }, t.normalize = function(e) {
                    var o = t.isAbsolute(e),
                        s = "/" === i(e, -1);
                    return (e = n(r(e.split("/"), (function(e) {
                        return !!e
                    })), !o).join("/")) || o || (e = "."), e && s && (e += "/"), (o ? "/" : "") + e
                }, t.isAbsolute = function(e) {
                    return "/" === e.charAt(0)
                }, t.join = function() {
                    var e = Array.prototype.slice.call(arguments, 0);
                    return t.normalize(r(e, (function(e, t) {
                        if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
                        return e
                    })).join("/"))
                }, t.relative = function(e, n) {
                    function r(e) {
                        for (var t = 0; t < e.length && "" === e[t]; t++);
                        for (var n = e.length - 1; n >= 0 && "" === e[n]; n--);
                        return t > n ? [] : e.slice(t, n - t + 1)
                    }
                    e = t.resolve(e).substr(1), n = t.resolve(n).substr(1);
                    for (var i = r(e.split("/")), o = r(n.split("/")), s = Math.min(i.length, o.length), a = s, c = 0; c < s; c++)
                        if (i[c] !== o[c]) {
                            a = c;
                            break
                        }
                    var d = [];
                    for (c = a; c < i.length; c++) d.push("..");
                    return (d = d.concat(o.slice(a))).join("/")
                }, t.sep = "/", t.delimiter = ":", t.dirname = function(e) {
                    if ("string" != typeof e && (e += ""), 0 === e.length) return ".";
                    for (var t = e.charCodeAt(0), n = 47 === t, r = -1, i = !0, o = e.length - 1; o >= 1; --o)
                        if (47 === (t = e.charCodeAt(o))) {
                            if (!i) {
                                r = o;
                                break
                            }
                        } else i = !1;
                    return -1 === r ? n ? "/" : "." : n && 1 === r ? "/" : e.slice(0, r)
                }, t.basename = function(e, t) {
                    var n = function(e) {
                        "string" != typeof e && (e += "");
                        var t, n = 0,
                            r = -1,
                            i = !0;
                        for (t = e.length - 1; t >= 0; --t)
                            if (47 === e.charCodeAt(t)) {
                                if (!i) {
                                    n = t + 1;
                                    break
                                }
                            } else -1 === r && (i = !1, r = t + 1);
                        return -1 === r ? "" : e.slice(n, r)
                    }(e);
                    return t && n.substr(-1 * t.length) === t && (n = n.substr(0, n.length - t.length)), n
                }, t.extname = function(e) {
                    "string" != typeof e && (e += "");
                    for (var t = -1, n = 0, r = -1, i = !0, o = 0, s = e.length - 1; s >= 0; --s) {
                        var a = e.charCodeAt(s);
                        if (47 !== a) - 1 === r && (i = !1, r = s + 1), 46 === a ? -1 === t ? t = s : 1 !== o && (o = 1) : -1 !== t && (o = -1);
                        else if (!i) {
                            n = s + 1;
                            break
                        }
                    }
                    return -1 === t || -1 === r || 0 === o || 1 === o && t === r - 1 && t === n + 1 ? "" : e.slice(t, r)
                };
                var i = "b" === "ab".substr(-1) ? function(e, t, n) {
                    return e.substr(t, n)
                } : function(e, t, n) {
                    return t < 0 && (t = e.length + t), e.substr(t, n)
                }
            }).call(this, n("ckNr"))
        },
        "DI/x": function(e, t, n) {
            "use strict";
            n.d(t, "e", (function() {
                return r
            })), n.d(t, "a", (function() {
                return i
            })), n.d(t, "i", (function() {
                return o
            })), n.d(t, "t", (function() {
                return s
            })), n.d(t, "w", (function() {
                return a
            })), n.d(t, "s", (function() {
                return c
            })), n.d(t, "m", (function() {
                return d
            })), n.d(t, "n", (function() {
                return u
            })), n.d(t, "r", (function() {
                return l
            })), n.d(t, "p", (function() {
                return p
            })), n.d(t, "o", (function() {
                return m
            })), n.d(t, "q", (function() {
                return h
            })), n.d(t, "b", (function() {
                return f
            })), n.d(t, "g", (function() {
                return g
            })), n.d(t, "l", (function() {
                return y
            })), n.d(t, "f", (function() {
                return _
            })), n.d(t, "j", (function() {
                return E
            })), n.d(t, "h", (function() {
                return b
            })), n.d(t, "d", (function() {
                return I
            })), n.d(t, "k", (function() {
                return v
            })), n.d(t, "u", (function() {
                return T
            })), n.d(t, "v", (function() {
                return O
            })), n.d(t, "c", (function() {
                return w
            }));
            class r extends Error {
                constructor(e, t, n) {
                    void 0 === n && (n = []), super(t), this._code = void 0, this.qosParams = void 0, this.qosParams = [t, ...n], this._code = e
                }
                get code() {
                    return this._code
                }
                get codeString() {
                    return `0x13${this._code}`
                }
                setStack(e) {
                    let t = `${this.name}: ${this.message}`;
                    if (e) {
                        const n = e.indexOf("\n");
                        t += e.slice(n)
                    }
                    this.stack = t
                }
            }
            class i extends r {
                constructor(e, t) {
                    super(101, `"${e}" is abstract method`, t), this.name = "CallAbstractMethod"
                }
            }
            class o extends r {
                constructor(e, t) {
                    super(102, e, t), this.name = "DBUnknownError"
                }
            }
            class s extends r {
                constructor(e) {
                    super(103, "", e), this.name = "QueryTimeout"
                }
            }
            class a extends r {
                constructor(e, t, n) {
                    super(104, `'${e}' - ${t}`, n), this.name = "WrongUseOfMethod"
                }
            }
            class c extends r {
                constructor(e, t) {
                    super(105, `'${e}' hasn't been supported yet!`, t), this.name = "NonSupportedFeature"
                }
            }
            class d extends r {
                constructor(e, t) {
                    super(201, `Missing config for '${e}' database`, t), this.name = "MissingDatabaseConfig"
                }
            }
            class u extends r {
                constructor(e, t) {
                    super(202, `Missing schema for '${e}' database`, t), this.name = "MissingDatabaseSchema"
                }
            }
            class l extends r {
                constructor(e, t) {
                    super(203, `Missing config for '${e}' table`, t), this.name = "MissingTableConfig"
                }
            }
            class p extends r {
                constructor(e, t, n) {
                    let r = `Missing partition config for '${e}' table`;
                    if (t) {
                        const {
                            userId: e
                        } = t;
                        r += ` - userId: ${e}`
                    }
                    super(204, r, n), this.name = "MissingPartitionConfig"
                }
            }
            class m extends r {
                constructor(e, t) {
                    super(205, `Missing config for'${e}' index!`, t), this.name = "MissingIndexConfig"
                }
            }
            class h extends r {
                constructor(e) {
                    super(206, "", e), this.name = "MissingPartitionKey"
                }
            }
            class f extends r {
                constructor(e, t) {
                    super(208, t, [e]), this.name = "CreateAdapterError"
                }
            }
            class g extends r {
                constructor(e, t) {
                    super(209, e, t), this.name = "DBSettingsError"
                }
            }
            class y extends r {
                constructor(e, t) {
                    super(301, e, t), this.name = "InvalidQueryParams"
                }
            }
            class _ extends r {
                constructor(e, t) {
                    super(302, e, t), this.name = "DBExecutionError"
                }
            }
            class E extends r {
                constructor(e, t) {
                    super(303, e, t), this.name = "DataTransformError"
                }
            }
            class b extends r {
                constructor(e, t) {
                    super(304, e, t), this.name = "DBTransactionError"
                }
            }
            class I extends r {
                constructor(e, t) {
                    super(305, e, t), this.name = "DBConnectionError"
                }
            }
            class v extends r {
                constructor(e, t) {
                    super(701, e, t), this.name = "IDBConnectionError"
                }
            }
            class T extends r {
                constructor(e, t) {
                    super(501, e, t), this.name = "SchemaMigrationError"
                }
            }
            class O extends r {
                constructor(e, t) {
                    super(601, e, t), this.name = "UninitializedError"
                }
            }
            class w extends r {
                constructor(e, t, n) {
                    super(n, e), this.name = void 0, this.name = t
                }
            }
        },
        E2jh: function(e, t, n) {
            var r, i = n("2gN3"),
                o = (r = /[^.]+$/.exec(i && i.keys && i.keys.IE_PROTO || "")) ? "Symbol(src)_1." + r : "";
            e.exports = function(e) {
                return !!o && o in e
            }
        },
        E4JC: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("ETIr"), n("cv67"), n("K3mO"), n("OLod"), function() {
                var e = r,
                    t = e.lib.StreamCipher,
                    n = e.algo,
                    i = [],
                    o = [],
                    s = [],
                    a = n.Rabbit = t.extend({
                        _doReset: function() {
                            for (var e = this._key.words, t = this.cfg.iv, n = 0; n < 4; n++) e[n] = 16711935 & (e[n] << 8 | e[n] >>> 24) | 4278255360 & (e[n] << 24 | e[n] >>> 8);
                            var r = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                i = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            for (this._b = 0, n = 0; n < 4; n++) c.call(this);
                            for (n = 0; n < 8; n++) i[n] ^= r[n + 4 & 7];
                            if (t) {
                                var o = t.words,
                                    s = o[0],
                                    a = o[1],
                                    d = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8),
                                    u = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8),
                                    l = d >>> 16 | 4294901760 & u,
                                    p = u << 16 | 65535 & d;
                                for (i[0] ^= d, i[1] ^= l, i[2] ^= u, i[3] ^= p, i[4] ^= d, i[5] ^= l, i[6] ^= u, i[7] ^= p, n = 0; n < 4; n++) c.call(this)
                            }
                        },
                        _doProcessBlock: function(e, t) {
                            var n = this._X;
                            c.call(this), i[0] = n[0] ^ n[5] >>> 16 ^ n[3] << 16, i[1] = n[2] ^ n[7] >>> 16 ^ n[5] << 16, i[2] = n[4] ^ n[1] >>> 16 ^ n[7] << 16, i[3] = n[6] ^ n[3] >>> 16 ^ n[1] << 16;
                            for (var r = 0; r < 4; r++) i[r] = 16711935 & (i[r] << 8 | i[r] >>> 24) | 4278255360 & (i[r] << 24 | i[r] >>> 8), e[t + r] ^= i[r]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function c() {
                    for (var e = this._X, t = this._C, n = 0; n < 8; n++) o[n] = t[n];
                    for (t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < o[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < o[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < o[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < o[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < o[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < o[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < o[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < o[7] >>> 0 ? 1 : 0, n = 0; n < 8; n++) {
                        var r = e[n] + t[n],
                            i = 65535 & r,
                            a = r >>> 16,
                            c = ((i * i >>> 17) + i * a >>> 15) + a * a,
                            d = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);
                        s[n] = c ^ d
                    }
                    e[0] = s[0] + (s[7] << 16 | s[7] >>> 16) + (s[6] << 16 | s[6] >>> 16) | 0, e[1] = s[1] + (s[0] << 8 | s[0] >>> 24) + s[7] | 0, e[2] = s[2] + (s[1] << 16 | s[1] >>> 16) + (s[0] << 16 | s[0] >>> 16) | 0, e[3] = s[3] + (s[2] << 8 | s[2] >>> 24) + s[1] | 0, e[4] = s[4] + (s[3] << 16 | s[3] >>> 16) + (s[2] << 16 | s[2] >>> 16) | 0, e[5] = s[5] + (s[4] << 8 | s[4] >>> 24) + s[3] | 0, e[6] = s[6] + (s[5] << 16 | s[5] >>> 16) + (s[4] << 16 | s[4] >>> 16) | 0, e[7] = s[7] + (s[6] << 8 | s[6] >>> 24) + s[5] | 0
                }
                e.Rabbit = t._createHelper(a)
            }(), r.Rabbit)
        },
        ELcG: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function(e) {
                var t = r,
                    n = t.lib,
                    i = n.WordArray,
                    o = n.Hasher,
                    s = t.algo,
                    a = i.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
                    c = i.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
                    d = i.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
                    u = i.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
                    l = i.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                    p = i.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                    m = s.RIPEMD160 = o.extend({
                        _doReset: function() {
                            this._hash = i.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = 0; n < 16; n++) {
                                var r = t + n,
                                    i = e[r];
                                e[r] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8)
                            }
                            var o, s, m, b, I, v, T, O, w, P, S, A = this._hash.words,
                                R = l.words,
                                M = p.words,
                                N = a.words,
                                C = c.words,
                                D = d.words,
                                L = u.words;
                            for (v = o = A[0], T = s = A[1], O = m = A[2], w = b = A[3], P = I = A[4], n = 0; n < 80; n += 1) S = o + e[t + N[n]] | 0, S += n < 16 ? h(s, m, b) + R[0] : n < 32 ? f(s, m, b) + R[1] : n < 48 ? g(s, m, b) + R[2] : n < 64 ? y(s, m, b) + R[3] : _(s, m, b) + R[4], S = (S = E(S |= 0, D[n])) + I | 0, o = I, I = b, b = E(m, 10), m = s, s = S, S = v + e[t + C[n]] | 0, S += n < 16 ? _(T, O, w) + M[0] : n < 32 ? y(T, O, w) + M[1] : n < 48 ? g(T, O, w) + M[2] : n < 64 ? f(T, O, w) + M[3] : h(T, O, w) + M[4], S = (S = E(S |= 0, L[n])) + P | 0, v = P, P = w, w = E(O, 10), O = T, T = S;
                            S = A[1] + m + w | 0, A[1] = A[2] + b + P | 0, A[2] = A[3] + I + v | 0, A[3] = A[4] + o + T | 0, A[4] = A[0] + s + O | 0, A[0] = S
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                t = e.words,
                                n = 8 * this._nDataBytes,
                                r = 8 * e.sigBytes;
                            t[r >>> 5] |= 128 << 24 - r % 32, t[14 + (r + 64 >>> 9 << 4)] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8), e.sigBytes = 4 * (t.length + 1), this._process();
                            for (var i = this._hash, o = i.words, s = 0; s < 5; s++) {
                                var a = o[s];
                                o[s] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8)
                            }
                            return i
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });

                function h(e, t, n) {
                    return e ^ t ^ n
                }

                function f(e, t, n) {
                    return e & t | ~e & n
                }

                function g(e, t, n) {
                    return (e | ~t) ^ n
                }

                function y(e, t, n) {
                    return e & n | t & ~n
                }

                function _(e, t, n) {
                    return e ^ (t | ~n)
                }

                function E(e, t) {
                    return e << t | e >>> 32 - t
                }
                t.RIPEMD160 = o._createHelper(m), t.HmacRIPEMD160 = o._createHmacHelper(m)
            }(Math), r.RIPEMD160)
        },
        "ES/k": function(e, t, n) {
            "use strict";
            var r = n("1pet");
            const i = new class {
                constructor() {
                    this._initFormatText()
                }
                getContentObject(e) {
                    return {
                        msgId: e.msgId,
                        convId: "0" == e.msgKey ? e.idTo : e.msgKey,
                        msgType: e.msgType
                    }
                }
                getMessageWithNumKeyWords(e) {
                    let t = "qwertyuiopasdfghjklzxcvbnm";
                    const n = e => {
                        let n = [];
                        for (let r = 0; r < e; r++) n.push(t[Math.floor(Math.random() * t.length)]);
                        return n.join("")
                    };
                    let r = ["testtxt"];
                    for (let i = 0; i < e; i++) r.push(n(Math.floor(10 * Math.random() + 5)));
                    return r.join(" ")
                }
                getListItems(e, t, n) {
                    let r = e.split(" "),
                        i = new Array(r.length);
                    i.fill(1);
                    for (let a = 0; a < r.length; ++a)
                        for (let e = 0; e < r.length; ++e) a != e && r[e].startsWith(r[a]) && ++i[a];
                    let o = n || [],
                        s = new Set;
                    return r.forEach(((e, n) => {
                        s.has(e) || (s.add(e), o.push({
                            keyword: e,
                            msgId: t,
                            freq: i[n]
                        }))
                    })), o
                }
                getTextFromMessage(e) {
                    if (!e) return "";
                    let t = "";
                    if (e.constructor == Object) {
                        const n = [],
                            r = e => {
                                "string" == typeof e ? n.push(e) : n.push(JSON.stringify(e))
                            };
                        e.title && r(e.title), (e.description || e.desc) && r(e.description || e.desc), t = n.join(" ")
                    } else t = e;
                    return this.formatTextSearch(t)
                }
                isValidCharacter(e) {
                    return !(e.charCodeAt(0) <= 879 && e.charCodeAt(0) >= 768)
                }
                _initFormatText() {
                    if (this.mapChar) return;
                    this.mapChar = {}, this.validChar = {};
                    const e = {
                        a: "àáạảãâầấậẩẫăằắặẳẵ",
                        e: "èéẹẻẽêềếệểễ",
                        i: "ìíịỉĩ",
                        o: "òóọỏõôồốộổỗơờớợởỡ",
                        u: "ùúụủũưừứựửữ",
                        y: "ỳýỵỷỹ",
                        d: "đ",
                        " ": "!@%^-*(){}+`=<>?/\\,.:;'\"&#[]~$_|\n\r\t"
                    };
                    for (let t in e) {
                        let n = e[t];
                        for (let e of n) this.mapChar[e] = t
                    }
                    for (let t of "abcdefghijklmnopqrstuvwxyz0123456789 ") this.validChar[t] = !0
                }
                removeCombineCharacter(e) {
                    if (!e) return e;
                    let t = [];
                    for (let n of e) this.isValidCharacter(n) && t.push(n);
                    return t.join("")
                }
                simpleGetTextFromMessage(e) {
                    if (!e) return "";
                    if (e.constructor == Object) {
                        let t = [];
                        return e.title && ("string" != typeof e.title ? t.push(JSON.stringify(e.title)) : t.push(e.title)), (e.description || e.desc) && t.push(JSON.stringify(e.description || e.desc)), this.removeCombineCharacter(t.join(" "))
                    }
                    return this.removeCombineCharacter(e)
                }
                formatTextSearch(e) {
                    try {
                        e = e.toLowerCase().normalize(), this._initFormatText();
                        let t = [];
                        for (let n of e) {
                            let e = this.mapChar.hasOwnProperty(n) ? this.mapChar[n] : n;
                            " " == e ? 0 != t.length && " " != t[t.length - 1] && t.push(e) : t.push(e)
                        }
                        for (; t.length > 0 && " " == t[t.length - 1];) t.pop();
                        return t.join("")
                    } catch (t) {
                        return ""
                    }
                }
                getDataForSearch(e) {
                    if (!Array.isArray(e)) return [];
                    if (!e.length) return [];
                    return e.reduce(((e, t) => {
                        if (!t) return e;
                        const {
                            msgType: n
                        } = t;
                        return n == r.MSG_DEL_EVERYONE || n == r.MSG_UNDO || n == r.MSG_UNKNOWN || n == r.MSG_OA || e.push({
                            msgId: t.msgId,
                            toUid: t.toUid,
                            message: t.message,
                            msgType: t.msgType,
                            ts: t.ts || t.sendDttm,
                            fromUid: t.fromUid
                        }), e
                    }), [])
                }
            };
            t.a = i
        },
        ETIr: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function() {
                var e = r,
                    t = e.lib.WordArray;

                function n(e, n, r) {
                    for (var i = [], o = 0, s = 0; s < n; s++)
                        if (s % 4) {
                            var a = r[e.charCodeAt(s - 1)] << s % 4 * 2,
                                c = r[e.charCodeAt(s)] >>> 6 - s % 4 * 2;
                            i[o >>> 2] |= (a | c) << 24 - o % 4 * 8, o++
                        }
                    return t.create(i, o)
                }
                e.enc.Base64 = {
                    stringify: function(e) {
                        var t = e.words,
                            n = e.sigBytes,
                            r = this._map;
                        e.clamp();
                        for (var i = [], o = 0; o < n; o += 3)
                            for (var s = (t[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 16 | (t[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255) << 8 | t[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, a = 0; a < 4 && o + .75 * a < n; a++) i.push(r.charAt(s >>> 6 * (3 - a) & 63));
                        var c = r.charAt(64);
                        if (c)
                            for (; i.length % 4;) i.push(c);
                        return i.join("")
                    },
                    parse: function(e) {
                        var t = e.length,
                            r = this._map,
                            i = this._reverseMap;
                        if (!i) {
                            i = this._reverseMap = [];
                            for (var o = 0; o < r.length; o++) i[r.charCodeAt(o)] = o
                        }
                        var s = r.charAt(64);
                        if (s) {
                            var a = e.indexOf(s); - 1 !== a && (t = a)
                        }
                        return n(e, t, i)
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                }
            }(), r.enc.Base64)
        },
        EpBk: function(e, t) {
            e.exports = function(e) {
                var t = typeof e;
                return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e
            }
        },
        ExA7: function(e, t) {
            e.exports = function(e) {
                return null != e && "object" == typeof e
            }
        },
        "F+F2": function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function() {
                if ("function" == typeof ArrayBuffer) {
                    var e = r.lib.WordArray,
                        t = e.init,
                        n = e.init = function(e) {
                            if (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && e instanceof Uint8ClampedArray || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)), e instanceof Uint8Array) {
                                for (var n = e.byteLength, r = [], i = 0; i < n; i++) r[i >>> 2] |= e[i] << 24 - i % 4 * 8;
                                t.call(this, r, n)
                            } else t.apply(this, arguments)
                        };
                    n.prototype = e
                }
            }(), r.lib.WordArray)
        },
        F1Ur: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            class r {
                constructor(e, t, n) {
                    this.major = e, this.majorEncoded = e << 5, this.name = t, this.terminal = n
                }
                toString() {
                    return `Type[${this.major}].${this.name}`
                }
                compare(e) {
                    return this.major < e.major ? -1 : this.major > e.major ? 1 : 0
                }
            }
            r.uint = new r(0, "uint", !0), r.negint = new r(1, "negint", !0), r.bytes = new r(2, "bytes", !0), r.string = new r(3, "string", !0), r.array = new r(4, "array", !1), r.map = new r(5, "map", !1), r.tag = new r(6, "tag", !1), r.float = new r(7, "float", !0), r.false = new r(7, "false", !0), r.true = new r(7, "true", !0), r.null = new r(7, "null", !0), r.undefined = new r(7, "undefined", !0), r.break = new r(7, "break", !0);
            t.Token = class {
                constructor(e, t, n) {
                    this.type = e, this.value = t, this.encodedLength = n, this.encodedBytes = void 0, this.byteValue = void 0
                }
                toString() {
                    return `Token[${this.type}].${this.value}`
                }
            }, t.Type = r
        },
        GHVm: function(e, t) {
            e.exports = function(e) {
                if (null == e) throw TypeError("Can't call method on " + e);
                return e
            }
        },
        GNiM: function(e, t, n) {
            var r = n("I01J"),
                i = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                o = /\\(\\)?/g,
                s = r((function(e) {
                    var t = [];
                    return 46 === e.charCodeAt(0) && t.push(""), e.replace(i, (function(e, n, r, i) {
                        t.push(r ? i.replace(o, "$1") : n || e)
                    })), t
                }));
            e.exports = s
        },
        GRuw: function(e, t, n) {
            var r, i, o, s, a, c;
            e.exports = (c = n("Ib8C"), n("lPiR"), i = (r = c).lib.WordArray, o = r.algo, s = o.SHA256, a = o.SHA224 = s.extend({
                _doReset: function() {
                    this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
                },
                _doFinalize: function() {
                    var e = s._doFinalize.call(this);
                    return e.sigBytes -= 4, e
                }
            }), r.SHA224 = s._createHelper(a), r.HmacSHA224 = s._createHmacHelper(a), c.SHA224)
        },
        GoyQ: function(e, t) {
            e.exports = function(e) {
                var t = typeof e;
                return null != e && ("object" == t || "function" == t)
            }
        },
        Gtd2: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("JOqG"),
                i = n("F1Ur"),
                o = n("49vF"),
                s = n("rCOr"),
                a = n("CtPB"),
                c = n("PvD+"),
                d = n("uS0h"),
                u = n("fPcq"),
                l = n("pMzR"),
                p = n("g+yy"),
                m = n("6A67"),
                h = n("1vzR"),
                f = n("aMN+"),
                g = n("I383");
            const y = {
                float64: !1,
                mapSorter: function(e, t) {
                    const n = Array.isArray(e[0]) ? e[0][0] : e[0],
                        r = Array.isArray(t[0]) ? t[0][0] : t[0];
                    if (n.type !== r.type) return n.type.compare(r.type);
                    const i = n.type.major,
                        o = E[i].compareTokens(n, r);
                    return o
                },
                quickEncodeToken: a.quickEncodeToken
            };

            function _() {
                const e = [];
                return e[i.Type.uint.major] = d.encodeUint, e[i.Type.negint.major] = u.encodeNegint, e[i.Type.bytes.major] = l.encodeBytes, e[i.Type.string.major] = p.encodeString, e[i.Type.array.major] = m.encodeArray, e[i.Type.map.major] = h.encodeMap, e[i.Type.tag.major] = f.encodeTag, e[i.Type.float.major] = g.encodeFloat, e
            }
            const E = _(),
                b = new o.Bl;
            class I {
                constructor(e, t) {
                    this.obj = e, this.parent = t
                }
                includes(e) {
                    let t = this;
                    do {
                        if (t.obj === e) return !0
                    } while (t = t.parent);
                    return !1
                }
                static createCheck(e, t) {
                    if (e && e.includes(t)) throw new Error(`${s.encodeErrPrefix} object contains circular references`);
                    return new I(t, e)
                }
            }
            const v = {
                    null: new i.Token(i.Type.null, null),
                    undefined: new i.Token(i.Type.undefined, void 0),
                    true: new i.Token(i.Type.true, !0),
                    false: new i.Token(i.Type.false, !1),
                    emptyArray: new i.Token(i.Type.array, 0),
                    emptyMap: new i.Token(i.Type.map, 0)
                },
                T = {
                    number: (e, t, n, r) => Number.isInteger(e) && Number.isSafeInteger(e) ? e >= 0 ? new i.Token(i.Type.uint, e) : new i.Token(i.Type.negint, e) : new i.Token(i.Type.float, e),
                    bigint: (e, t, n, r) => e >= BigInt(0) ? new i.Token(i.Type.uint, e) : new i.Token(i.Type.negint, e),
                    Uint8Array: (e, t, n, r) => new i.Token(i.Type.bytes, e),
                    string: (e, t, n, r) => new i.Token(i.Type.string, e),
                    boolean: (e, t, n, r) => e ? v.true : v.false,
                    null: (e, t, n, r) => v.null,
                    undefined: (e, t, n, r) => v.undefined,
                    ArrayBuffer: (e, t, n, r) => new i.Token(i.Type.bytes, new Uint8Array(e)),
                    DataView: (e, t, n, r) => new i.Token(i.Type.bytes, new Uint8Array(e.buffer, e.byteOffset, e.byteLength)),
                    Array(e, t, n, r) {
                        if (!e.length) return !0 === n.addBreakTokens ? [v.emptyArray, new i.Token(i.Type.break)] : v.emptyArray;
                        r = I.createCheck(r, e);
                        const o = [];
                        let s = 0;
                        for (const i of e) o[s++] = O(i, n, r);
                        return n.addBreakTokens ? [new i.Token(i.Type.array, e.length), o, new i.Token(i.Type.break)] : [new i.Token(i.Type.array, e.length), o]
                    },
                    Object(e, t, n, r) {
                        const o = "Object" !== t,
                            s = o ? e.keys() : Object.keys(e),
                            a = o ? e.size : s.length;
                        if (!a) return !0 === n.addBreakTokens ? [v.emptyMap, new i.Token(i.Type.break)] : v.emptyMap;
                        r = I.createCheck(r, e);
                        const c = [];
                        let d = 0;
                        for (const i of s) c[d++] = [O(i, n, r), O(o ? e.get(i) : e[i], n, r)];
                        return function(e, t) {
                            t.mapSorter && e.sort(t.mapSorter)
                        }(c, n), n.addBreakTokens ? [new i.Token(i.Type.map, a), c, new i.Token(i.Type.break)] : [new i.Token(i.Type.map, a), c]
                    }
                };
            T.Map = T.Object, T.Buffer = T.Uint8Array;
            for (const S of "Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64".split(" ")) T[`${S}Array`] = T.DataView;

            function O(e, t = {}, n) {
                const i = r.is(e),
                    o = t && t.typeEncoders && t.typeEncoders[i] || T[i];
                if ("function" == typeof o) {
                    const r = o(e, i, t, n);
                    if (null != r) return r
                }
                const a = T[i];
                if (!a) throw new Error(`${s.encodeErrPrefix} unsupported type: ${i}`);
                return a(e, i, t, n)
            }

            function w(e, t, n, r) {
                if (Array.isArray(t))
                    for (const i of t) w(e, i, n, r);
                else n[t.type.major](e, t, r)
            }

            function P(e, t, n) {
                const r = O(e, n);
                if (!Array.isArray(r) && n.quickEncodeToken) {
                    const e = n.quickEncodeToken(r);
                    if (e) return e;
                    const i = t[r.type.major];
                    if (i.encodedSize) {
                        const e = i.encodedSize(r, n),
                            t = new o.Bl(e);
                        if (i(t, r, n), 1 !== t.chunks.length) throw new Error(`Unexpected error: pre-calculated length for ${r} was wrong`);
                        return c.asU8A(t.chunks[0])
                    }
                }
                return b.reset(), w(b, r, t, n), b.toBytes(!0)
            }
            t.Ref = I, t.encode = function(e, t) {
                return t = Object.assign({}, y, t), P(e, E, t)
            }, t.encodeCustom = P, t.makeCborEncoders = _, t.objectToTokens = O
        },
        H8j4: function(e, t, n) {
            var r = n("QkVE");
            e.exports = function(e, t) {
                var n = r(this, e),
                    i = n.size;
                return n.set(e, t), this.size += n.size == i ? 0 : 1, this
            }
        },
        HPcM: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return i
            })), n.d(t, "a", (function() {
                return o
            }));
            var r = n("jDHv");
            const i = Object(r.define)("zlog-sentry-bucket"),
                o = Object(r.define)("zlog-regular-bucket")
        },
        Hvzi: function(e, t) {
            e.exports = function(e) {
                var t = this.has(e) && delete this.__data__[e];
                return this.size -= t ? 1 : 0, t
            }
        },
        I01J: function(e, t, n) {
            var r = n("44Ds");
            e.exports = function(e) {
                var t = r(e, (function(e) {
                        return 500 === n.size && n.clear(), e
                    })),
                    n = t.cache;
                return t
            }
        },
        I383: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("rCOr"),
                o = n("uS0h");

            function s(e, t, n) {
                if (n) {
                    if (!1 === n.allowNaN && Number.isNaN(e)) throw new Error(`${i.decodeErrPrefix} NaN values are not supported`);
                    if (!1 === n.allowInfinity && (e === 1 / 0 || e === -1 / 0)) throw new Error(`${i.decodeErrPrefix} Infinity values are not supported`)
                }
                return new r.Token(r.Type.float, e, t)
            }

            function a(e, t, n) {
                const i = t.value;
                if (!1 === i) e.push([20 | r.Type.float.majorEncoded]);
                else if (!0 === i) e.push([21 | r.Type.float.majorEncoded]);
                else if (null === i) e.push([22 | r.Type.float.majorEncoded]);
                else if (void 0 === i) e.push([23 | r.Type.float.majorEncoded]);
                else {
                    let t, r = !1;
                    n && !0 === n.float64 || (l(i), t = p(u, 1), i === t || Number.isNaN(i) ? (u[0] = 249, e.push(u.slice(0, 3)), r = !0) : (m(i), t = h(u, 1), i === t && (u[0] = 250, e.push(u.slice(0, 5)), r = !0))), r || (o = i, d.setFloat64(0, o, !1), t = f(u, 1), u[0] = 251, e.push(u.slice(0, 9)))
                }
                var o
            }
            a.encodedSize = function(e, t) {
                const n = e.value;
                if (!1 === n || !0 === n || null == n) return 1;
                if (!t || !0 !== t.float64) {
                    l(n);
                    let e = p(u, 1);
                    if (n === e || Number.isNaN(n)) return 3;
                    if (m(n), e = h(u, 1), n === e) return 5
                }
                return 9
            };
            const c = new ArrayBuffer(9),
                d = new DataView(c, 1),
                u = new Uint8Array(c, 0);

            function l(e) {
                if (e === 1 / 0) d.setUint16(0, 31744, !1);
                else if (e === -1 / 0) d.setUint16(0, 64512, !1);
                else if (Number.isNaN(e)) d.setUint16(0, 32256, !1);
                else {
                    d.setFloat32(0, e);
                    const t = d.getUint32(0),
                        n = (2139095040 & t) >> 23,
                        r = 8388607 & t;
                    if (255 === n) d.setUint16(0, 31744, !1);
                    else if (0 === n) d.setUint16(0, (2147483648 & e) >> 16 | r >> 13, !1);
                    else {
                        const e = n - 127;
                        e < -24 ? d.setUint16(0, 0) : e < -14 ? d.setUint16(0, (2147483648 & t) >> 16 | 1 << 24 + e, !1) : d.setUint16(0, (2147483648 & t) >> 16 | e + 15 << 10 | r >> 13, !1)
                    }
                }
            }

            function p(e, t) {
                if (e.length - t < 2) throw new Error(`${i.decodeErrPrefix} not enough data for float16`);
                const n = (e[t] << 8) + e[t + 1];
                if (31744 === n) return 1 / 0;
                if (64512 === n) return -1 / 0;
                if (32256 === n) return NaN;
                const r = n >> 10 & 31,
                    o = 1023 & n;
                let s;
                return s = 0 === r ? o * 2 ** -24 : 31 !== r ? (o + 1024) * 2 ** (r - 25) : 0 === o ? 1 / 0 : NaN, 32768 & n ? -s : s
            }

            function m(e) {
                d.setFloat32(0, e, !1)
            }

            function h(e, t) {
                if (e.length - t < 4) throw new Error(`${i.decodeErrPrefix} not enough data for float32`);
                const n = (e.byteOffset || 0) + t;
                return new DataView(e.buffer, n, 4).getFloat32(0, !1)
            }

            function f(e, t) {
                if (e.length - t < 8) throw new Error(`${i.decodeErrPrefix} not enough data for float64`);
                const n = (e.byteOffset || 0) + t;
                return new DataView(e.buffer, n, 8).getFloat64(0, !1)
            }
            a.compareTokens = o.encodeUint.compareTokens, t.decodeBreak = function(e, t, n, o) {
                if (!1 === o.allowIndefinite) throw new Error(`${i.decodeErrPrefix} indefinite length items not allowed`);
                return new r.Token(r.Type.break, void 0, 1)
            }, t.decodeFloat16 = function(e, t, n, r) {
                return s(p(e, t + 1), 3, r)
            }, t.decodeFloat32 = function(e, t, n, r) {
                return s(h(e, t + 1), 5, r)
            }, t.decodeFloat64 = function(e, t, n, r) {
                return s(f(e, t + 1), 9, r)
            }, t.decodeUndefined = function(e, t, n, o) {
                if (!1 === o.allowUndefined) throw new Error(`${i.decodeErrPrefix} undefined values are not supported`);
                return !0 === o.coerceUndefinedToNull ? new r.Token(r.Type.null, null, 1) : new r.Token(r.Type.undefined, void 0, 1)
            }, t.encodeFloat = a
        },
        Ib8C: function(e, t, n) {
            var r;
            e.exports = (r = r || function(e, t) {
                var n = Object.create || function() {
                        function e() {}
                        return function(t) {
                            var n;
                            return e.prototype = t, n = new e, e.prototype = null, n
                        }
                    }(),
                    r = {},
                    i = r.lib = {},
                    o = i.Base = {
                        extend: function(e) {
                            var t = n(this);
                            return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function() {
                                t.$super.init.apply(this, arguments)
                            }), t.init.prototype = t, t.$super = this, t
                        },
                        create: function() {
                            var e = this.extend();
                            return e.init.apply(e, arguments), e
                        },
                        init: function() {},
                        mixIn: function(e) {
                            for (var t in e) e.hasOwnProperty(t) && (this[t] = e[t]);
                            e.hasOwnProperty("toString") && (this.toString = e.toString)
                        },
                        clone: function() {
                            return this.init.prototype.extend(this)
                        }
                    },
                    s = i.WordArray = o.extend({
                        init: function(e, n) {
                            e = this.words = e || [], this.sigBytes = n != t ? n : 4 * e.length
                        },
                        toString: function(e) {
                            return (e || c).stringify(this)
                        },
                        concat: function(e) {
                            var t = this.words,
                                n = e.words,
                                r = this.sigBytes,
                                i = e.sigBytes;
                            if (this.clamp(), r % 4)
                                for (var o = 0; o < i; o++) {
                                    var s = n[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                                    t[r + o >>> 2] |= s << 24 - (r + o) % 4 * 8
                                } else
                                    for (o = 0; o < i; o += 4) t[r + o >>> 2] = n[o >>> 2];
                            return this.sigBytes += i, this
                        },
                        clamp: function() {
                            var t = this.words,
                                n = this.sigBytes;
                            t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, t.length = e.ceil(n / 4)
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e.words = this.words.slice(0), e
                        },
                        random: function(t) {
                            for (var n, r = [], i = function(t) {
                                    var n = 987654321,
                                        r = 4294967295;
                                    return function() {
                                        var i = ((n = 36969 * (65535 & n) + (n >> 16) & r) << 16) + (t = 18e3 * (65535 & t) + (t >> 16) & r) & r;
                                        return i /= 4294967296, (i += .5) * (e.random() > .5 ? 1 : -1)
                                    }
                                }, o = 0; o < t; o += 4) {
                                var a = i(4294967296 * (n || e.random()));
                                n = 987654071 * a(), r.push(4294967296 * a() | 0)
                            }
                            return new s.init(r, t)
                        }
                    }),
                    a = r.enc = {},
                    c = a.Hex = {
                        stringify: function(e) {
                            for (var t = e.words, n = e.sigBytes, r = [], i = 0; i < n; i++) {
                                var o = t[i >>> 2] >>> 24 - i % 4 * 8 & 255;
                                r.push((o >>> 4).toString(16)), r.push((15 & o).toString(16))
                            }
                            return r.join("")
                        },
                        parse: function(e) {
                            for (var t = e.length, n = [], r = 0; r < t; r += 2) n[r >>> 3] |= parseInt(e.substr(r, 2), 16) << 24 - r % 8 * 4;
                            return new s.init(n, t / 2)
                        }
                    },
                    d = a.Latin1 = {
                        stringify: function(e) {
                            for (var t = e.words, n = e.sigBytes, r = [], i = 0; i < n; i++) {
                                var o = t[i >>> 2] >>> 24 - i % 4 * 8 & 255;
                                r.push(String.fromCharCode(o))
                            }
                            return r.join("")
                        },
                        parse: function(e) {
                            for (var t = e.length, n = [], r = 0; r < t; r++) n[r >>> 2] |= (255 & e.charCodeAt(r)) << 24 - r % 4 * 8;
                            return new s.init(n, t)
                        }
                    },
                    u = a.Utf8 = {
                        stringify: function(e) {
                            try {
                                return decodeURIComponent(escape(d.stringify(e)))
                            } catch (t) {
                                throw new Error("Malformed UTF-8 data")
                            }
                        },
                        parse: function(e) {
                            return d.parse(unescape(encodeURIComponent(e)))
                        }
                    },
                    l = i.BufferedBlockAlgorithm = o.extend({
                        reset: function() {
                            this._data = new s.init, this._nDataBytes = 0
                        },
                        _append: function(e) {
                            "string" == typeof e && (e = u.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes
                        },
                        _process: function(t) {
                            var n = this._data,
                                r = n.words,
                                i = n.sigBytes,
                                o = this.blockSize,
                                a = i / (4 * o),
                                c = (a = t ? e.ceil(a) : e.max((0 | a) - this._minBufferSize, 0)) * o,
                                d = e.min(4 * c, i);
                            if (c) {
                                for (var u = 0; u < c; u += o) this._doProcessBlock(r, u);
                                var l = r.splice(0, c);
                                n.sigBytes -= d
                            }
                            return new s.init(l, d)
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._data = this._data.clone(), e
                        },
                        _minBufferSize: 0
                    }),
                    p = (i.Hasher = l.extend({
                        cfg: o.extend(),
                        init: function(e) {
                            this.cfg = this.cfg.extend(e), this.reset()
                        },
                        reset: function() {
                            l.reset.call(this), this._doReset()
                        },
                        update: function(e) {
                            return this._append(e), this._process(), this
                        },
                        finalize: function(e) {
                            return e && this._append(e), this._doFinalize()
                        },
                        blockSize: 16,
                        _createHelper: function(e) {
                            return function(t, n) {
                                return new e.init(n).finalize(t)
                            }
                        },
                        _createHmacHelper: function(e) {
                            return function(t, n) {
                                return new p.HMAC.init(e, n).finalize(t)
                            }
                        }
                    }), r.algo = {});
                return r
            }(Math), r)
        },
        IpiK: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "ConvMsgStatus",
                    name: "ConvMsgStatus",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        data: {
                            name: "data",
                            type: s.g.json
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "MsgInfo",
                    name: "MsgInfo",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.integer
                        },
                        seenUids: {
                            name: "seenUids",
                            type: s.g.json
                        },
                        deliveredUids: {
                            name: "deliveredUids",
                            type: s.g.json
                        },
                        extraJson: {
                            name: "extraJson",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p));
            var g = n("4W2c");
            const y = {
                    tableName: "MsgUrgency",
                    name: "MsgUrgency",
                    fields: {
                        actionId: {
                            name: "actionId",
                            type: s.g.string,
                            nullable: !0
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.string
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string
                        },
                        mentions: {
                            name: "mentions",
                            type: s.g.json,
                            nullable: !0
                        },
                        message: {
                            name: "message",
                            type: s.g.string
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        msgType: {
                            name: "msgType",
                            type: s.g.integer
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string
                        },
                        src: {
                            name: "src",
                            type: s.g.integer,
                            nullable: !0
                        },
                        quote: {
                            name: "quote",
                            type: s.g.json,
                            nullable: !0
                        },
                        properties: {
                            name: "properties",
                            type: s.g.json,
                            nullable: !0
                        },
                        urgency: {
                            name: "urgency",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        sendDttm: {
                            name: "sendDttm",
                            fields: [{
                                type: "raw",
                                field: "sendDttm"
                            }],
                            unique: !1
                        },
                        conv_msgId: {
                            name: "conv_msgId",
                            fields: [{
                                type: "raw",
                                field: "toUid"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                _ = new i.d(y),
                E = new i.d(Object(r.a)(Object(r.a)({}, y), {}, {
                    transforms: [new g.a(["message"])]
                })),
                b = new i.d(Object(r.a)({}, y)),
                I = {
                    tableName: "Quotes",
                    name: "Quotes",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.integer
                        },
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.integer
                        },
                        parentId: {
                            name: "parentId",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        convId_sendDttm: {
                            name: "convId_sendDttm",
                            fields: [{
                                type: "raw",
                                field: "convId"
                            }, {
                                type: "raw",
                                field: "sendDttm"
                            }],
                            unique: !1
                        }
                    }
                },
                v = new i.d(I),
                T = new i.d(Object(r.a)({}, I)),
                O = new i.d(Object(r.a)({}, I)),
                w = {
                    tableName: "ThreadMsg",
                    name: "ThreadMsg",
                    fields: {
                        ownerId: {
                            name: "ownerId",
                            type: s.g.string,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.integer
                        },
                        globalMsgId: {
                            name: "globalMsgId",
                            type: s.g.integer
                        },
                        cliMsgType: {
                            name: "cliMsgType",
                            type: s.g.integer
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer
                        },
                        msg: {
                            name: "msg",
                            type: s.g.string
                        },
                        attach: {
                            name: "attach",
                            type: s.g.string
                        },
                        fromD: {
                            name: "fromD",
                            type: s.g.string
                        },
                        convId: {
                            name: "convId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "globalMsgId"
                            }],
                            unique: !0
                        }
                    }
                },
                P = new i.d(w),
                S = new i.d(Object(r.a)(Object(r.a)({}, w), {}, {
                    transforms: [new g.a(["msg", "attach"])]
                })),
                A = new i.d(Object(r.a)({}, w)),
                R = {
                    tableName: "ThreadHis",
                    name: "ThreadHis",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.integer
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string
                        },
                        isGroup: {
                            name: "isGroup",
                            type: s.g.boolean
                        },
                        childs: {
                            name: "childs",
                            type: s.g.json
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                M = new i.d(R),
                N = new i.d(Object(r.a)({}, R)),
                C = new i.d(Object(r.a)({}, R)),
                D = {
                    tableName: "unreadInfo",
                    name: "UnreadInfo",
                    fields: {
                        mId: {
                            name: "mId",
                            type: s.g.integer
                        },
                        actId: {
                            name: "actId",
                            type: s.g.integer
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        timestamp: {
                            name: "timestamp",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                L = new i.d(D),
                U = new i.d(Object(r.a)({}, D)),
                x = new i.d(Object(r.a)({}, D)),
                k = {
                    tableName: "TTLItem",
                    name: "TTLItem",
                    fields: {
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        beginTime: {
                            name: "beginTime",
                            type: s.g.integer
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.string,
                            nullable: !0
                        },
                        serverTime: {
                            name: "serverTime",
                            type: s.g.string
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer
                        },
                        ttlType: {
                            name: "ttlType",
                            type: s.g.string
                        },
                        expireOn: {
                            name: "expireOn",
                            type: s.g.integer
                        },
                        mediaType: {
                            name: "mediaType",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "ttlType"
                            }],
                            unique: !0
                        },
                        expireOn_toUid_pk: {
                            name: "expireOn_toUid_pk",
                            fields: [{
                                type: "raw",
                                field: "expireOn"
                            }, {
                                type: "raw",
                                field: "toUid"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "ttlType"
                            }],
                            unique: !0
                        },
                        toUid_serverTime_pk: {
                            name: "toUid_serverTime_pk",
                            fields: [{
                                type: "raw",
                                field: "toUid"
                            }, {
                                type: "raw",
                                field: "serverTime"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "ttlType"
                            }],
                            unique: !0
                        }
                    }
                },
                B = {
                    ConvMsgStatus: d,
                    MsgInfo: m,
                    MsgUrgency: _,
                    Quotes: v,
                    ThreadMsg: P,
                    ThreadHis: M,
                    UnreadInfo: L,
                    TTLItem: new i.d(k)
                },
                j = {
                    ConvMsgStatus: u,
                    MsgInfo: h,
                    MsgUrgency: E,
                    Quotes: T,
                    ThreadMsg: S,
                    ThreadHis: N,
                    UnreadInfo: U,
                    TTLItem: new i.d(Object(r.a)({}, k))
                },
                F = {
                    ConvMsgStatus: l,
                    MsgInfo: f,
                    MsgUrgency: b,
                    Quotes: O,
                    ThreadMsg: A,
                    ThreadHis: C,
                    UnreadInfo: x,
                    TTLItem: new i.d(Object(r.a)({}, k))
                },
                G = {
                    name: "MsgInfo",
                    session: !0
                },
                q = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("MsgInfo"), o.a.byTable()],
                    partitionsMap: Object(a.a)(F)
                },
                H = {
                    partitionNamingStrategy: [o.a.const("msginfo"), o.a.byUser()],
                    partitionsMap: Object(a.b)(j)
                },
                z = Object(r.a)(Object(r.a)(Object(r.a)({}, G), q), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                K = Object(r.a)(Object(r.a)(Object(r.a)({}, G), H), {}, {
                    version: 6,
                    milestoneVersion: 6,
                    type: s.a.IDB
                });
            let W = null,
                V = null;
            t.a = {
                basicSchema: B,
                get useSqlite() {
                    return null === W && (W = new i.a(z)), W
                },
                get useIdb() {
                    return null === V && (V = new i.a(K)), V
                }
            }
        },
        Iwwi: function(e, t) {},
        JHgL: function(e, t, n) {
            var r = n("QkVE");
            e.exports = function(e) {
                return r(this, e).get(e)
            }
        },
        JMlY: function(e, t, n) {
            "use strict";
            n("LzQZ")
        },
        JOqG: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            const r = ["string", "number", "bigint", "symbol"],
                i = ["Function", "Generator", "AsyncGenerator", "GeneratorFunction", "AsyncGeneratorFunction", "AsyncFunction", "Observable", "Array", "Buffer", "Object", "RegExp", "Date", "Error", "Map", "Set", "WeakMap", "WeakSet", "ArrayBuffer", "SharedArrayBuffer", "DataView", "Promise", "URL", "HTMLElement", "Int8Array", "Uint8Array", "Uint8ClampedArray", "Int16Array", "Uint16Array", "Int32Array", "Uint32Array", "Float32Array", "Float64Array", "BigInt64Array", "BigUint64Array"];
            t.is = function(e) {
                if (null === e) return "null";
                if (void 0 === e) return "undefined";
                if (!0 === e || !1 === e) return "boolean";
                const t = typeof e;
                if (r.includes(t)) return t;
                if ("function" === t) return "Function";
                if (Array.isArray(e)) return "Array";
                if (function(e) {
                        return e && e.constructor && e.constructor.isBuffer && e.constructor.isBuffer.call(null, e)
                    }(e)) return "Buffer";
                const n = function(e) {
                    const t = Object.prototype.toString.call(e).slice(8, -1);
                    if (i.includes(t)) return t;
                    return
                }(e);
                return n || "Object"
            }
        },
        JSQU: function(e, t, n) {
            var r = n("YESw");
            e.exports = function(e, t) {
                var n = this.__data__;
                return this.size += this.has(e) ? 0 : 1, n[e] = r && void 0 === t ? "__lodash_hash_undefined__" : t, this
            }
        },
        Jcee: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return d
            })), n.d(t, "a", (function() {
                return u
            }));
            var r = n("jDHv"),
                i = n("AH6j"),
                o = n("45ei");
            class s {
                constructor() {
                    this.disposables = void 0, this.disposables = []
                }
                add(e) {
                    "function" == typeof e ? this.disposables.push(e) : this.disposables.push(e.dispose)
                }
                remove(e) {
                    let t = this.disposables.findIndex((t => t === e));
                    this.disposables.slice(t, 1)
                }
                dispose() {
                    for (const e of this.disposables) e()
                }
            }
            var a = n("6Sr9"),
                c = n("8/YW");
            class d extends i.b {
                constructor(e, t, n) {
                    super(), this.name = e, this.config = t, this.disposables = void 0, this.currentSession = null, this.logger = void 0, this.onApplicationStarted = e => {
                        this.dispatchEvent(e)
                    }, this.onInitService = e => {
                        this.dispatchEvent(e)
                    }, this.onServiceReady = e => {
                        this.dispatchEvent(e)
                    }, this.onApplicationExit = e => {
                        this.dispatchEvent(e)
                    }, this.onBeforeUnload = () => {
                        this.dispatchEvent(new Event(o.a.BeforeUnload))
                    }, this.onApplicationFirstIdle = e => {
                        this.dispatchEvent(e)
                    }, this.onApplicationIdle = e => {
                        this.logger.zsymb(12, 8196, 30006, "idle"), this.dispatchEvent(e)
                    }, this.onApplicationActive = e => {
                        this.logger.zsymb(12, 8196, 30007, "active"), this.dispatchEvent(e)
                    }, this.logger = n.createZLogger("common", ["application"]), this.disposables = new s
                }
                async start() {
                    this.logger.zsymb(0, 8196, 3e4, "starting"), this.listenInternalEvents(), Object(a.e)(this), this.onApplicationStarted(new Event(o.a.Start))
                }
                async init() {
                    this.logger.zsymb(3, 8196, 30001, "initializing services..."), this.onInitService(new c.c(this)), window.addEventListener("beforeunload", (() => {
                        this.onBeforeUnload()
                    }))
                }
                async ready() {
                    this.logger.zsymb(3, 8196, 30002, "application ready"), this.onServiceReady(new Event(o.a.ServicesReady))
                }
                async exit() {
                    this.logger.zsymb(3, 8196, 30003, "exiting"), this.onApplicationStarted(new Event(o.a.Exit)), setTimeout((() => {
                        this.disposables.dispose()
                    }))
                }
                authenticating(e) {
                    this.logger.zsymb(0, 8196, 30004, (() => ["authenticating", {
                        id: e.userId
                    }])), this.currentSession = e, this.dispatchEvent(new o.c(this.currentSession))
                }
                authenticate(e) {
                    this.logger.zsymb(0, 8196, 30005, (() => ["authenticate", {
                        id: e.userId
                    }])), this.currentSession = e, this.dispatchEvent(new o.c(this.currentSession)), this.dispatchEvent(new o.b(this.currentSession))
                }
                logOut(e) {
                    this.dispatchEvent(new o.e(e))
                }
                getSession() {
                    return this.currentSession
                }
                setStateToIdle() {
                    this.onApplicationIdle(new Event(o.a.Idle))
                }
                setStateToActive() {
                    this.onApplicationActive(new Event(o.a.Active))
                }
                listenInternalEvents() {
                    this.addEventListenerOnce(o.a.Idle, (() => this.onApplicationFirstIdle(new Event(o.a.FirstIdle))))
                }
            }
            const u = Object(r.define)("application")
        },
        "K+9E": function(e, t, n) {
            "use strict";
            var r;
            ! function(e) {
                e.METRIC_MANAGER = "METRIC_MANAGER", e.METRIC_SCHEMA_MANAGER = "METRIC_SCHEMA_MANAGER", e.METRIC_FACTORY = "METRIC_FACTORY", e.METRIC_TRANSPORTER = "METRIC_TRANSPORTER", e.METRIC_RESOLVER = "METRIC_RESOLVER", e.USAGE_MONITOR = "USAGE_MONITOR", e.LOCAL_STAT = "LOCAL_STAT", e.DATA_MANAGER = "DATA_MANAGER", e.UI_MANAGER = "UI_MANAGER"
            }(r || (r = {})), t.a = r
        },
        K3mO: function(e, t, n) {
            var r, i, o, s, a, c, d, u;
            e.exports = (u = n("Ib8C"), n("3y9D"), n("WYAk"), i = (r = u).lib, o = i.Base, s = i.WordArray, a = r.algo, c = a.MD5, d = a.EvpKDF = o.extend({
                cfg: o.extend({
                    keySize: 4,
                    hasher: c,
                    iterations: 1
                }),
                init: function(e) {
                    this.cfg = this.cfg.extend(e)
                },
                compute: function(e, t) {
                    for (var n = this.cfg, r = n.hasher.create(), i = s.create(), o = i.words, a = n.keySize, c = n.iterations; o.length < a;) {
                        d && r.update(d);
                        var d = r.update(e).finalize(t);
                        r.reset();
                        for (var u = 1; u < c; u++) d = r.finalize(d), r.reset();
                        i.concat(d)
                    }
                    return i.sigBytes = 4 * a, i
                }
            }), r.EvpKDF = function(e, t, n) {
                return d.create(n).compute(e, t)
            }, u.EvpKDF)
        },
        K6Wi: function(e, t, n) {
            "use strict";
            n.r(t);
            var r = {};
            n.r(r), n.d(r, "scrollConvList", (function() {
                return q
            })), n.d(r, "switchJumpConv", (function() {
                return K
            })), n.d(r, "scrollChatBoxView", (function() {
                return V
            })), n.d(r, "switchMainTab", (function() {
                return $
            })), n.d(r, "scrollGlobalSearchList", (function() {
                return X
            }));
            var i = n("VTBJ"),
                o = n("rFEu"),
                s = n("cnBV"),
                a = n("uzza"),
                c = n("CHYU");
            const d = Object(o.f)(o.a.time("1m"), o.a.time("5m"), o.a.time("10m"), o.a.time("30m"), o.a.time("1h"), o.a.time("3h"), o.a.time("5h"), o.a.time("8h"), o.a.time("24h")),
                u = o.b.Memory({
                    name: a.a.usage_memory,
                    categories: [s.a.usage],
                    timeline: d,
                    statement: Object(o.e)({
                        name: "memory usage",
                        points: [o.e.Point({
                            name: "usage after 1m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("1m"))
                            },
                            points: [o.e.Point({
                                name: "<= 50 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("50MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99108
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99140
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99172
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 MB < heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99109
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99141
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99173
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99110
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99142
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99174
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99111
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99143
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99175
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 5m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("5m"))
                            },
                            points: [o.e.Point({
                                name: "<= 50 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("50MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99112
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99144
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99176
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 MB < heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99113
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99145
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99177
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99114
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99146
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99178
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99115
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99147
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99179
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 10m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("10m"))
                            },
                            points: [o.e.Point({
                                name: "<= 50 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("50MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99116
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99148
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99180
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 MB < heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99117
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99149
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99181
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99118
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99150
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99182
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99119
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99151
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99183
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 30m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("30m"))
                            },
                            points: [o.e.Point({
                                name: "<= 50 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("50MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99120
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99152
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99184
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 MB < heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99121
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99153
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99185
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99122
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99154
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99186
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99123
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99155
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99187
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 1h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("1h"))
                            },
                            points: [o.e.Point({
                                name: "<= 50 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("50MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99124
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99156
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99188
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 MB < heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99125
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99157
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99189
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99126
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99158
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99190
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99127
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99159
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99191
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 3h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("3h"))
                            },
                            points: [o.e.Point({
                                name: "heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99128
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99160
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99192
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99129
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99161
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99193
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99130
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99162
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99194
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 5h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("5h"))
                            },
                            points: [o.e.Point({
                                name: "heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99131
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99163
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99195
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99132
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99164
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99196
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99133
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99165
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99197
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 8h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("8h"))
                            },
                            points: [o.e.Point({
                                name: "heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99134
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99166
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99198
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99135
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99167
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99199
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99136
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99168
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99200
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 24h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t >= o.a.time("24h"))
                            },
                            points: [o.e.Point({
                                name: "heapUsed <= 100 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("100MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99137
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99169
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99201
                                    }
                                })]
                            }), o.e.Point({
                                name: "100 MB < heapUsed <= 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t <= o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99138
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99170
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99202
                                    }
                                })]
                            }), o.e.Point({
                                name: "heapUsed > 200 MB",
                                condition: e => {
                                    const t = o.a.extractHeapUsed(e);
                                    return !!(null != t && t > o.a.bytes("200MB"))
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99139
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99171
                                    }
                                }), o.e.Point({
                                    name: "dbtask",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99203
                                    }
                                })]
                            })]
                        })]
                    })
                }),
                l = o.b.CPU({
                    name: a.a.usage_cpu,
                    categories: [s.a.usage],
                    timeline: d,
                    statement: Object(o.e)({
                        name: "percent CPU usage",
                        points: [o.e.Point({
                            name: "usage after 1m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("1m"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99e3
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99036
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99072
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99001
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99037
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99073
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99002
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99038
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99074
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99003
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99039
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99075
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 5m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("5m"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99004
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99040
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99076
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99005
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99041
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99077
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99006
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99042
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99078
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99007
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99043
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99079
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 10m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("10m"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99008
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99044
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99080
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99009
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99045
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99081
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99010
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99046
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99082
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99011
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99047
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99083
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 30m",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("30m"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99012
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99048
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99084
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99013
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99049
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99085
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99014
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99050
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99086
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99015
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99051
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99087
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 1h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("1h"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99016
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99052
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99088
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99017
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99053
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99089
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99018
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99054
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99090
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99019
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99055
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99091
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 3h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("3h"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99020
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99056
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99092
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99021
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99057
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99093
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99022
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99058
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99094
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99023
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99059
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99095
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 5h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("5h"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99024
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99060
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99096
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99025
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99061
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99097
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99026
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99062
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99098
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99027
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99063
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99099
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 8h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t <= o.a.time("8h"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99028
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99064
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99100
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99029
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99065
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99204
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99030
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99066
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99205
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99031
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99067
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99206
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "usage after 24h",
                            condition: e => {
                                const t = o.a.extractPassedTime(e);
                                return !!(t && t >= o.a.time("24h"))
                            },
                            points: [o.e.Point({
                                name: "<= 10%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99032
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99068
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99104
                                    }
                                })]
                            }), o.e.Point({
                                name: "10% < percentCPUUsage <= 30%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 30)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99033
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99069
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99105
                                    }
                                })]
                            }), o.e.Point({
                                name: "30% < percentCPUUsage <= 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t <= 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99034
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99070
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99106
                                    }
                                })]
                            }), o.e.Point({
                                name: "percentCPUUsage > 70%",
                                condition: e => {
                                    const t = o.a.extractCPUUsage(e);
                                    return !!(null != t && t > 70)
                                },
                                points: [o.e.Point({
                                    name: "main",
                                    condition: e => e.processName === c.a.Main,
                                    qos: {
                                        cmdId: 99035
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    qos: {
                                        cmdId: 99071
                                    }
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.SharedWorker,
                                    qos: {
                                        cmdId: 99107
                                    }
                                })]
                            })]
                        })]
                    })
                });
            var p = Object(o.c)({
                metrics: [u, l]
            });
            const m = e => "get" === e || "get-multi" === e || "get-all" === e || "get-all-key" === e || "count" === e ? "read" : "insert" === e || "insert-multi" === e || "update" === e || "update-multi" === e || "get-and-update" === e ? "write" : "delete" === e || "delete-multi" === e || "find-and-delete" === e || "clear" === e ? "delete" : void 0,
                h = Object(o.b)({
                    name: a.a.query_resolution_time,
                    features: [s.b.dal],
                    categories: [s.a.core],
                    showStackTrace: () => !1,
                    statement: o.e.Group(Object(o.e)({
                        name: "duration by query type",
                        points: [o.e.Point({
                            name: "queryType: READ",
                            condition: (e, t) => "read" === m(null == t ? void 0 : t.method),
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99504
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99505
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99506
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99507
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99508
                                }
                            })]
                        }), o.e.Point({
                            name: "queryType: WRITE",
                            condition: (e, t) => "write" === m(null == t ? void 0 : t.method),
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t < o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99509
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99510
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99511
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99512
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99513
                                }
                            })]
                        }), o.e.Point({
                            name: "queryType: DELETE",
                            condition: (e, t) => "delete" === m(null == t ? void 0 : t.method),
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99514
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99515
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99516
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99517
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99518
                                }
                            })]
                        })]
                    }), Object(o.e)({
                        name: "usage time: within first 10m",
                        checkingMode: "all",
                        points: [o.e.Point({
                            name: "usageTime <= 1m",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t <= o.a.time("1m")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99519
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99520
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99521
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99522
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99523
                                }
                            })]
                        }), o.e.Point({
                            name: "usageTime <= 5m",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t <= o.a.time("5m")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99524
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99525
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99526
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99527
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99528
                                }
                            })]
                        }), o.e.Point({
                            name: "usageTime <= 10m",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t <= o.a.time("10m")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99529
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99530
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99531
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99532
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99533
                                }
                            })]
                        })]
                    }), Object(o.e)({
                        name: "usage time: 10m - 5h",
                        checkingMode: "all",
                        points: [o.e.Point({
                            name: "10m < usageTime <= 1h",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t > o.a.time("10m") && t <= o.a.time("1h")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99534
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99535
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99536
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99537
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99538
                                }
                            })]
                        }), o.e.Point({
                            name: "1h < usageTime <= 5h",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t > o.a.time("1h") && t <= o.a.time("5h")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99539
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99540
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99541
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99542
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99543
                                }
                            })]
                        })]
                    }), Object(o.e)({
                        name: "usage time: long session",
                        points: [o.e.Point({
                            name: "usageTime > 5h",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t > o.a.time("5h")
                            },
                            points: [o.e.Point({
                                name: "<= 500ms",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("500ms")
                                },
                                qos: {
                                    cmdId: 99544
                                }
                            }), o.e.Point({
                                name: "500ms < duration <= 1s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("1s")
                                },
                                qos: {
                                    cmdId: 99545
                                }
                            }), o.e.Point({
                                name: "1s < duration <= 5s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("5s")
                                },
                                qos: {
                                    cmdId: 99546
                                }
                            }), o.e.Point({
                                name: "5s < duration <= 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t <= o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99547
                                }
                            }), o.e.Point({
                                name: "duration > 10s",
                                condition: e => {
                                    let {
                                        duration: t
                                    } = e;
                                    return t > o.a.time("10s")
                                },
                                qos: {
                                    cmdId: 99548
                                }
                            })]
                        })]
                    }), Object(o.e)({
                        name: "duration > 10s",
                        points: [o.e.Point({
                            name: "duration > 10s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t > o.a.time("10s")
                            },
                            qos: {
                                cmdId: 99549
                            }
                        })]
                    }))
                }),
                f = Object(o.b)({
                    name: a.a.db_ready,
                    features: [s.b.dal],
                    categories: [s.a.core],
                    statement: Object(o.e)({
                        name: "DB open time",
                        points: [o.e.Point({
                            name: "<= 1s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("1s")
                            },
                            qos: {
                                cmdId: 99500
                            }
                        }), o.e.Point({
                            name: "1s-5s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("5s")
                            },
                            qos: {
                                cmdId: 99501
                            }
                        }), o.e.Point({
                            name: "5s-10s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("10s")
                            },
                            qos: {
                                cmdId: 99502
                            }
                        }), o.e.Point({
                            name: "> 10s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t > o.a.time("10s")
                            },
                            qos: {
                                cmdId: 99503
                            }
                        })]
                    })
                });
            var g = Object(o.c)({
                metrics: [h, f]
            });
            const y = Object(o.b)({
                    name: a.a.authenticate,
                    features: [s.b.start_up],
                    categories: [s.a.task_latency],
                    statement: Object(o.e)({
                        name: "authenticate",
                        points: [o.e.Point({
                            name: "<= 1s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("1s")
                            },
                            qos: {
                                cmdId: 99605
                            }
                        }), o.e.Point({
                            name: "<= 2s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("2s")
                            },
                            qos: {
                                cmdId: 99606
                            }
                        }), o.e.Point({
                            name: "<= 5s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("5s")
                            },
                            qos: {
                                cmdId: 99607
                            }
                        }), o.e.Point({
                            name: "> 5s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t > o.a.time("5s")
                            },
                            qos: {
                                cmdId: 99608
                            }
                        })]
                    })
                }),
                _ = Object(o.b)({
                    name: a.a.start_up_time,
                    features: [s.b.start_up],
                    categories: [s.a.ux_latency],
                    fromProcess: [c.a.Main, c.a.Web],
                    startFromEpoch: !0,
                    disabled: !1,
                    statement: Object(o.e)({
                        name: "startup duration",
                        points: [o.e.Point({
                            name: "<= 5s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("5s")
                            },
                            qos: {
                                cmdId: 99600
                            }
                        }), o.e.Point({
                            name: "5s-10s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("10s")
                            },
                            qos: {
                                cmdId: 99601
                            }
                        }), o.e.Point({
                            name: "10s-30s",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("30s")
                            },
                            qos: {
                                cmdId: 99602
                            }
                        }), o.e.Point({
                            name: "30s-1m",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("1m")
                            },
                            qos: {
                                cmdId: 99603
                            }
                        }), o.e.Point({
                            name: "> 1m",
                            condition: e => {
                                let {
                                    duration: t
                                } = e;
                                return t <= o.a.time("1m")
                            },
                            qos: {
                                cmdId: 99604
                            }
                        })]
                    })
                });
            var E = Object(o.c)({
                    metrics: [y, _]
                }),
                b = n("MNz0");
            Object(o.b)({
                name: a.a.conv_load_1st_msg,
                features: [s.b.chat],
                categories: [s.a.ux_latency]
            });
            const I = Object(o.b)({
                name: a.a.open_conversation,
                features: [s.b.chat],
                categories: [s.a.ux_latency],
                mode: b.a.ACCEPT_LAST,
                statement: Object(o.e)({
                    name: "open conversation time",
                    points: [o.e.Point({
                        name: "duration <= 1s",
                        condition: e => {
                            let {
                                duration: t
                            } = e;
                            return t <= o.a.time("1s")
                        },
                        qos: {
                            cmdId: 99625
                        }
                    }), o.e.Point({
                        name: "1s < duration <= 3s",
                        condition: e => {
                            let {
                                duration: t
                            } = e;
                            return t <= o.a.time("3s")
                        },
                        qos: {
                            cmdId: 99626
                        }
                    }), o.e.Point({
                        name: "3s < duration <= 10s",
                        condition: e => {
                            let {
                                duration: t
                            } = e;
                            return t <= o.a.time("10s")
                        },
                        qos: {
                            cmdId: 99627
                        }
                    }), o.e.Point({
                        name: "duration > 10s",
                        condition: e => {
                            let {
                                duration: t
                            } = e;
                            return t > o.a.time("10s")
                        },
                        qos: {
                            cmdId: 99628
                        }
                    })]
                })
            });
            var v = Object(o.c)({
                metrics: [I]
            });
            const T = function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    const [r] = t || [];
                    return {
                        avgFps: null == r ? void 0 : r.avgFps,
                        usageTime: null == r ? void 0 : r.usageTime
                    }
                },
                O = function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    const [r] = t || [];
                    return {
                        lowestDrop: null == r ? void 0 : r.lowestDrop,
                        maxFps: null == r ? void 0 : r.maxFps
                    }
                },
                w = e => {
                    var t, n;
                    return "arm" === (null == e || null === (t = e.systemInfo) || void 0 === t ? void 0 : t.arch) || "arm64" === (null == e || null === (n = e.systemInfo) || void 0 === n ? void 0 : n.arch)
                },
                P = Object(o.b)({
                    name: a.a.fps,
                    categories: [s.a.ux_latency],
                    statement: Object(o.e)({
                        name: "fps",
                        points: [o.e.Point({
                            name: "usageTime <= 2m",
                            condition: function(e) {
                                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                const {
                                    usageTime: i
                                } = T(...n);
                                return !!(i && i <= o.a.time("2m"))
                            },
                            points: [o.e.Point({
                                name: "fps <= 12",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 12)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99609
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99629
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99617
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99637
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "12 < fps <= 23",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 23)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99610
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99630
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99618
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99638
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "[23,24] < fps <= 29",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 29)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99611
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99631
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99619
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99639
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "[29,30] < fps <= 60",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 60)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99612
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99632
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99620
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99640
                                        }
                                    })]
                                })]
                            })]
                        }), o.e.Point({
                            name: "usageTime > 2m",
                            condition: function(e) {
                                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                const {
                                    usageTime: i
                                } = T(...n);
                                return !!(i && i > o.a.time("2m"))
                            },
                            points: [o.e.Point({
                                name: "fps <= 12",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 12)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99613
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99633
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99621
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99641
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "12 < fps <= 23",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 23)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99614
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99634
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99622
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99642
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "[23,24] < fps <= 29",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 29)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99615
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99635
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99623
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99643
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "[29,30] < fps <= 60",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        avgFps: i
                                    } = T(...n);
                                    return !!(i && i <= 60)
                                },
                                points: [o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Render,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99616
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99636
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "render",
                                    condition: e => e.processName === c.a.Web,
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99624
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99644
                                        }
                                    })]
                                })]
                            })]
                        })]
                    })
                }),
                S = Object(o.b)({
                    name: a.a.fps_lowest_drop,
                    categories: [s.a.ux_latency],
                    statement: o.e.Group(Object(o.e)({
                        name: "lowest drop",
                        points: [o.e.Point({
                            name: "usageTime <= 2m",
                            condition: e => {
                                let {
                                    usageTime: t
                                } = e;
                                return t <= o.a.time("1m")
                            },
                            points: [o.e.Point({
                                name: "maxFps = 60",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        maxFps: i
                                    } = O(...n);
                                    return !!(null != i && i <= 60)
                                },
                                points: [o.e.Point({
                                    name: "fps <= 10",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i <= 10)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99645
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99653
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "10 < fps <= 25",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 10 && i <= 25)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99646
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99654
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "25 < fps <= 39",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 25 && i <= 39)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99647
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99655
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "39 < fps <= 49",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 39 && i <= 49)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99648
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99656
                                        }
                                    })]
                                })]
                            }), o.e.Point({
                                name: "maxFps = 120",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        maxFps: i
                                    } = O(...n);
                                    return !!(null != i && i > 60 && i <= 120)
                                },
                                points: [o.e.Point({
                                    name: "fps <= 20",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i <= 20)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99661
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99669
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "20 < fps <= 50",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 20 && i <= 50)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99662
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99670
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "50 < fps <= 79",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 50 && i <= 79)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99663
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99671
                                        }
                                    })]
                                }), o.e.Point({
                                    name: "79 < fps <= 99",
                                    condition: function(e) {
                                        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                        const {
                                            lowestDrop: i
                                        } = O(...n);
                                        return !!(null != i && i > 79 && i <= 99)
                                    },
                                    points: [o.e.Point({
                                        name: "window & mac intel",
                                        condition: e => !w(e),
                                        qos: {
                                            cmdId: 99664
                                        }
                                    }), o.e.Point({
                                        name: "mac m1",
                                        condition: e => w(e),
                                        qos: {
                                            cmdId: 99672
                                        }
                                    })]
                                })]
                            })]
                        })]
                    }), Object(o.e)({
                        name: "lowest drop - all time",
                        points: [o.e.Point({
                            name: "maxFps = 60",
                            condition: function(e) {
                                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                const {
                                    maxFps: i
                                } = O(...n);
                                return !!(null != i && i <= 60)
                            },
                            points: [o.e.Point({
                                name: "fps <= 10",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i <= 10)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99649
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99657
                                    }
                                })]
                            }), o.e.Point({
                                name: "10 < fps <= 25",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 10 && i <= 25)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99650
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99658
                                    }
                                })]
                            }), o.e.Point({
                                name: "25 < fps <= 39",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 25 && i <= 39)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99651
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99659
                                    }
                                })]
                            }), o.e.Point({
                                name: "39 < fps <= 49",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 39 && i <= 49)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99652
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99660
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "maxFps = 120",
                            condition: function(e) {
                                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                const {
                                    maxFps: i
                                } = O(...n);
                                return !!(null != i && i > 60 && i <= 120)
                            },
                            points: [o.e.Point({
                                name: "fps <= 20",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i <= 20)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99665
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99673
                                    }
                                })]
                            }), o.e.Point({
                                name: "20 < fps <= 50",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 20 && i <= 50)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99666
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99674
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 < fps <= 79",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 50 && i <= 79)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99667
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99675
                                    }
                                })]
                            }), o.e.Point({
                                name: "79 < fps <= 99",
                                condition: function(e) {
                                    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                                    const {
                                        lowestDrop: i
                                    } = O(...n);
                                    return !!(null != i && i > 79 && i <= 99)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !w(e),
                                    qos: {
                                        cmdId: 99668
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => w(e),
                                    qos: {
                                        cmdId: 99676
                                    }
                                })]
                            })]
                        })]
                    }))
                });
            var A = Object(o.c)({
                    metrics: [P, S]
                }),
                R = n("AoYG");
            const M = e => {
                    var t;
                    return null == e || null === (t = e.data) || void 0 === t ? void 0 : t.cpuTotal
                },
                N = e => {
                    var t;
                    return null == e || null === (t = e.data) || void 0 === t ? void 0 : t.memoryTotal
                },
                C = Object(o.e)({
                    name: "CPU used",
                    points: [o.e.Point({
                        name: "usage after 1m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("1m"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99351
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99387
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99352
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99388
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99353
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99389
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99354
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99390
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 5m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("5m"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99355
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99391
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99356
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99392
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99357
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99393
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99358
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99394
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 10m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("10m"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99359
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99395
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99360
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99396
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99361
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99397
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99362
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99398
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 30m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("30m"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99363
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99399
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99364
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99400
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99365
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99401
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99366
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99402
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 1h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("1h"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99367
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99403
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99368
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99404
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99369
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99405
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99370
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99406
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 3h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("3h"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99371
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99407
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99372
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99408
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99373
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99409
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99374
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99410
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 5h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("5h"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99375
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99411
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99376
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99412
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99377
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99413
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99378
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99414
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 8h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("8h"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99379
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99415
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99380
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99416
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99381
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99417
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99382
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99418
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 24h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("24h"))
                        },
                        points: [o.e.Point({
                            name: "<= 20%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99383
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99419
                                }
                            })]
                        }), o.e.Point({
                            name: "20% < cpuTotal <= 40%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 40)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99384
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99420
                                }
                            })]
                        }), o.e.Point({
                            name: "40% < cpuTotal <= 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t <= 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99385
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99421
                                }
                            })]
                        }), o.e.Point({
                            name: "cpuTotal > 70%",
                            condition: e => {
                                const t = M(e);
                                return !!(null != t && t > 70)
                            },
                            points: [o.e.Point({
                                name: "window",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99386
                                }
                            }), o.e.Point({
                                name: "macos",
                                condition: () => !1,
                                qos: {
                                    cmdId: 99422
                                }
                            })]
                        })]
                    })]
                }),
                D = Object(o.e)({
                    name: "Memory used",
                    points: [o.e.Point({
                        name: "usage after 1m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("1m"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99207
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99243
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99279
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99315
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99208
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99244
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99280
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99316
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99209
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99245
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99281
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99317
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99210
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99246
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99282
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99318
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 5m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("5m"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99211
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99247
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99283
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99319
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99212
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99248
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99284
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99320
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99213
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99249
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99285
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99321
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99214
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99250
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99286
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99322
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 10m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("10m"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99215
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99251
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99287
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99323
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99216
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99252
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99288
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99324
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99217
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99253
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99289
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99325
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99218
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99254
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99290
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99326
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 30m",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("30m"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99219
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99255
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99291
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99327
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99220
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99256
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99292
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99328
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99221
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99257
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99293
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99329
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99222
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99258
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99294
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99330
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 1h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("1h"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99223
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99259
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99295
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99331
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99224
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99260
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99296
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99332
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99225
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99261
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99297
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99333
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99226
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99262
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99298
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99334
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 3h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("3h"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99227
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99263
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99299
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99335
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99228
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99264
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99300
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99336
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99229
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99265
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99301
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99337
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99230
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99266
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99302
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99338
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 5h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("5h"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99231
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99267
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99303
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99339
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99232
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99268
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99304
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99340
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99233
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99269
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99305
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99341
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99234
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99270
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99306
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99342
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 8h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("8h"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99235
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99271
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99307
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99343
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99236
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99272
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99308
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99344
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99237
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99273
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99309
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99345
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99238
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99274
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99310
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99346
                                    }
                                })]
                            })]
                        })]
                    }), o.e.Point({
                        name: "usage after 24h",
                        condition: e => {
                            const t = o.a.extractPassedTime(e);
                            return !!(t && t <= o.a.time("24h"))
                        },
                        points: [o.e.Point({
                            name: "realMem <= 500MB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("500MB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99239
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99275
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99311
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99347
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "500MB < realMem <= 1GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("1GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99240
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99276
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99312
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99348
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "1GB < realMem <= 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t <= o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99241
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99277
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99313
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99349
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "realMem > 2GB",
                            condition: e => {
                                const t = N(e);
                                return !!(null != t && t > o.a.bytes("2GB"))
                            },
                            points: [o.e.Point({
                                name: "RAM <= 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t <= o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99242
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99278
                                    }
                                })]
                            }), o.e.Point({
                                name: "RAM > 8GB",
                                condition: e => {
                                    const t = o.a.extractRAM(e);
                                    return !!(null != t && t > o.a.bytes("8GB"))
                                },
                                points: [o.e.Point({
                                    name: "window",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99314
                                    }
                                }), o.e.Point({
                                    name: "macos",
                                    condition: () => !1,
                                    qos: {
                                        cmdId: 99350
                                    }
                                })]
                            })]
                        })]
                    })]
                }),
                L = Object(o.e)({
                    name: "RAM usage summary",
                    points: [o.e.Point({
                        name: "RAM <= 8GB",
                        condition: e => {
                            const t = o.a.extractRAM(e);
                            return !!(null != t && t <= o.a.bytes("8GB"))
                        },
                        qos: {
                            cmdId: 99773
                        }
                    }), o.e.Point({
                        name: "RAM > 8GB",
                        condition: e => {
                            const t = o.a.extractRAM(e);
                            return !!(null != t && t > o.a.bytes("8GB"))
                        },
                        qos: {
                            cmdId: 99774
                        }
                    })]
                }),
                U = Object(o.e)({
                    name: "CPU usage summary",
                    points: [o.e.Point({
                        name: "",
                        condition: !0,
                        qos: {
                            cmdId: 99775
                        }
                    })]
                }),
                x = Object(o.b)({
                    name: a.a.app_cpu_usage,
                    type: R.a.APP_USAGE,
                    categories: [s.a.usage],
                    statement: o.e.Group(C, U)
                }),
                k = Object(o.b)({
                    name: a.a.app_ram_usage,
                    type: R.a.APP_USAGE,
                    categories: [s.a.usage],
                    statement: o.e.Group(D, L)
                });
            var B = Object(o.c)({
                metrics: [x, k]
            });
            let j;
            (j || (j = {})).extractLowestFpsDrop = e => {
                var t, n;
                return {
                    lowestDrop: null == e || null === (t = e.data) || void 0 === t ? void 0 : t.lowestDrop,
                    maxFps: null == e || null === (n = e.data) || void 0 === n ? void 0 : n.maxFps
                }
            };
            var F = j;
            const G = o.b.Fps({
                name: a.a.fps_scroll_conv_list,
                categories: [s.a.ux_latency],
                timeout: 5e3,
                statement: Object(o.e)({
                    name: "lowest FPS drop - scroll conv list",
                    points: [o.e.Point({
                        name: "maxFps = 60",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t <= 60)
                        },
                        points: [o.e.Point({
                            name: "fps <= 10",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 10)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99677
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99681
                                }
                            })]
                        }), o.e.Point({
                            name: "10 < fps <= 25",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 10 && t <= 25)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99678
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99682
                                }
                            })]
                        }), o.e.Point({
                            name: "25 < fps <= 39",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 25 && t <= 39)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99679
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99683
                                }
                            })]
                        }), o.e.Point({
                            name: "39 < fps <= 49",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 39 && t <= 49)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99680
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99684
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "maxFps = 120",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t > 60 && t <= 120)
                        },
                        points: [o.e.Point({
                            name: "fps <= 20",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99685
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99689
                                }
                            })]
                        }), o.e.Point({
                            name: "20 < fps <= 50",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 20 && t <= 50)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99686
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99690
                                }
                            })]
                        }), o.e.Point({
                            name: "50 < fps <= 79",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 50 && t <= 79)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99687
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99691
                                }
                            })]
                        }), o.e.Point({
                            name: "79 < fps <= 99",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 79 && t <= 99)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99688
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99692
                                }
                            })]
                        })]
                    })]
                })
            });
            var q = Object(o.c)({
                metrics: [G]
            });
            const H = o.b.Fps({
                    name: a.a.fps_switch_conv,
                    categories: [s.a.ux_latency],
                    timeout: 5e3,
                    statement: Object(o.e)({
                        name: "lowest FPS drop - switch conversation",
                        points: [o.e.Point({
                            name: "maxFps = 60",
                            condition: e => {
                                const {
                                    maxFps: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 60)
                            },
                            points: [o.e.Point({
                                name: "fps <= 10",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99693
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99697
                                    }
                                })]
                            }), o.e.Point({
                                name: "10 < fps <= 25",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 10 && t <= 25)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99694
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99698
                                    }
                                })]
                            }), o.e.Point({
                                name: "25 < fps <= 39",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 25 && t <= 39)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99695
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99699
                                    }
                                })]
                            }), o.e.Point({
                                name: "39 < fps <= 49",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 39 && t <= 49)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99696
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99700
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "maxFps = 120",
                            condition: e => {
                                const {
                                    maxFps: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 60 && t <= 120)
                            },
                            points: [o.e.Point({
                                name: "fps <= 20",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t <= 20)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99701
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99705
                                    }
                                })]
                            }), o.e.Point({
                                name: "20 < fps <= 50",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 20 && t <= 50)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99702
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99706
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 < fps <= 79",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 50 && t <= 79)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99703
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99707
                                    }
                                })]
                            }), o.e.Point({
                                name: "79 < fps <= 99",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 79 && t <= 99)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99704
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99708
                                    }
                                })]
                            })]
                        })]
                    })
                }),
                z = o.b.Fps({
                    name: a.a.fps_jump_to_msg,
                    categories: [s.a.ux_latency],
                    timeout: 5e3,
                    statement: Object(o.e)({
                        name: "lowest FPS drop - jump to message",
                        points: [o.e.Point({
                            name: "maxFps = 60",
                            condition: e => {
                                const {
                                    maxFps: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 60)
                            },
                            points: [o.e.Point({
                                name: "fps <= 10",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t <= 10)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99709
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99713
                                    }
                                })]
                            }), o.e.Point({
                                name: "10 < fps <= 25",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 10 && t <= 25)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99710
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99714
                                    }
                                })]
                            }), o.e.Point({
                                name: "25 < fps <= 39",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 25 && t <= 39)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99711
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99715
                                    }
                                })]
                            }), o.e.Point({
                                name: "39 < fps <= 49",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 39 && t <= 49)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99712
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99716
                                    }
                                })]
                            })]
                        }), o.e.Point({
                            name: "maxFps = 120",
                            condition: e => {
                                const {
                                    maxFps: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 60 && t <= 120)
                            },
                            points: [o.e.Point({
                                name: "fps <= 20",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t <= 20)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99717
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99721
                                    }
                                })]
                            }), o.e.Point({
                                name: "20 < fps <= 50",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 20 && t <= 50)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99718
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99722
                                    }
                                })]
                            }), o.e.Point({
                                name: "50 < fps <= 79",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 50 && t <= 79)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99719
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99723
                                    }
                                })]
                            }), o.e.Point({
                                name: "79 < fps <= 99",
                                condition: e => {
                                    const {
                                        lowestDrop: t
                                    } = F.extractLowestFpsDrop(e);
                                    return !!(null != t && t > 79 && t <= 99)
                                },
                                points: [o.e.Point({
                                    name: "window & mac intel",
                                    condition: e => !o.a.isM1(e),
                                    qos: {
                                        cmdId: 99720
                                    }
                                }), o.e.Point({
                                    name: "mac m1",
                                    condition: e => o.a.isM1(e),
                                    qos: {
                                        cmdId: 99724
                                    }
                                })]
                            })]
                        })]
                    })
                });
            var K = Object(o.c)({
                metrics: [H, z]
            });
            const W = o.b.Fps({
                name: a.a.fps_scroll_chat_box_view,
                categories: [s.a.ux_latency],
                timeout: 5e3,
                statement: Object(o.e)({
                    name: "lowest FPS drop - scroll chat box view",
                    points: [o.e.Point({
                        name: "maxFps = 60",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t <= 60)
                        },
                        points: [o.e.Point({
                            name: "fps <= 10",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 10)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99725
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99729
                                }
                            })]
                        }), o.e.Point({
                            name: "10 < fps <= 25",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 10 && t <= 25)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99726
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99730
                                }
                            })]
                        }), o.e.Point({
                            name: "25 < fps <= 39",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 25 && t <= 39)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99727
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99731
                                }
                            })]
                        }), o.e.Point({
                            name: "39 < fps <= 49",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 39 && t <= 49)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99728
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99732
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "maxFps = 120",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t > 60 && t <= 120)
                        },
                        points: [o.e.Point({
                            name: "fps <= 20",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99733
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99737
                                }
                            })]
                        }), o.e.Point({
                            name: "20 < fps <= 50",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 20 && t <= 50)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99734
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99738
                                }
                            })]
                        }), o.e.Point({
                            name: "50 < fps <= 79",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 50 && t <= 79)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99735
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99739
                                }
                            })]
                        }), o.e.Point({
                            name: "79 < fps <= 99",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 79 && t <= 99)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99736
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99740
                                }
                            })]
                        })]
                    })]
                })
            });
            var V = Object(o.c)({
                metrics: [W]
            });
            const Y = o.b.Fps({
                name: a.a.fps_switch_main_tab,
                categories: [s.a.ux_latency],
                timeout: 5e3,
                statement: Object(o.e)({
                    name: "lowest FPS drop - switch main tab",
                    points: [o.e.Point({
                        name: "maxFps = 60",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t <= 60)
                        },
                        points: [o.e.Point({
                            name: "fps <= 10",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 10)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99741
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99745
                                }
                            })]
                        }), o.e.Point({
                            name: "10 < fps <= 25",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 10 && t <= 25)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99742
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99746
                                }
                            })]
                        }), o.e.Point({
                            name: "25 < fps <= 39",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 25 && t <= 39)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99743
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99747
                                }
                            })]
                        }), o.e.Point({
                            name: "39 < fps <= 49",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 39 && t <= 49)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99744
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99748
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "maxFps = 120",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t > 60 && t <= 120)
                        },
                        points: [o.e.Point({
                            name: "fps <= 20",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99749
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99753
                                }
                            })]
                        }), o.e.Point({
                            name: "20 < fps <= 50",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 20 && t <= 50)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99750
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99754
                                }
                            })]
                        }), o.e.Point({
                            name: "50 < fps <= 79",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 50 && t <= 79)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99751
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99755
                                }
                            })]
                        }), o.e.Point({
                            name: "79 < fps <= 99",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 79 && t <= 99)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99752
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99756
                                }
                            })]
                        })]
                    })]
                })
            });
            var $ = Object(o.c)({
                metrics: [Y]
            });
            const Q = o.b.Fps({
                name: a.a.fps_scroll_global_search_list,
                categories: [s.a.ux_latency],
                timeout: 5e3,
                statement: Object(o.e)({
                    name: "lowest FPS drop - scroll global search list",
                    points: [o.e.Point({
                        name: "maxFps = 60",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t <= 60)
                        },
                        points: [o.e.Point({
                            name: "fps <= 10",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 10)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99757
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99761
                                }
                            })]
                        }), o.e.Point({
                            name: "10 < fps <= 25",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 10 && t <= 25)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99758
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99762
                                }
                            })]
                        }), o.e.Point({
                            name: "25 < fps <= 39",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 25 && t <= 39)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99759
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99763
                                }
                            })]
                        }), o.e.Point({
                            name: "39 < fps <= 49",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 39 && t <= 49)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99760
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99764
                                }
                            })]
                        })]
                    }), o.e.Point({
                        name: "maxFps = 120",
                        condition: e => {
                            const {
                                maxFps: t
                            } = F.extractLowestFpsDrop(e);
                            return !!(null != t && t > 60 && t <= 120)
                        },
                        points: [o.e.Point({
                            name: "fps <= 20",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t <= 20)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99765
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99769
                                }
                            })]
                        }), o.e.Point({
                            name: "20 < fps <= 50",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 20 && t <= 50)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99766
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99770
                                }
                            })]
                        }), o.e.Point({
                            name: "50 < fps <= 79",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 50 && t <= 79)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99767
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99771
                                }
                            })]
                        }), o.e.Point({
                            name: "79 < fps <= 99",
                            condition: e => {
                                const {
                                    lowestDrop: t
                                } = F.extractLowestFpsDrop(e);
                                return !!(null != t && t > 79 && t <= 99)
                            },
                            points: [o.e.Point({
                                name: "window & mac intel",
                                condition: e => !o.a.isM1(e),
                                qos: {
                                    cmdId: 99768
                                }
                            }), o.e.Point({
                                name: "mac m1",
                                condition: e => o.a.isM1(e),
                                qos: {
                                    cmdId: 99772
                                }
                            })]
                        })]
                    })]
                })
            });
            var X = Object(o.c)({
                metrics: [Q]
            });
            t.default = Object(o.d)(Object(i.a)({
                usage: p,
                dal: g,
                fps: A,
                startUp: E,
                conversation: v,
                appUsage: B
            }, r))
        },
        K8kB: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("zlog-write-scheduler")
        },
        KA3I: function(e, t, n) {
            "use strict";
            var r = n("N1xz"),
                i = n("CHYU");
            n("dFSO");
            t.a = class {
                getProcessName(e) {
                    try {
                        return n("T7kW").getName(e) || ""
                    } catch (t) {}
                    return ""
                }
                async run() {
                    if (r.a.process !== i.a.Main) return [];
                    Date.now();
                    const e = n("vbkW").app.getAppMetrics(),
                        t = e.map((e => e.pid));
                    if (!t.length) return [];
                    try {
                        const n = this.getExecutionMethod(),
                            r = await n(t);
                        if (r.error) throw r.error;
                        if (r.info) {
                            const t = this.merge(e, r.info);
                            Date.now();
                            return t
                        }
                    } catch (o) {}
                    return []
                }
                getPidMetrics(e) {
                    return n("vbkW").app.getAppMetrics().find((t => t.pid === e))
                }
                getGPUMetrics() {
                    return n("vbkW").app.getAppMetrics().find((e => "GPU" === e.type))
                }
                merge(e, t) {
                    const n = [];
                    return e.forEach((e => {
                        const r = t[e.pid];
                        r && n.push({
                            pid: e.pid,
                            ppid: r.ppid,
                            name: this.getProcessName(e.pid),
                            type: e.type,
                            cpu: r.cpu,
                            memory: r.memory,
                            sandboxed: e.sandboxed,
                            elapsed: r.elapsed,
                            timestamp: r.timestamp
                        })
                    })), n
                }
                getExecutionMethod() {
                    throw new Error("Platform WEB is not supported yet")
                }
            }
        },
        KBA3: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("dFSO");
            var o = n("CHYU"),
                s = n("ncfp");
            const a = new class {
                constructor() {
                    this.config = {
                        enable: !1,
                        enable_for_staging_account: !0,
                        enable_submit_qos: !0,
                        enable_fps_monitor: !1,
                        enable_fps_monitor_v2: !0,
                        enable_fps_drop_monitor: !0,
                        enable_write_log: !1,
                        submit_qos_except_dev: !0,
                        allow_measure_usage_by_ps_cmd: !1,
                        allow_measure_app_usage: !1,
                        allow_submit_os_version_mac: !0,
                        allow_submit_os_version_win: !1,
                        max_cache_records_resolved: 25,
                        max_starting_process_dictionary: 500,
                        processes_whitelist: [o.a.Main, o.a.Web, o.a.Render, o.a.SharedWorker, o.a.Photo],
                        staging_account: !1,
                        fps_section: {
                            fps_scroll_conv_list: !0,
                            fps_switch_conv: !0,
                            fps_jump_to_msg: !0,
                            fps_scroll_chat_box_view: !0,
                            fps_switch_main_tab: !0,
                            fps_scroll_global_search_list: !0
                        },
                        debug: {
                            enable: !1
                        }
                    }, this.stagingAccountStatus = s.a.PENDING, this.listerners = {}, this.listernerChanged = [], this.init()
                }
                get enable() {
                    return this.config.enable
                }
                init() {
                    0
                }
                mergeSetting(e) {
                    var t, n;
                    if (!e || "object" != typeof e) return;
                    const o = JSON.parse(JSON.stringify(this.config));
                    this.config = Object(r.a)(Object(r.a)(Object(r.a)({}, this.config), e || {}), {}, {
                        fps_section: Object(r.a)(Object(r.a)({}, this.config.fps_section), (null == e ? void 0 : e.fps_section) || {}),
                        debug: Object(r.a)(Object(r.a)({}, this.config.debug), (null == e ? void 0 : e.debug) || {})
                    }), null != e && e.staging_account && null == (null == e || null === (t = e.debug) || void 0 === t ? void 0 : t.enable) && (this.config.debug.enable = !0);
                    for (const r in this.config) {
                        const t = null == e ? void 0 : e[r];
                        if ("staging_account" === r && (this.stagingAccountStatus = t ? s.a.YES : s.a.NO), !Object(i.b)(o[r]) && !Object(i.b)(t)) {
                            const e = this.listerners[r];
                            null != e && e.length && e.forEach((e => e(t)))
                        }
                    }
                    null !== (n = this.listernerChanged) && void 0 !== n && n.length && this.listernerChanged.forEach((e => e()))
                }
                on(e, t) {
                    this.listerners[e] || (this.listerners[e] = []), this.listerners[e].push(t)
                }
                removeListener(e, t) {
                    var n;
                    null !== (n = this.listerners[e]) && void 0 !== n && n.length && (this.listerners[e] = this.listerners[e].filter((e => e !== t)))
                }
                onConfigChange(e) {
                    this.listernerChanged.push(e)
                }
                onEnable(e) {
                    this.on("enable", (t => {
                        t && e()
                    }))
                }
                onDisable(e) {
                    this.on("enable", (t => {
                        t || e()
                    }))
                }
                getConfig() {
                    return this.config
                }
                getStagingAccountStatus() {
                    return this.stagingAccountStatus
                }
            };
            t.a = a
        },
        KFwE: function(e, t, n) {
            "use strict";
            n("mNvP"), n("saaK");
            self.global = globalThis
        },
        KMkd: function(e, t) {
            e.exports = function() {
                this.__data__ = [], this.size = 0
            }
        },
        KRcn: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("PLj1");

            function i() {
                let e;
                try {
                    switch (__ZaBUNDLENAME__.toLocaleLowerCase()) {
                        case "main":
                            e = r.b.Main;
                            break;
                        case "web":
                            e = r.b.Web;
                            break;
                        case "login":
                            e = r.b.Login;
                            break;
                        case "photo":
                            e = r.b.Photo;
                            break;
                        case "render":
                            e = r.b.Render;
                            break;
                        case "shared-worker":
                            e = r.b.SharedWorker;
                            break;
                        default:
                            e = r.b.Unknown
                    }
                } catch {
                    e = r.b.Unknown
                }
                return e
            }
        },
        KdAX: function(e, t, n) {
            "use strict";
            var r = n("jDHv"),
                i = n("W8fB"),
                o = n("UJDs"),
                s = n("7FSS"),
                a = (n("j6JD"), n("VTBJ"));
            const c = n("4JQ2"),
                d = {
                    intro: e => d.eol(e),
                    info: e => e,
                    debug: e => e,
                    warning: e => e,
                    error: e => e,
                    placeholder: e => e,
                    tick: e => e,
                    header: e => c.green(e),
                    sourcemap: e => c.gray(e),
                    level: e => e,
                    bold: e => c.bold(e),
                    eol: e => e + "\n\n"
                },
                u = (Object(a.a)(Object(a.a)({}, d), {}, {
                    intro: e => d.eol(c.bgWhite.black(e)),
                    info: e => c.white(e),
                    debug: e => c.blue(e),
                    warning: e => c.yellow(e),
                    error: e => c.red(e),
                    tick: e => c.black.bgWhite.bold(` ${e} `),
                    header: e => e
                }), d);
            n("CDcE");
            const l = {
                    display: !0,
                    style: "font-size: 11px; color: gray"
                },
                p = {
                    display: !1,
                    style: "font-size: 11px; color: gray; margin-bottom: 8px"
                };

            function m(e) {
                let {
                    lineMeta: t,
                    template: n,
                    args: r
                } = e;
                if ("number" == typeof n) return "Error: expected template as string. Got number?! [" + t.id1 + ":" + t.id2 + "]";
                const i = [t.module, t.features.join("/")].map((e => e || "?")).join("|");
                let o = r.map((e => function(e) {
                    let t = e;
                    if ("function" == typeof e) try {
                        t = e()
                    } catch (n) {
                        s.a.error("ZLogSanitizer: failed to exec func. Please make sure your func executable" + n), t = e.toString()
                    }
                    return t
                }(e)));
                1 === o.length && 1 === r.length && "function" == typeof r[0] && Array.isArray(o[0]) && (o = o[0]);
                const a = function(e, t) {
                        if (null === e) return "";
                        const n = "{}";
                        let r = 0;
                        for (; - 1 !== e.search(n) && r < t.length;) switch (typeof t[r++]) {
                            case "number":
                                e = e.replace(n, "%d");
                                break;
                            case "string":
                            default:
                                e = e.replace(n, "%s");
                                break;
                            case "object":
                                e = e.replace(n, "%o")
                        }
                        return e
                    }(n, o).trim(),
                    c = (t.id1.toString().substring(t.id1.toString().indexOf("src")), t.id2, ""),
                    d = [];
                return l.display && i.trim() && d.push(u.sourcemap(i.trim()) + "\n"), p.display && c.trim() && d.push(u.sourcemap(c) + "\n"), a.trim() && d.push(a.trim()), o.length > 0 ? (o.unshift(d.join(" ")), o) : [d.join(" ")]
            }
            var h;
            let f = Object(r.injectable)()(h = class {
                write(e) {
                    const t = m(e);
                    switch (e.lineMeta.level) {
                        case o.b.info:
                            s.a.log.apply(null, t);
                            break;
                        case o.b.warn:
                            s.a.warn.apply(null, t);
                            break;
                        case o.b.debug:
                            s.a.debug.apply(null, t);
                            break;
                        case o.b.error:
                            s.a.error.apply(null, t);
                            break;
                        default:
                            s.a.log.apply(null, t)
                    }
                }
            }) || h;
            r.ModuleContainer.registerSingleton(i.a, f)
        },
        KfNM: function(e, t) {
            var n = Object.prototype.toString;
            e.exports = function(e) {
                return n.call(e)
            }
        },
        KiFO: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("YEoC");
            const i = new(n("teaq").d)({
                tableName: "partition",
                name: "partition",
                fields: {
                    database: {
                        name: "database",
                        type: r.g.string
                    },
                    table: {
                        name: "table",
                        type: r.g.string
                    },
                    key: {
                        name: "key",
                        type: r.g.string
                    },
                    value: {
                        name: "value",
                        type: r.g.string
                    }
                },
                indices: {
                    primary: {
                        name: "primary",
                        fields: [{
                            type: "raw",
                            field: "database"
                        }, {
                            type: "raw",
                            field: "table"
                        }, {
                            type: "raw",
                            field: "key"
                        }],
                        unique: !0
                    }
                }
            })
        },
        KmYQ: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.pad.ZeroPadding = {
                pad: function(e, t) {
                    var n = 4 * t;
                    e.clamp(), e.sigBytes += n - (e.sigBytes % n || n)
                },
                unpad: function(e) {
                    for (var t = e.words, n = e.sigBytes - 1; !(t[n >>> 2] >>> 24 - n % 4 * 8 & 255);) n--;
                    e.sigBytes = n + 1
                }
            }, r.pad.ZeroPadding)
        },
        Kz5y: function(e, t, n) {
            var r = n("WFqU"),
                i = "object" == typeof self && self && self.Object === Object && self,
                o = r || i || Function("return this")();
            e.exports = o
        },
        LGyv: function(e, t) {
            e.exports = function(e, t) {
                return {
                    enumerable: !(1 & e),
                    configurable: !(2 & e),
                    writable: !(4 & e),
                    value: t
                }
            }
        },
        Lq8m: function(e, t, n) {
            "use strict";
            (function(e) {
                var t, r = n("jDHv"),
                    i = n("Uzj0"),
                    o = n("Mgpg"),
                    s = n("UK4g"),
                    a = n("YEoC"),
                    c = n("DI/x"),
                    d = n("tHMN"),
                    u = n("ipeT"),
                    l = n("LzQZ"),
                    p = n("pjo1");
                let m = r.ModuleContainer.injectable()(t = function(e, t) {
                    return r.ModuleContainer.inject(d.b)(e, void 0, 0)
                }(t = function(e, t) {
                    return r.ModuleContainer.inject(o.ZLoggerFactory)(e, void 0, 1)
                }(t = function(e, t) {
                    return r.ModuleContainer.inject(l.a)(e, void 0, 2)
                }(t = Reflect.metadata("design:type", Function)(t = Reflect.metadata("design:paramtypes", [void 0 === d.a ? Object : d.a, void 0 === o.ZLoggerFactory ? Object : o.ZLoggerFactory, void 0 === l.a ? Object : l.a])(t = class {
                    constructor(e, t, n) {
                        this.engine = e, this.loggerFactory = t, this.transactionManager = n, this.logger = void 0, this.logger = this.loggerFactory.createZLogger("db", ["client"])
                    }
                    createQueryBuilder(e) {
                        const t = i.c.map(e, ((e, t) => this.createBuilder(e, t)));
                        return t.deleteAllDatabases = this.deleteAllDatabases.bind(this), t.closeAllDatabases = this.closeAllDatabases.bind(this), t
                    }
                    createBuilder(e, t, n) {
                        const r = i.c.map(t, ((t, r) => new u.a(this.engine, e, r, s.j, n)));
                        return r.runTransaction = this.runTransaction.bind(this, e, t), r.deleteThisDatabase = this.deleteDatabase.bind(this, e), r.closeThisDatabase = this.closeDatabase.bind(this, e), r.doesThisDatabaseExist = this.doesDatabaseExists.bind(this, e), r
                    }
                    runTransaction(t, n, r, i, o) {
                        void 0 === o && (o = a.f.READWRITE);
                        const s = this.transactionManager,
                            d = this.engine;
                        return new Promise(((a, l) => {
                            try {
                                !async function(a, l) {
                                    const p = r.map((e => "string" == typeof e ? e : e.name)),
                                        m = await s.beginTransaction(t, p, o),
                                        h = p.map((e => {
                                            if (!n[e]) throw new c.r(e);
                                            const r = n[e];
                                            return new u.a(d, t, r, m.id)
                                        }));
                                    await i(h), e((() => {
                                        s.commitTransaction(m.id).then(a).catch(l)
                                    }))
                                }(a, l)
                            } catch (p) {
                                l(p)
                            }
                        }))
                    }
                    deleteDatabase(e) {
                        return this.engine.deleteDatabase(e)
                    }
                    deleteAllDatabases() {
                        return this.engine.deleteAllDatabases()
                    }
                    closeDatabase(e) {
                        return this.engine.closeDatabase(e)
                    }
                    closeAllDatabases() {
                        return this.engine.closeAllDatabases()
                    }
                    doesDatabaseExists(e) {
                        return this.engine.doesDatabaseExists(e)
                    }
                }) || t) || t) || t) || t) || t) || t;
                r.ModuleContainer.registerSingleton(p.a, m)
            }).call(this, n("NWH6").setImmediate)
        },
        LzQZ: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("database-transaction-manager")
        },
        MNz0: function(e, t, n) {
            "use strict";
            var r;
            ! function(e) {
                e.ACCEPT_LAST = "ACCEPT_LAST"
            }(r || (r = {})), t.a = r
        },
        MRjZ: function(e, t, n) {
            "use strict";

            function r(e) {
                return Object.entries(e).map((e => {
                    let [t, n] = e;
                    return `${t}=${JSON.stringify(n)}`
                })).join(",")
            }
            n.d(t, "a", (function() {
                return r
            }))
        },
        Mgpg: function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("XB6V");
            n.d(t, "ZLoggerFactory", (function() {
                return r.a
            }));
            var i = n("7xKq");
            n.d(t, "ZLogger", (function() {
                return i.ZLogger
            }));
            var o = n("7FSS");
            n.d(t, "dangerouslyLogConsole", (function() {
                return o.a
            }));
            var s = n("OMsT");
            n.d(t, "ZLogCollector", (function() {
                return s.a
            }));
            var a = n("jGDt");
            n.d(t, "ZLogSession", (function() {
                return a.a
            }))
        },
        MlIO: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function(e) {
                var t = r,
                    n = t.lib,
                    i = n.Base,
                    o = n.WordArray,
                    s = t.x64 = {};
                s.Word = i.extend({
                    init: function(e, t) {
                        this.high = e, this.low = t
                    }
                }), s.WordArray = i.extend({
                    init: function(t, n) {
                        t = this.words = t || [], this.sigBytes = n != e ? n : 8 * t.length
                    },
                    toX32: function() {
                        for (var e = this.words, t = e.length, n = [], r = 0; r < t; r++) {
                            var i = e[r];
                            n.push(i.high), n.push(i.low)
                        }
                        return o.create(n, this.sigBytes)
                    },
                    clone: function() {
                        for (var e = i.clone.call(this), t = e.words = this.words.slice(0), n = t.length, r = 0; r < n; r++) t[r] = t[r].clone();
                        return e
                    }
                })
            }(), r)
        },
        N1xz: function(e, t, n) {
            "use strict";
            var r = n("h0S/"),
                i = n("KBA3"),
                o = n("K+9E"),
                s = n("CHYU");
            class a {
                static get EPOCH() {
                    return this._epoch
                }
                static register(e, t) {
                    this.tokens || (this.tokens = new Map), this.tokens.set(e, t)
                }
                static get MetricManager() {
                    if (!this._metricManager) {
                        const e = o.a.METRIC_MANAGER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`[metricz] token "${e}" is not registered`);
                        this._metricManager = new t, this.tokens.delete(e)
                    }
                    return this._metricManager
                }
                static get SchemaManager() {
                    if (!this._schemaManager) {
                        const e = o.a.METRIC_SCHEMA_MANAGER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`[metricz] token "${e}" is not registered`);
                        this._schemaManager = new t, this.tokens.delete(e)
                    }
                    return this._schemaManager
                }
                static get MetricFactory() {
                    if (!this._metricFactory) {
                        const e = o.a.METRIC_FACTORY,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`[metricz] token "${e}" is not registered`);
                        this._metricFactory = new t, this.tokens.delete(e)
                    }
                    return this._metricFactory
                }
                static get MetricTransporter() {
                    if (!this._metricTransporter) {
                        const e = o.a.METRIC_TRANSPORTER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._metricTransporter = new t, this.tokens.delete(e)
                    }
                    return this._metricTransporter
                }
                static get MetricResolver() {
                    if (!this._metricResolver) {
                        const e = o.a.METRIC_RESOLVER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._metricResolver = new t, this.tokens.delete(e)
                    }
                    return this._metricResolver
                }
                static get UsageMonitor() {
                    if (!this._usageMonitor) {
                        const e = o.a.USAGE_MONITOR,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._usageMonitor = new t, this.tokens.delete(e)
                    }
                    return this._usageMonitor
                }
                static get LocalStat() {
                    if (!this._localStat) {
                        const e = o.a.LOCAL_STAT,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._localStat = new t, this.tokens.delete(e)
                    }
                    return this._localStat
                }
                static get DataManager() {
                    if (!this._dataManager) {
                        const e = o.a.DATA_MANAGER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._dataManager = new t, this.tokens.delete(e)
                    }
                    return this._dataManager
                }
                static get UIManager() {
                    if (!this._uiManager) {
                        const e = o.a.UI_MANAGER,
                            t = this.tokens.get(e);
                        if (!t) throw new Error(`Metric token "${e}" is not registered`);
                        this._uiManager = new t, this.tokens.delete(e)
                    }
                    return this._uiManager
                }
                static createLogger(e) {
                    try {
                        const {
                            ModuleContainer: t
                        } = n("jDHv"), {
                            ZLoggerFactory: i
                        } = n("Mgpg");
                        return t.resolve(i).createZLogger(r.b.metricz, [e])
                    } catch (t) {}
                }
                static get Logger() {
                    return this._Logger || (this._Logger = this.createLogger("internal")), this._Logger
                }
                static install() {
                    this._installed || (this._installed = !0, this._exited = !1, this.canIUse() && (this.startEpoch(), this.SchemaManager.ready(), this.UsageMonitor.ready(), this.MetricManager.ready(), this.MetricResolver.ready(), this.LocalStat.ready(), this.UIManager.ready(), this.process !== s.a.Main && this.MetricTransporter.ready()))
                }
                static isInstalled() {
                    return !!this._installed
                }
                static startEpoch() {
                    this._epoch || (this._epoch = Date.now(), this.DataManager.saveEpoch(this.process, this._epoch))
                }
                static get process() {
                    return this._process || (this._process = this.getCurrentProcess()), this._process
                }
                static getCurrentProcess() {
                    switch (__ZaBUNDLENAME__.toLowerCase()) {
                        case "main":
                            return s.a.Main;
                        case "web":
                            return s.a.Web;
                        case "render":
                            return s.a.Render;
                        case "login":
                            return s.a.Login;
                        case "photo":
                            return s.a.Photo;
                        case "shared-worker":
                            return s.a.SharedWorker;
                        default:
                            return s.a.Unknown
                    }
                }
                static canIUse() {
                    return !(!this._installed || this._exited) && i.a.getConfig().processes_whitelist.includes(this.process)
                }
                static exit() {
                    this._exited = !0, this._installed = !1, this.MetricManager.exit(), this.MetricResolver.exit(), this.MetricTransporter.exit(), this.UIManager.exit()
                }
            }
            a._Logger = void 0, a._process = void 0, a._metricManager = void 0, a._schemaManager = void 0, a._metricFactory = void 0, a._metricTransporter = void 0, a._metricResolver = void 0, a._usageMonitor = void 0, a._localStat = void 0, a._dataManager = void 0, a._uiManager = void 0, a.tokens = void 0, a._epoch = void 0, a._installed = void 0, a._exited = void 0, t.a = a
        },
        NFKh: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("MlIO"), n("F+F2"), n("qM6L"), n("ETIr"), n("cv67"), n("3y9D"), n("lPiR"), n("GRuw"), n("1uat"), n("uGsb"), n("5hvy"), n("ELcG"), n("WYAk"), n("e7zE"), n("K3mO"), n("OLod"), n("ALsQ"), n("9OqN"), n("qu8F"), n("S6kV"), n("gb/T"), n("qBft"), n("oRuE"), n("jO9C"), n("KmYQ"), n("uGxW"), n("bQjk"), n("wZgz"), n("pA7S"), n("w7YG"), n("E4JC"), n("PVpz"), r)
        },
        NKxu: function(e, t, n) {
            var r = n("lSCD"),
                i = n("E2jh"),
                o = n("GoyQ"),
                s = n("3Fdi"),
                a = /^\[object .+?Constructor\]$/,
                c = Function.prototype,
                d = Object.prototype,
                u = c.toString,
                l = d.hasOwnProperty,
                p = RegExp("^" + u.call(l).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
            e.exports = function(e) {
                return !(!o(e) || i(e)) && (r(e) ? p : a).test(s(e))
            }
        },
        NWH6: function(e, t, n) {
            (function(e) {
                var r = void 0 !== e && e || "undefined" != typeof self && self || window,
                    i = Function.prototype.apply;

                function o(e, t) {
                    this._id = e, this._clearFn = t
                }
                t.setTimeout = function() {
                    return new o(i.call(setTimeout, r, arguments), clearTimeout)
                }, t.setInterval = function() {
                    return new o(i.call(setInterval, r, arguments), clearInterval)
                }, t.clearTimeout = t.clearInterval = function(e) {
                    e && e.close()
                }, o.prototype.unref = o.prototype.ref = function() {}, o.prototype.close = function() {
                    this._clearFn.call(r, this._id)
                }, t.enroll = function(e, t) {
                    clearTimeout(e._idleTimeoutId), e._idleTimeout = t
                }, t.unenroll = function(e) {
                    clearTimeout(e._idleTimeoutId), e._idleTimeout = -1
                }, t._unrefActive = t.active = function(e) {
                    clearTimeout(e._idleTimeoutId);
                    var t = e._idleTimeout;
                    t >= 0 && (e._idleTimeoutId = setTimeout((function() {
                        e._onTimeout && e._onTimeout()
                    }), t))
                }, n("dI7C"), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate
            }).call(this, n("kjmW"))
        },
        Na1p: function(e, t, n) {
            "use strict";
            (function(e) {
                var r = n("VTBJ"),
                    i = n("ZgEe");
                class o {
                    static start() {
                        var t;
                        !this.started && null !== (t = e) && void 0 !== t && t.cpuUsage && (this.started = !0, this.timer = new i.a, this.startUsage = e.cpuUsage())
                    }
                    static getUsage() {
                        this.started || this.start();
                        const t = e.cpuUsage(this.startUsage),
                            n = this.timer.us,
                            i = (t.system + t.user) / n * 100;
                        return Object(r.a)(Object(r.a)({}, t), {}, {
                            time: n,
                            percent: i
                        })
                    }
                }
                o.timer = void 0, o.startUsage = void 0, o.started = void 0, t.a = o
            }).call(this, n("ckNr"))
        },
        Npjl: function(e, t) {
            e.exports = function(e, t) {
                return null == e ? void 0 : e[t]
            }
        },
        NykK: function(e, t, n) {
            var r = n("nmnc"),
                i = n("AP2z"),
                o = n("KfNM"),
                s = r ? r.toStringTag : void 0;
            e.exports = function(e) {
                return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : s && s in Object(e) ? i(e) : o(e)
            }
        },
        OLod: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), void(r.lib.Cipher || function(e) {
                var t = r,
                    n = t.lib,
                    i = n.Base,
                    o = n.WordArray,
                    s = n.BufferedBlockAlgorithm,
                    a = t.enc,
                    c = (a.Utf8, a.Base64),
                    d = t.algo.EvpKDF,
                    u = n.Cipher = s.extend({
                        cfg: i.extend(),
                        createEncryptor: function(e, t) {
                            return this.create(this._ENC_XFORM_MODE, e, t)
                        },
                        createDecryptor: function(e, t) {
                            return this.create(this._DEC_XFORM_MODE, e, t)
                        },
                        init: function(e, t, n) {
                            this.cfg = this.cfg.extend(n), this._xformMode = e, this._key = t, this.reset()
                        },
                        reset: function() {
                            s.reset.call(this), this._doReset()
                        },
                        process: function(e) {
                            return this._append(e), this._process()
                        },
                        finalize: function(e) {
                            return e && this._append(e), this._doFinalize()
                        },
                        keySize: 4,
                        ivSize: 4,
                        _ENC_XFORM_MODE: 1,
                        _DEC_XFORM_MODE: 2,
                        _createHelper: function() {
                            function e(e) {
                                return "string" == typeof e ? E : y
                            }
                            return function(t) {
                                return {
                                    encrypt: function(n, r, i) {
                                        return e(r).encrypt(t, n, r, i)
                                    },
                                    decrypt: function(n, r, i) {
                                        return e(r).decrypt(t, n, r, i)
                                    }
                                }
                            }
                        }()
                    }),
                    l = (n.StreamCipher = u.extend({
                        _doFinalize: function() {
                            return this._process(!0)
                        },
                        blockSize: 1
                    }), t.mode = {}),
                    p = n.BlockCipherMode = i.extend({
                        createEncryptor: function(e, t) {
                            return this.Encryptor.create(e, t)
                        },
                        createDecryptor: function(e, t) {
                            return this.Decryptor.create(e, t)
                        },
                        init: function(e, t) {
                            this._cipher = e, this._iv = t
                        }
                    }),
                    m = l.CBC = function() {
                        var t = p.extend();

                        function n(t, n, r) {
                            var i = this._iv;
                            if (i) {
                                var o = i;
                                this._iv = e
                            } else o = this._prevBlock;
                            for (var s = 0; s < r; s++) t[n + s] ^= o[s]
                        }
                        return t.Encryptor = t.extend({
                            processBlock: function(e, t) {
                                var r = this._cipher,
                                    i = r.blockSize;
                                n.call(this, e, t, i), r.encryptBlock(e, t), this._prevBlock = e.slice(t, t + i)
                            }
                        }), t.Decryptor = t.extend({
                            processBlock: function(e, t) {
                                var r = this._cipher,
                                    i = r.blockSize,
                                    o = e.slice(t, t + i);
                                r.decryptBlock(e, t), n.call(this, e, t, i), this._prevBlock = o
                            }
                        }), t
                    }(),
                    h = (t.pad = {}).Pkcs7 = {
                        pad: function(e, t) {
                            for (var n = 4 * t, r = n - e.sigBytes % n, i = r << 24 | r << 16 | r << 8 | r, s = [], a = 0; a < r; a += 4) s.push(i);
                            var c = o.create(s, r);
                            e.concat(c)
                        },
                        unpad: function(e) {
                            var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                            e.sigBytes -= t
                        }
                    },
                    f = (n.BlockCipher = u.extend({
                        cfg: u.cfg.extend({
                            mode: m,
                            padding: h
                        }),
                        reset: function() {
                            u.reset.call(this);
                            var e = this.cfg,
                                t = e.iv,
                                n = e.mode;
                            if (this._xformMode == this._ENC_XFORM_MODE) var r = n.createEncryptor;
                            else r = n.createDecryptor, this._minBufferSize = 1;
                            this._mode = r.call(n, this, t && t.words)
                        },
                        _doProcessBlock: function(e, t) {
                            this._mode.processBlock(e, t)
                        },
                        _doFinalize: function() {
                            var e = this.cfg.padding;
                            if (this._xformMode == this._ENC_XFORM_MODE) {
                                e.pad(this._data, this.blockSize);
                                var t = this._process(!0)
                            } else t = this._process(!0), e.unpad(t);
                            return t
                        },
                        blockSize: 4
                    }), n.CipherParams = i.extend({
                        init: function(e) {
                            this.mixIn(e)
                        },
                        toString: function(e) {
                            return (e || this.formatter).stringify(this)
                        }
                    })),
                    g = (t.format = {}).OpenSSL = {
                        stringify: function(e) {
                            var t = e.ciphertext,
                                n = e.salt;
                            if (n) var r = o.create([1398893684, 1701076831]).concat(n).concat(t);
                            else r = t;
                            return r.toString(c)
                        },
                        parse: function(e) {
                            var t = c.parse(e),
                                n = t.words;
                            if (1398893684 == n[0] && 1701076831 == n[1]) {
                                var r = o.create(n.slice(2, 4));
                                n.splice(0, 4), t.sigBytes -= 16
                            }
                            return f.create({
                                ciphertext: t,
                                salt: r
                            })
                        }
                    },
                    y = n.SerializableCipher = i.extend({
                        cfg: i.extend({
                            format: g
                        }),
                        encrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r);
                            var i = e.createEncryptor(n, r),
                                o = i.finalize(t),
                                s = i.cfg;
                            return f.create({
                                ciphertext: o,
                                key: n,
                                iv: s.iv,
                                algorithm: e,
                                mode: s.mode,
                                padding: s.padding,
                                blockSize: e.blockSize,
                                formatter: r.format
                            })
                        },
                        decrypt: function(e, t, n, r) {
                            return r = this.cfg.extend(r), t = this._parse(t, r.format), e.createDecryptor(n, r).finalize(t.ciphertext)
                        },
                        _parse: function(e, t) {
                            return "string" == typeof e ? t.parse(e, this) : e
                        }
                    }),
                    _ = (t.kdf = {}).OpenSSL = {
                        execute: function(e, t, n, r) {
                            r || (r = o.random(8));
                            var i = d.create({
                                    keySize: t + n
                                }).compute(e, r),
                                s = o.create(i.words.slice(t), 4 * n);
                            return i.sigBytes = 4 * t, f.create({
                                key: i,
                                iv: s,
                                salt: r
                            })
                        }
                    },
                    E = n.PasswordBasedCipher = y.extend({
                        cfg: y.cfg.extend({
                            kdf: _
                        }),
                        encrypt: function(e, t, n, r) {
                            var i = (r = this.cfg.extend(r)).kdf.execute(n, e.keySize, e.ivSize);
                            r.iv = i.iv;
                            var o = y.encrypt.call(this, e, t, i.key, r);
                            return o.mixIn(i), o
                        },
                        decrypt: function(e, t, n, r) {
                            r = this.cfg.extend(r), t = this._parse(t, r.format);
                            var i = r.kdf.execute(n, e.keySize, e.ivSize, t.salt);
                            return r.iv = i.iv, y.decrypt.call(this, e, t, i.key, r)
                        }
                    })
            }()))
        },
        OMsT: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("log-collector")
        },
        OsYe: function(e, t, n) {
            (function(t) {
                var n = function(e) {
                    return e && e.Math == Math && e
                };
                e.exports = n("object" == typeof globalThis && globalThis) || n("object" == typeof window && window) || n("object" == typeof self && self) || n("object" == typeof t && t) || Function("return this")()
            }).call(this, n("kjmW"))
        },
        PLj1: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "a", (function() {
                return s
            }));
            var r = n("fsQs");
            let i;
            ! function(e) {
                e.Main = "main", e.Render = "render", e.SharedWorker = "shared-worker", e.Unknown = "unknown", e.Photo = "photo", e.Web = "web", e.Embed = "embed", e.Login = "login"
            }(i || (i = {}));
            const o = {
                    [i.Main]: r.e,
                    [i.Render]: r.e,
                    [i.SharedWorker]: r.e,
                    [i.Unknown]: r.e,
                    [i.Photo]: r.e,
                    [i.Web]: r.g,
                    [i.Embed]: -1,
                    [i.Login]: r.f
                },
                s = [i.Embed, i.Unknown]
        },
        POgF: function(e, t, n) {
            n("UbhR"), e.exports = n("OsYe")
        },
        PVpz: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("ETIr"), n("cv67"), n("K3mO"), n("OLod"), function() {
                var e = r,
                    t = e.lib.StreamCipher,
                    n = e.algo,
                    i = [],
                    o = [],
                    s = [],
                    a = n.RabbitLegacy = t.extend({
                        _doReset: function() {
                            var e = this._key.words,
                                t = this.cfg.iv,
                                n = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                r = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            this._b = 0;
                            for (var i = 0; i < 4; i++) c.call(this);
                            for (i = 0; i < 8; i++) r[i] ^= n[i + 4 & 7];
                            if (t) {
                                var o = t.words,
                                    s = o[0],
                                    a = o[1],
                                    d = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8),
                                    u = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8),
                                    l = d >>> 16 | 4294901760 & u,
                                    p = u << 16 | 65535 & d;
                                for (r[0] ^= d, r[1] ^= l, r[2] ^= u, r[3] ^= p, r[4] ^= d, r[5] ^= l, r[6] ^= u, r[7] ^= p, i = 0; i < 4; i++) c.call(this)
                            }
                        },
                        _doProcessBlock: function(e, t) {
                            var n = this._X;
                            c.call(this), i[0] = n[0] ^ n[5] >>> 16 ^ n[3] << 16, i[1] = n[2] ^ n[7] >>> 16 ^ n[5] << 16, i[2] = n[4] ^ n[1] >>> 16 ^ n[7] << 16, i[3] = n[6] ^ n[3] >>> 16 ^ n[1] << 16;
                            for (var r = 0; r < 4; r++) i[r] = 16711935 & (i[r] << 8 | i[r] >>> 24) | 4278255360 & (i[r] << 24 | i[r] >>> 8), e[t + r] ^= i[r]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function c() {
                    for (var e = this._X, t = this._C, n = 0; n < 8; n++) o[n] = t[n];
                    for (t[0] = t[0] + 1295307597 + this._b | 0, t[1] = t[1] + 3545052371 + (t[0] >>> 0 < o[0] >>> 0 ? 1 : 0) | 0, t[2] = t[2] + 886263092 + (t[1] >>> 0 < o[1] >>> 0 ? 1 : 0) | 0, t[3] = t[3] + 1295307597 + (t[2] >>> 0 < o[2] >>> 0 ? 1 : 0) | 0, t[4] = t[4] + 3545052371 + (t[3] >>> 0 < o[3] >>> 0 ? 1 : 0) | 0, t[5] = t[5] + 886263092 + (t[4] >>> 0 < o[4] >>> 0 ? 1 : 0) | 0, t[6] = t[6] + 1295307597 + (t[5] >>> 0 < o[5] >>> 0 ? 1 : 0) | 0, t[7] = t[7] + 3545052371 + (t[6] >>> 0 < o[6] >>> 0 ? 1 : 0) | 0, this._b = t[7] >>> 0 < o[7] >>> 0 ? 1 : 0, n = 0; n < 8; n++) {
                        var r = e[n] + t[n],
                            i = 65535 & r,
                            a = r >>> 16,
                            c = ((i * i >>> 17) + i * a >>> 15) + a * a,
                            d = ((4294901760 & r) * r | 0) + ((65535 & r) * r | 0);
                        s[n] = c ^ d
                    }
                    e[0] = s[0] + (s[7] << 16 | s[7] >>> 16) + (s[6] << 16 | s[6] >>> 16) | 0, e[1] = s[1] + (s[0] << 8 | s[0] >>> 24) + s[7] | 0, e[2] = s[2] + (s[1] << 16 | s[1] >>> 16) + (s[0] << 16 | s[0] >>> 16) | 0, e[3] = s[3] + (s[2] << 8 | s[2] >>> 24) + s[1] | 0, e[4] = s[4] + (s[3] << 16 | s[3] >>> 16) + (s[2] << 16 | s[2] >>> 16) | 0, e[5] = s[5] + (s[4] << 8 | s[4] >>> 24) + s[3] | 0, e[6] = s[6] + (s[5] << 16 | s[5] >>> 16) + (s[4] << 16 | s[4] >>> 16) | 0, e[7] = s[7] + (s[6] << 8 | s[6] >>> 24) + s[5] | 0
                }
                e.RabbitLegacy = t._createHelper(a)
            }(), r.RabbitLegacy)
        },
        PhBv: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return o
            })), n.d(t, "b", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("AH6j");
            n("PmZf");
            class o extends i.b {}
            const s = Object(r.define)("database-query-planner")
        },
        PmZf: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "b", (function() {
                return s
            })), n.d(t, "d", (function() {
                return a
            }));
            var r = n("AH6j");
            let i;
            ! function(e) {
                e.Close = "close", e.SessionChange = "session-change", e.MigrateProgress = "migrate-progress", e.MigratePhaseChange = "migrate-phase-change", e.MigrateDone = "migrate-done", e.TransactionEnd = "transaction-end", e.QueryExec = "query-exe", e.QueryError = "query-error", e.UnexpectedError = "unexpected-error"
            }(i || (i = {}));
            r.a;
            class o extends r.a {
                constructor(e) {
                    super(i.SessionChange), this.session = e
                }
            }
            r.a;
            r.a;
            r.a;
            r.a;
            r.a;
            class s extends r.a {
                constructor(e) {
                    super(i.QueryError), this.error = e
                }
            }
            class a extends r.a {
                constructor(e) {
                    super(i.UnexpectedError), this.error = e
                }
            }
        },
        "PvD+": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            const r = globalThis.process && !globalThis.process.browser && globalThis.Buffer && "function" == typeof globalThis.Buffer.isBuffer,
                i = new TextDecoder,
                o = new TextEncoder;

            function s(e) {
                return r && globalThis.Buffer.isBuffer(e)
            }

            function a(e) {
                return e instanceof Uint8Array ? s(e) ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e : Uint8Array.from(e)
            }
            const c = r ? (e, t, n) => n - t > 64 ? globalThis.Buffer.from(e.subarray(t, n)).toString("utf8") : y(e, t, n) : (e, t, n) => n - t > 64 ? i.decode(e.subarray(t, n)) : y(e, t, n),
                d = r ? e => e.length > 64 ? globalThis.Buffer.from(e) : g(e) : e => e.length > 64 ? o.encode(e) : g(e),
                u = r ? (e, t, n) => s(e) ? new Uint8Array(e.subarray(t, n)) : e.slice(t, n) : (e, t, n) => e.slice(t, n),
                l = r ? (e, t) => (e = e.map((e => e instanceof Uint8Array ? e : globalThis.Buffer.from(e))), a(globalThis.Buffer.concat(e, t))) : (e, t) => {
                    const n = new Uint8Array(t);
                    let r = 0;
                    for (let i of e) r + i.length > n.length && (i = i.subarray(0, n.length - r)), n.set(i, r), r += i.length;
                    return n
                },
                p = r ? e => globalThis.Buffer.allocUnsafe(e) : e => new Uint8Array(e),
                m = r ? e => "string" == typeof e ? e : globalThis.Buffer.from(f(e)).toString("hex") : e => "string" == typeof e ? e : Array.prototype.reduce.call(f(e), ((e, t) => `${e}${t.toString(16).padStart(2,"0")}`), ""),
                h = r ? e => e instanceof Uint8Array ? e : globalThis.Buffer.from(e, "hex") : e => e instanceof Uint8Array ? e : e.length ? new Uint8Array(e.split("").map(((e, t, n) => t % 2 == 0 ? `0x${e}${n[t+1]}` : "")).filter(Boolean).map((e => parseInt(e, 16)))) : new Uint8Array(0);

            function f(e) {
                if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                if (e instanceof ArrayBuffer) return new Uint8Array(e);
                if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                throw new Error("Unknown type, must be binary type")
            }

            function g(e, t = 1 / 0) {
                let n;
                const r = e.length;
                let i = null;
                const o = [];
                for (let s = 0; s < r; ++s) {
                    if (n = e.charCodeAt(s), n > 55295 && n < 57344) {
                        if (!i) {
                            if (n > 56319) {
                                (t -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            if (s + 1 === r) {
                                (t -= 3) > -1 && o.push(239, 191, 189);
                                continue
                            }
                            i = n;
                            continue
                        }
                        if (n < 56320) {
                            (t -= 3) > -1 && o.push(239, 191, 189), i = n;
                            continue
                        }
                        n = 65536 + (i - 55296 << 10 | n - 56320)
                    } else i && (t -= 3) > -1 && o.push(239, 191, 189);
                    if (i = null, n < 128) {
                        if ((t -= 1) < 0) break;
                        o.push(n)
                    } else if (n < 2048) {
                        if ((t -= 2) < 0) break;
                        o.push(n >> 6 | 192, 63 & n | 128)
                    } else if (n < 65536) {
                        if ((t -= 3) < 0) break;
                        o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128)
                    } else {
                        if (!(n < 1114112)) throw new Error("Invalid code point");
                        if ((t -= 4) < 0) break;
                        o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128)
                    }
                }
                return o
            }

            function y(e, t, n) {
                const r = [];
                for (; t < n;) {
                    const i = e[t];
                    let o = null,
                        s = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;
                    if (t + s <= n) {
                        let n, r, a, c;
                        switch (s) {
                            case 1:
                                i < 128 && (o = i);
                                break;
                            case 2:
                                n = e[t + 1], 128 == (192 & n) && (c = (31 & i) << 6 | 63 & n, c > 127 && (o = c));
                                break;
                            case 3:
                                n = e[t + 1], r = e[t + 2], 128 == (192 & n) && 128 == (192 & r) && (c = (15 & i) << 12 | (63 & n) << 6 | 63 & r, c > 2047 && (c < 55296 || c > 57343) && (o = c));
                                break;
                            case 4:
                                n = e[t + 1], r = e[t + 2], a = e[t + 3], 128 == (192 & n) && 128 == (192 & r) && 128 == (192 & a) && (c = (15 & i) << 18 | (63 & n) << 12 | (63 & r) << 6 | 63 & a, c > 65535 && c < 1114112 && (o = c))
                        }
                    }
                    null === o ? (o = 65533, s = 1) : o > 65535 && (o -= 65536, r.push(o >>> 10 & 1023 | 55296), o = 56320 | 1023 & o), r.push(o), t += s
                }
                return _(r)
            }

            function _(e) {
                const t = e.length;
                if (t <= 4096) return String.fromCharCode.apply(String, e);
                let n = "",
                    r = 0;
                for (; r < t;) n += String.fromCharCode.apply(String, e.slice(r, r += 4096));
                return n
            }
            t.alloc = p, t.asU8A = a, t.compare = function(e, t) {
                if (s(e) && s(t)) return e.compare(t);
                for (let n = 0; n < e.length; n++)
                    if (e[n] !== t[n]) return e[n] < t[n] ? -1 : 1;
                return 0
            }, t.concat = l, t.decodeCodePointsArray = _, t.fromArray = e => Uint8Array.from(e), t.fromHex = h, t.fromString = d, t.slice = u, t.toHex = m, t.toString = c, t.useBuffer = r
        },
        Q40w: function(e, t, n) {
            "use strict";
            (function(e) {
                var r = n("Udxx"),
                    i = n("mg0b"),
                    o = n("9krk");

                function s() {
                    return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
                }

                function a(e, t) {
                    if (s() < t) throw new RangeError("Invalid typed array length");
                    return c.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = c.prototype : (null === e && (e = new c(t)), e.length = t), e
                }

                function c(e, t, n) {
                    if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c)) return new c(e, t, n);
                    if ("number" == typeof e) {
                        if ("string" == typeof t) throw new Error("If encoding is specified then the first argument must be a string");
                        return l(this, e)
                    }
                    return d(this, e, t, n)
                }

                function d(e, t, n, r) {
                    if ("number" == typeof t) throw new TypeError('"value" argument must not be a number');
                    return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, n, r) {
                        if (t.byteLength, n < 0 || t.byteLength < n) throw new RangeError("'offset' is out of bounds");
                        if (t.byteLength < n + (r || 0)) throw new RangeError("'length' is out of bounds");
                        t = void 0 === n && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, n) : new Uint8Array(t, n, r);
                        c.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = c.prototype : e = p(e, t);
                        return e
                    }(e, t, n, r) : "string" == typeof t ? function(e, t, n) {
                        "string" == typeof n && "" !== n || (n = "utf8");
                        if (!c.isEncoding(n)) throw new TypeError('"encoding" must be a valid string encoding');
                        var r = 0 | h(t, n),
                            i = (e = a(e, r)).write(t, n);
                        i !== r && (e = e.slice(0, i));
                        return e
                    }(e, t, n) : function(e, t) {
                        if (c.isBuffer(t)) {
                            var n = 0 | m(t.length);
                            return 0 === (e = a(e, n)).length || t.copy(e, 0, 0, n), e
                        }
                        if (t) {
                            if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length" in t) return "number" != typeof t.length || (r = t.length) != r ? a(e, 0) : p(e, t);
                            if ("Buffer" === t.type && o(t.data)) return p(e, t.data)
                        }
                        var r;
                        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                    }(e, t)
                }

                function u(e) {
                    if ("number" != typeof e) throw new TypeError('"size" argument must be a number');
                    if (e < 0) throw new RangeError('"size" argument must not be negative')
                }

                function l(e, t) {
                    if (u(t), e = a(e, t < 0 ? 0 : 0 | m(t)), !c.TYPED_ARRAY_SUPPORT)
                        for (var n = 0; n < t; ++n) e[n] = 0;
                    return e
                }

                function p(e, t) {
                    var n = t.length < 0 ? 0 : 0 | m(t.length);
                    e = a(e, n);
                    for (var r = 0; r < n; r += 1) e[r] = 255 & t[r];
                    return e
                }

                function m(e) {
                    if (e >= s()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + s().toString(16) + " bytes");
                    return 0 | e
                }

                function h(e, t) {
                    if (c.isBuffer(e)) return e.length;
                    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer)) return e.byteLength;
                    "string" != typeof e && (e = "" + e);
                    var n = e.length;
                    if (0 === n) return 0;
                    for (var r = !1;;) switch (t) {
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return n;
                        case "utf8":
                        case "utf-8":
                        case void 0:
                            return G(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return 2 * n;
                        case "hex":
                            return n >>> 1;
                        case "base64":
                            return q(e).length;
                        default:
                            if (r) return G(e).length;
                            t = ("" + t).toLowerCase(), r = !0
                    }
                }

                function f(e, t, n) {
                    var r = !1;
                    if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
                    if ((void 0 === n || n > this.length) && (n = this.length), n <= 0) return "";
                    if ((n >>>= 0) <= (t >>>= 0)) return "";
                    for (e || (e = "utf8");;) switch (e) {
                        case "hex":
                            return M(this, t, n);
                        case "utf8":
                        case "utf-8":
                            return P(this, t, n);
                        case "ascii":
                            return A(this, t, n);
                        case "latin1":
                        case "binary":
                            return R(this, t, n);
                        case "base64":
                            return w(this, t, n);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return N(this, t, n);
                        default:
                            if (r) throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(), r = !0
                    }
                }

                function g(e, t, n) {
                    var r = e[t];
                    e[t] = e[n], e[n] = r
                }

                function y(e, t, n, r, i) {
                    if (0 === e.length) return -1;
                    if ("string" == typeof n ? (r = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), n = +n, isNaN(n) && (n = i ? 0 : e.length - 1), n < 0 && (n = e.length + n), n >= e.length) {
                        if (i) return -1;
                        n = e.length - 1
                    } else if (n < 0) {
                        if (!i) return -1;
                        n = 0
                    }
                    if ("string" == typeof t && (t = c.from(t, r)), c.isBuffer(t)) return 0 === t.length ? -1 : _(e, t, n, r, i);
                    if ("number" == typeof t) return t &= 255, c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(e, t, n) : Uint8Array.prototype.lastIndexOf.call(e, t, n) : _(e, [t], n, r, i);
                    throw new TypeError("val must be string, number or Buffer")
                }

                function _(e, t, n, r, i) {
                    var o, s = 1,
                        a = e.length,
                        c = t.length;
                    if (void 0 !== r && ("ucs2" === (r = String(r).toLowerCase()) || "ucs-2" === r || "utf16le" === r || "utf-16le" === r)) {
                        if (e.length < 2 || t.length < 2) return -1;
                        s = 2, a /= 2, c /= 2, n /= 2
                    }

                    function d(e, t) {
                        return 1 === s ? e[t] : e.readUInt16BE(t * s)
                    }
                    if (i) {
                        var u = -1;
                        for (o = n; o < a; o++)
                            if (d(e, o) === d(t, -1 === u ? 0 : o - u)) {
                                if (-1 === u && (u = o), o - u + 1 === c) return u * s
                            } else -1 !== u && (o -= o - u), u = -1
                    } else
                        for (n + c > a && (n = a - c), o = n; o >= 0; o--) {
                            for (var l = !0, p = 0; p < c; p++)
                                if (d(e, o + p) !== d(t, p)) {
                                    l = !1;
                                    break
                                }
                            if (l) return o
                        }
                    return -1
                }

                function E(e, t, n, r) {
                    n = Number(n) || 0;
                    var i = e.length - n;
                    r ? (r = Number(r)) > i && (r = i) : r = i;
                    var o = t.length;
                    if (o % 2 != 0) throw new TypeError("Invalid hex string");
                    r > o / 2 && (r = o / 2);
                    for (var s = 0; s < r; ++s) {
                        var a = parseInt(t.substr(2 * s, 2), 16);
                        if (isNaN(a)) return s;
                        e[n + s] = a
                    }
                    return s
                }

                function b(e, t, n, r) {
                    return H(G(t, e.length - n), e, n, r)
                }

                function I(e, t, n, r) {
                    return H(function(e) {
                        for (var t = [], n = 0; n < e.length; ++n) t.push(255 & e.charCodeAt(n));
                        return t
                    }(t), e, n, r)
                }

                function v(e, t, n, r) {
                    return I(e, t, n, r)
                }

                function T(e, t, n, r) {
                    return H(q(t), e, n, r)
                }

                function O(e, t, n, r) {
                    return H(function(e, t) {
                        for (var n, r, i, o = [], s = 0; s < e.length && !((t -= 2) < 0); ++s) r = (n = e.charCodeAt(s)) >> 8, i = n % 256, o.push(i), o.push(r);
                        return o
                    }(t, e.length - n), e, n, r)
                }

                function w(e, t, n) {
                    return 0 === t && n === e.length ? r.fromByteArray(e) : r.fromByteArray(e.slice(t, n))
                }

                function P(e, t, n) {
                    n = Math.min(e.length, n);
                    for (var r = [], i = t; i < n;) {
                        var o, s, a, c, d = e[i],
                            u = null,
                            l = d > 239 ? 4 : d > 223 ? 3 : d > 191 ? 2 : 1;
                        if (i + l <= n) switch (l) {
                            case 1:
                                d < 128 && (u = d);
                                break;
                            case 2:
                                128 == (192 & (o = e[i + 1])) && (c = (31 & d) << 6 | 63 & o) > 127 && (u = c);
                                break;
                            case 3:
                                o = e[i + 1], s = e[i + 2], 128 == (192 & o) && 128 == (192 & s) && (c = (15 & d) << 12 | (63 & o) << 6 | 63 & s) > 2047 && (c < 55296 || c > 57343) && (u = c);
                                break;
                            case 4:
                                o = e[i + 1], s = e[i + 2], a = e[i + 3], 128 == (192 & o) && 128 == (192 & s) && 128 == (192 & a) && (c = (15 & d) << 18 | (63 & o) << 12 | (63 & s) << 6 | 63 & a) > 65535 && c < 1114112 && (u = c)
                        }
                        null === u ? (u = 65533, l = 1) : u > 65535 && (u -= 65536, r.push(u >>> 10 & 1023 | 55296), u = 56320 | 1023 & u), r.push(u), i += l
                    }
                    return function(e) {
                        var t = e.length;
                        if (t <= S) return String.fromCharCode.apply(String, e);
                        var n = "",
                            r = 0;
                        for (; r < t;) n += String.fromCharCode.apply(String, e.slice(r, r += S));
                        return n
                    }(r)
                }
                t.Buffer = c, t.SlowBuffer = function(e) {
                    +e != e && (e = 0);
                    return c.alloc(+e)
                }, t.INSPECT_MAX_BYTES = 50, c.TYPED_ARRAY_SUPPORT = void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function() {
                    try {
                        var e = new Uint8Array(1);
                        return e.__proto__ = {
                            __proto__: Uint8Array.prototype,
                            foo: function() {
                                return 42
                            }
                        }, 42 === e.foo() && "function" == typeof e.subarray && 0 === e.subarray(1, 1).byteLength
                    } catch (t) {
                        return !1
                    }
                }(), t.kMaxLength = s(), c.poolSize = 8192, c._augment = function(e) {
                    return e.__proto__ = c.prototype, e
                }, c.from = function(e, t, n) {
                    return d(null, e, t, n)
                }, c.TYPED_ARRAY_SUPPORT && (c.prototype.__proto__ = Uint8Array.prototype, c.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {
                    value: null,
                    configurable: !0
                })), c.alloc = function(e, t, n) {
                    return function(e, t, n, r) {
                        return u(t), t <= 0 ? a(e, t) : void 0 !== n ? "string" == typeof r ? a(e, t).fill(n, r) : a(e, t).fill(n) : a(e, t)
                    }(null, e, t, n)
                }, c.allocUnsafe = function(e) {
                    return l(null, e)
                }, c.allocUnsafeSlow = function(e) {
                    return l(null, e)
                }, c.isBuffer = function(e) {
                    return !(null == e || !e._isBuffer)
                }, c.compare = function(e, t) {
                    if (!c.isBuffer(e) || !c.isBuffer(t)) throw new TypeError("Arguments must be Buffers");
                    if (e === t) return 0;
                    for (var n = e.length, r = t.length, i = 0, o = Math.min(n, r); i < o; ++i)
                        if (e[i] !== t[i]) {
                            n = e[i], r = t[i];
                            break
                        }
                    return n < r ? -1 : r < n ? 1 : 0
                }, c.isEncoding = function(e) {
                    switch (String(e).toLowerCase()) {
                        case "hex":
                        case "utf8":
                        case "utf-8":
                        case "ascii":
                        case "latin1":
                        case "binary":
                        case "base64":
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return !0;
                        default:
                            return !1
                    }
                }, c.concat = function(e, t) {
                    if (!o(e)) throw new TypeError('"list" argument must be an Array of Buffers');
                    if (0 === e.length) return c.alloc(0);
                    var n;
                    if (void 0 === t)
                        for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
                    var r = c.allocUnsafe(t),
                        i = 0;
                    for (n = 0; n < e.length; ++n) {
                        var s = e[n];
                        if (!c.isBuffer(s)) throw new TypeError('"list" argument must be an Array of Buffers');
                        s.copy(r, i), i += s.length
                    }
                    return r
                }, c.byteLength = h, c.prototype._isBuffer = !0, c.prototype.swap16 = function() {
                    var e = this.length;
                    if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                    for (var t = 0; t < e; t += 2) g(this, t, t + 1);
                    return this
                }, c.prototype.swap32 = function() {
                    var e = this.length;
                    if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                    for (var t = 0; t < e; t += 4) g(this, t, t + 3), g(this, t + 1, t + 2);
                    return this
                }, c.prototype.swap64 = function() {
                    var e = this.length;
                    if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                    for (var t = 0; t < e; t += 8) g(this, t, t + 7), g(this, t + 1, t + 6), g(this, t + 2, t + 5), g(this, t + 3, t + 4);
                    return this
                }, c.prototype.toString = function() {
                    var e = 0 | this.length;
                    return 0 === e ? "" : 0 === arguments.length ? P(this, 0, e) : f.apply(this, arguments)
                }, c.prototype.equals = function(e) {
                    if (!c.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                    return this === e || 0 === c.compare(this, e)
                }, c.prototype.inspect = function() {
                    var e = "",
                        n = t.INSPECT_MAX_BYTES;
                    return this.length > 0 && (e = this.toString("hex", 0, n).match(/.{2}/g).join(" "), this.length > n && (e += " ... ")), "<Buffer " + e + ">"
                }, c.prototype.compare = function(e, t, n, r, i) {
                    if (!c.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                    if (void 0 === t && (t = 0), void 0 === n && (n = e ? e.length : 0), void 0 === r && (r = 0), void 0 === i && (i = this.length), t < 0 || n > e.length || r < 0 || i > this.length) throw new RangeError("out of range index");
                    if (r >= i && t >= n) return 0;
                    if (r >= i) return -1;
                    if (t >= n) return 1;
                    if (this === e) return 0;
                    for (var o = (i >>>= 0) - (r >>>= 0), s = (n >>>= 0) - (t >>>= 0), a = Math.min(o, s), d = this.slice(r, i), u = e.slice(t, n), l = 0; l < a; ++l)
                        if (d[l] !== u[l]) {
                            o = d[l], s = u[l];
                            break
                        }
                    return o < s ? -1 : s < o ? 1 : 0
                }, c.prototype.includes = function(e, t, n) {
                    return -1 !== this.indexOf(e, t, n)
                }, c.prototype.indexOf = function(e, t, n) {
                    return y(this, e, t, n, !0)
                }, c.prototype.lastIndexOf = function(e, t, n) {
                    return y(this, e, t, n, !1)
                }, c.prototype.write = function(e, t, n, r) {
                    if (void 0 === t) r = "utf8", n = this.length, t = 0;
                    else if (void 0 === n && "string" == typeof t) r = t, n = this.length, t = 0;
                    else {
                        if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                        t |= 0, isFinite(n) ? (n |= 0, void 0 === r && (r = "utf8")) : (r = n, n = void 0)
                    }
                    var i = this.length - t;
                    if ((void 0 === n || n > i) && (n = i), e.length > 0 && (n < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                    r || (r = "utf8");
                    for (var o = !1;;) switch (r) {
                        case "hex":
                            return E(this, e, t, n);
                        case "utf8":
                        case "utf-8":
                            return b(this, e, t, n);
                        case "ascii":
                            return I(this, e, t, n);
                        case "latin1":
                        case "binary":
                            return v(this, e, t, n);
                        case "base64":
                            return T(this, e, t, n);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return O(this, e, t, n);
                        default:
                            if (o) throw new TypeError("Unknown encoding: " + r);
                            r = ("" + r).toLowerCase(), o = !0
                    }
                }, c.prototype.toJSON = function() {
                    return {
                        type: "Buffer",
                        data: Array.prototype.slice.call(this._arr || this, 0)
                    }
                };
                var S = 4096;

                function A(e, t, n) {
                    var r = "";
                    n = Math.min(e.length, n);
                    for (var i = t; i < n; ++i) r += String.fromCharCode(127 & e[i]);
                    return r
                }

                function R(e, t, n) {
                    var r = "";
                    n = Math.min(e.length, n);
                    for (var i = t; i < n; ++i) r += String.fromCharCode(e[i]);
                    return r
                }

                function M(e, t, n) {
                    var r = e.length;
                    (!t || t < 0) && (t = 0), (!n || n < 0 || n > r) && (n = r);
                    for (var i = "", o = t; o < n; ++o) i += F(e[o]);
                    return i
                }

                function N(e, t, n) {
                    for (var r = e.slice(t, n), i = "", o = 0; o < r.length; o += 2) i += String.fromCharCode(r[o] + 256 * r[o + 1]);
                    return i
                }

                function C(e, t, n) {
                    if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
                    if (e + t > n) throw new RangeError("Trying to access beyond buffer length")
                }

                function D(e, t, n, r, i, o) {
                    if (!c.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (t > i || t < o) throw new RangeError('"value" argument is out of bounds');
                    if (n + r > e.length) throw new RangeError("Index out of range")
                }

                function L(e, t, n, r) {
                    t < 0 && (t = 65535 + t + 1);
                    for (var i = 0, o = Math.min(e.length - n, 2); i < o; ++i) e[n + i] = (t & 255 << 8 * (r ? i : 1 - i)) >>> 8 * (r ? i : 1 - i)
                }

                function U(e, t, n, r) {
                    t < 0 && (t = 4294967295 + t + 1);
                    for (var i = 0, o = Math.min(e.length - n, 4); i < o; ++i) e[n + i] = t >>> 8 * (r ? i : 3 - i) & 255
                }

                function x(e, t, n, r, i, o) {
                    if (n + r > e.length) throw new RangeError("Index out of range");
                    if (n < 0) throw new RangeError("Index out of range")
                }

                function k(e, t, n, r, o) {
                    return o || x(e, 0, n, 4), i.write(e, t, n, r, 23, 4), n + 4
                }

                function B(e, t, n, r, o) {
                    return o || x(e, 0, n, 8), i.write(e, t, n, r, 52, 8), n + 8
                }
                c.prototype.slice = function(e, t) {
                    var n, r = this.length;
                    if ((e = ~~e) < 0 ? (e += r) < 0 && (e = 0) : e > r && (e = r), (t = void 0 === t ? r : ~~t) < 0 ? (t += r) < 0 && (t = 0) : t > r && (t = r), t < e && (t = e), c.TYPED_ARRAY_SUPPORT)(n = this.subarray(e, t)).__proto__ = c.prototype;
                    else {
                        var i = t - e;
                        n = new c(i, void 0);
                        for (var o = 0; o < i; ++o) n[o] = this[o + e]
                    }
                    return n
                }, c.prototype.readUIntLE = function(e, t, n) {
                    e |= 0, t |= 0, n || C(e, t, this.length);
                    for (var r = this[e], i = 1, o = 0; ++o < t && (i *= 256);) r += this[e + o] * i;
                    return r
                }, c.prototype.readUIntBE = function(e, t, n) {
                    e |= 0, t |= 0, n || C(e, t, this.length);
                    for (var r = this[e + --t], i = 1; t > 0 && (i *= 256);) r += this[e + --t] * i;
                    return r
                }, c.prototype.readUInt8 = function(e, t) {
                    return t || C(e, 1, this.length), this[e]
                }, c.prototype.readUInt16LE = function(e, t) {
                    return t || C(e, 2, this.length), this[e] | this[e + 1] << 8
                }, c.prototype.readUInt16BE = function(e, t) {
                    return t || C(e, 2, this.length), this[e] << 8 | this[e + 1]
                }, c.prototype.readUInt32LE = function(e, t) {
                    return t || C(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
                }, c.prototype.readUInt32BE = function(e, t) {
                    return t || C(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
                }, c.prototype.readIntLE = function(e, t, n) {
                    e |= 0, t |= 0, n || C(e, t, this.length);
                    for (var r = this[e], i = 1, o = 0; ++o < t && (i *= 256);) r += this[e + o] * i;
                    return r >= (i *= 128) && (r -= Math.pow(2, 8 * t)), r
                }, c.prototype.readIntBE = function(e, t, n) {
                    e |= 0, t |= 0, n || C(e, t, this.length);
                    for (var r = t, i = 1, o = this[e + --r]; r > 0 && (i *= 256);) o += this[e + --r] * i;
                    return o >= (i *= 128) && (o -= Math.pow(2, 8 * t)), o
                }, c.prototype.readInt8 = function(e, t) {
                    return t || C(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
                }, c.prototype.readInt16LE = function(e, t) {
                    t || C(e, 2, this.length);
                    var n = this[e] | this[e + 1] << 8;
                    return 32768 & n ? 4294901760 | n : n
                }, c.prototype.readInt16BE = function(e, t) {
                    t || C(e, 2, this.length);
                    var n = this[e + 1] | this[e] << 8;
                    return 32768 & n ? 4294901760 | n : n
                }, c.prototype.readInt32LE = function(e, t) {
                    return t || C(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
                }, c.prototype.readInt32BE = function(e, t) {
                    return t || C(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
                }, c.prototype.readFloatLE = function(e, t) {
                    return t || C(e, 4, this.length), i.read(this, e, !0, 23, 4)
                }, c.prototype.readFloatBE = function(e, t) {
                    return t || C(e, 4, this.length), i.read(this, e, !1, 23, 4)
                }, c.prototype.readDoubleLE = function(e, t) {
                    return t || C(e, 8, this.length), i.read(this, e, !0, 52, 8)
                }, c.prototype.readDoubleBE = function(e, t) {
                    return t || C(e, 8, this.length), i.read(this, e, !1, 52, 8)
                }, c.prototype.writeUIntLE = function(e, t, n, r) {
                    (e = +e, t |= 0, n |= 0, r) || D(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
                    var i = 1,
                        o = 0;
                    for (this[t] = 255 & e; ++o < n && (i *= 256);) this[t + o] = e / i & 255;
                    return t + n
                }, c.prototype.writeUIntBE = function(e, t, n, r) {
                    (e = +e, t |= 0, n |= 0, r) || D(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
                    var i = n - 1,
                        o = 1;
                    for (this[t + i] = 255 & e; --i >= 0 && (o *= 256);) this[t + i] = e / o & 255;
                    return t + n
                }, c.prototype.writeUInt8 = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 1, 255, 0), c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), this[t] = 255 & e, t + 1
                }, c.prototype.writeUInt16LE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : L(this, e, t, !0), t + 2
                }, c.prototype.writeUInt16BE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 2, 65535, 0), c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : L(this, e, t, !1), t + 2
                }, c.prototype.writeUInt32LE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e) : U(this, e, t, !0), t + 4
                }, c.prototype.writeUInt32BE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 4, 4294967295, 0), c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : U(this, e, t, !1), t + 4
                }, c.prototype.writeIntLE = function(e, t, n, r) {
                    if (e = +e, t |= 0, !r) {
                        var i = Math.pow(2, 8 * n - 1);
                        D(this, e, t, n, i - 1, -i)
                    }
                    var o = 0,
                        s = 1,
                        a = 0;
                    for (this[t] = 255 & e; ++o < n && (s *= 256);) e < 0 && 0 === a && 0 !== this[t + o - 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;
                    return t + n
                }, c.prototype.writeIntBE = function(e, t, n, r) {
                    if (e = +e, t |= 0, !r) {
                        var i = Math.pow(2, 8 * n - 1);
                        D(this, e, t, n, i - 1, -i)
                    }
                    var o = n - 1,
                        s = 1,
                        a = 0;
                    for (this[t + o] = 255 & e; --o >= 0 && (s *= 256);) e < 0 && 0 === a && 0 !== this[t + o + 1] && (a = 1), this[t + o] = (e / s >> 0) - a & 255;
                    return t + n
                }, c.prototype.writeInt8 = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 1, 127, -128), c.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
                }, c.prototype.writeInt16LE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8) : L(this, e, t, !0), t + 2
                }, c.prototype.writeInt16BE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 2, 32767, -32768), c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8, this[t + 1] = 255 & e) : L(this, e, t, !1), t + 2
                }, c.prototype.writeInt32LE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 4, 2147483647, -2147483648), c.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24) : U(this, e, t, !0), t + 4
                }, c.prototype.writeInt32BE = function(e, t, n) {
                    return e = +e, t |= 0, n || D(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), c.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e) : U(this, e, t, !1), t + 4
                }, c.prototype.writeFloatLE = function(e, t, n) {
                    return k(this, e, t, !0, n)
                }, c.prototype.writeFloatBE = function(e, t, n) {
                    return k(this, e, t, !1, n)
                }, c.prototype.writeDoubleLE = function(e, t, n) {
                    return B(this, e, t, !0, n)
                }, c.prototype.writeDoubleBE = function(e, t, n) {
                    return B(this, e, t, !1, n)
                }, c.prototype.copy = function(e, t, n, r) {
                    if (n || (n = 0), r || 0 === r || (r = this.length), t >= e.length && (t = e.length), t || (t = 0), r > 0 && r < n && (r = n), r === n) return 0;
                    if (0 === e.length || 0 === this.length) return 0;
                    if (t < 0) throw new RangeError("targetStart out of bounds");
                    if (n < 0 || n >= this.length) throw new RangeError("sourceStart out of bounds");
                    if (r < 0) throw new RangeError("sourceEnd out of bounds");
                    r > this.length && (r = this.length), e.length - t < r - n && (r = e.length - t + n);
                    var i, o = r - n;
                    if (this === e && n < t && t < r)
                        for (i = o - 1; i >= 0; --i) e[i + t] = this[i + n];
                    else if (o < 1e3 || !c.TYPED_ARRAY_SUPPORT)
                        for (i = 0; i < o; ++i) e[i + t] = this[i + n];
                    else Uint8Array.prototype.set.call(e, this.subarray(n, n + o), t);
                    return o
                }, c.prototype.fill = function(e, t, n, r) {
                    if ("string" == typeof e) {
                        if ("string" == typeof t ? (r = t, t = 0, n = this.length) : "string" == typeof n && (r = n, n = this.length), 1 === e.length) {
                            var i = e.charCodeAt(0);
                            i < 256 && (e = i)
                        }
                        if (void 0 !== r && "string" != typeof r) throw new TypeError("encoding must be a string");
                        if ("string" == typeof r && !c.isEncoding(r)) throw new TypeError("Unknown encoding: " + r)
                    } else "number" == typeof e && (e &= 255);
                    if (t < 0 || this.length < t || this.length < n) throw new RangeError("Out of range index");
                    if (n <= t) return this;
                    var o;
                    if (t >>>= 0, n = void 0 === n ? this.length : n >>> 0, e || (e = 0), "number" == typeof e)
                        for (o = t; o < n; ++o) this[o] = e;
                    else {
                        var s = c.isBuffer(e) ? e : G(new c(e, r).toString()),
                            a = s.length;
                        for (o = 0; o < n - t; ++o) this[o + t] = s[o % a]
                    }
                    return this
                };
                var j = /[^+\/0-9A-Za-z-_]/g;

                function F(e) {
                    return e < 16 ? "0" + e.toString(16) : e.toString(16)
                }

                function G(e, t) {
                    var n;
                    t = t || 1 / 0;
                    for (var r = e.length, i = null, o = [], s = 0; s < r; ++s) {
                        if ((n = e.charCodeAt(s)) > 55295 && n < 57344) {
                            if (!i) {
                                if (n > 56319) {
                                    (t -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                if (s + 1 === r) {
                                    (t -= 3) > -1 && o.push(239, 191, 189);
                                    continue
                                }
                                i = n;
                                continue
                            }
                            if (n < 56320) {
                                (t -= 3) > -1 && o.push(239, 191, 189), i = n;
                                continue
                            }
                            n = 65536 + (i - 55296 << 10 | n - 56320)
                        } else i && (t -= 3) > -1 && o.push(239, 191, 189);
                        if (i = null, n < 128) {
                            if ((t -= 1) < 0) break;
                            o.push(n)
                        } else if (n < 2048) {
                            if ((t -= 2) < 0) break;
                            o.push(n >> 6 | 192, 63 & n | 128)
                        } else if (n < 65536) {
                            if ((t -= 3) < 0) break;
                            o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128)
                        } else {
                            if (!(n < 1114112)) throw new Error("Invalid code point");
                            if ((t -= 4) < 0) break;
                            o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128)
                        }
                    }
                    return o
                }

                function q(e) {
                    return r.toByteArray(function(e) {
                        if ((e = function(e) {
                                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
                            }(e).replace(j, "")).length < 2) return "";
                        for (; e.length % 4 != 0;) e += "=";
                        return e
                    }(e))
                }

                function H(e, t, n, r) {
                    for (var i = 0; i < r && !(i + n >= t.length || i >= e.length); ++i) t[i + n] = e[i];
                    return i
                }
            }).call(this, n("kjmW"))
        },
        QYBB: function(e, t, n) {
            var r = n("wbIY"),
                i = n("d7IX"),
                o = n("b42z"),
                s = n("cWgI"),
                a = Object.defineProperty;
            t.f = r ? a : function(e, t, n) {
                if (o(e), t = s(t, !0), o(n), i) try {
                    return a(e, t, n)
                } catch (r) {}
                if ("get" in n || "set" in n) throw TypeError("Accessors not supported");
                return "value" in n && (e[t] = n.value), e
            }
        },
        QkVE: function(e, t, n) {
            var r = n("EpBk");
            e.exports = function(e, t) {
                var n = e.__data__;
                return r(t) ? n["string" == typeof t ? "string" : "hash"] : n.map
            }
        },
        RLqH: function(e, t, n) {
            var r = n("wbIY"),
                i = n("cEPT"),
                o = n("LGyv"),
                s = n("pCEo"),
                a = n("cWgI"),
                c = n("eOcF"),
                d = n("d7IX"),
                u = Object.getOwnPropertyDescriptor;
            t.f = r ? u : function(e, t) {
                if (e = s(e), t = a(t, !0), d) try {
                    return u(e, t)
                } catch (n) {}
                if (c(e, t)) return o(!i.f.call(e, t), e[t])
            }
        },
        Ro2z: function(e, t, n) {},
        S6kV: function(e, t, n) {
            var r, i, o;
            e.exports = (o = n("Ib8C"), n("OLod"), o.mode.OFB = (r = o.lib.BlockCipherMode.extend(), i = r.Encryptor = r.extend({
                processBlock: function(e, t) {
                    var n = this._cipher,
                        r = n.blockSize,
                        i = this._iv,
                        o = this._keystream;
                    i && (o = this._keystream = i.slice(0), this._iv = void 0), n.encryptBlock(o, 0);
                    for (var s = 0; s < r; s++) e[t + s] ^= o[s]
                }
            }), r.Decryptor = i, r), o.mode.OFB)
        },
        S8fy: function(e, t, n) {
            "use strict";
            var r;
            n.d(t, "a", (function() {
                    return A
                })), n.d(t, "c", (function() {
                    return R
                })), n.d(t, "d", (function() {
                    return M
                })), n.d(t, "f", (function() {
                    return N
                })), n.d(t, "e", (function() {
                    return C
                })), n.d(t, "b", (function() {
                    return S
                })),
                function(e) {
                    e[e.Transient = 0] = "Transient", e[e.Singleton = 1] = "Singleton", e[e.ResolutionScoped = 2] = "ResolutionScoped", e[e.ContainerScoped = 3] = "ContainerScoped"
                }(r || (r = {}));
            var i = r,
                o = n("mrSG"),
                s = "injectionTokens";

            function a(e) {
                var t = Reflect.getMetadata("design:paramtypes", e) || [],
                    n = Reflect.getOwnMetadata(s, e) || {};
                return Object.keys(n).forEach((function(e) {
                    t[+e] = n[e]
                })), t
            }

            function c(e, t) {
                return function(n, r, i) {
                    var o = Reflect.getOwnMetadata(s, n) || {};
                    o[i] = t ? {
                        token: e,
                        transform: t.transformToken,
                        transformArgs: t.args || []
                    } : e, Reflect.defineMetadata(s, o, n)
                }
            }

            function d(e) {
                return !!e.useClass
            }

            function u(e) {
                return !!e.useFactory
            }
            var l = function() {
                function e(e) {
                    this.wrap = e, this.reflectMethods = ["get", "getPrototypeOf", "setPrototypeOf", "getOwnPropertyDescriptor", "defineProperty", "has", "set", "deleteProperty", "apply", "construct", "ownKeys"]
                }
                return e.prototype.createProxy = function(e) {
                    var t, n = this,
                        r = !1;
                    return new Proxy({}, this.createHandler((function() {
                        return r || (t = e(n.wrap()), r = !0), t
                    })))
                }, e.prototype.createHandler = function(e) {
                    var t = {};
                    return this.reflectMethods.forEach((function(n) {
                        t[n] = function() {
                            for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];
                            t[0] = e();
                            var i = Reflect[n];
                            return i.apply(void 0, Object(o.e)(t))
                        }
                    })), t
                }, e
            }();

            function p(e) {
                return "string" == typeof e || "symbol" == typeof e
            }

            function m(e) {
                return "object" == typeof e && "token" in e && "multiple" in e
            }

            function h(e) {
                return "object" == typeof e && "token" in e && "transform" in e
            }

            function f(e) {
                return !!e.useToken
            }

            function g(e) {
                return null != e.useValue
            }
            var y = function() {
                    function e() {
                        this._registryMap = new Map
                    }
                    return e.prototype.entries = function() {
                        return this._registryMap.entries()
                    }, e.prototype.getAll = function(e) {
                        return this.ensure(e), this._registryMap.get(e)
                    }, e.prototype.get = function(e) {
                        this.ensure(e);
                        var t = this._registryMap.get(e);
                        return t[t.length - 1] || null
                    }, e.prototype.set = function(e, t) {
                        this.ensure(e), this._registryMap.get(e).push(t)
                    }, e.prototype.setAll = function(e, t) {
                        this._registryMap.set(e, t)
                    }, e.prototype.has = function(e) {
                        return this.ensure(e), this._registryMap.get(e).length > 0
                    }, e.prototype.clear = function() {
                        this._registryMap.clear()
                    }, e.prototype.ensure = function(e) {
                        this._registryMap.has(e) || this._registryMap.set(e, [])
                    }, e
                }(),
                _ = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Object(o.b)(t, e), t
                }(y),
                E = _,
                b = function() {
                    this.scopedResolutions = new Map
                };

            function I(e, t, n) {
                var r, i, s, a = Object(o.c)(e.toString().match(/constructor\(([\w, ]+)\)/) || [], 2)[1],
                    c = function(e, t) {
                        return null === e ? "at position #" + t : '"' + e.split(",")[t].trim() + '" at position #' + t
                    }(void 0 === a ? null : a, t);
                return r = "Cannot inject the dependency " + c + ' of "' + e.name + '" constructor. Reason:', i = n, void 0 === s && (s = "    "), Object(o.e)([r], i.message.split("\n").map((function(e) {
                    return s + e
                }))).join("\n")
            }
            var v = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Object(o.b)(t, e), t
                }(y),
                T = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return Object(o.b)(t, e), t
                }(y),
                O = function() {
                    this.preResolution = new v, this.postResolution = new T
                },
                w = new Map,
                P = function() {
                    function e(e) {
                        this.parent = e, this._registry = new E, this.interceptors = new O
                    }
                    return e.prototype.register = function(e, t, n) {
                        var r;
                        if (void 0 === n && (n = {
                                lifecycle: i.Transient
                            }), r = function(e) {
                                return d(e) || g(e) || f(e) || u(e)
                            }(t) ? t : {
                                useClass: t
                            }, f(r))
                            for (var s = [e], a = r; null != a;) {
                                var c = a.useToken;
                                if (s.includes(c)) throw new Error("Token registration cycle detected! " + Object(o.e)(s, [c]).join(" -> "));
                                s.push(c);
                                var l = this._registry.get(c);
                                a = l && f(l.provider) ? l.provider : null
                            }
                        if ((n.lifecycle === i.Singleton || n.lifecycle == i.ContainerScoped || n.lifecycle == i.ResolutionScoped) && (g(r) || u(r))) throw new Error('Cannot use lifecycle "' + i[n.lifecycle] + '" with ValueProviders or FactoryProviders');
                        return this._registry.set(e, {
                            provider: r,
                            options: n
                        }), this
                    }, e.prototype.registerType = function(e, t) {
                        return p(t) ? this.register(e, {
                            useToken: t
                        }) : this.register(e, {
                            useClass: t
                        })
                    }, e.prototype.registerInstance = function(e, t) {
                        return this.register(e, {
                            useValue: t
                        })
                    }, e.prototype.registerSingleton = function(e, t) {
                        if (p(e)) {
                            if (p(t)) return this.register(e, {
                                useToken: t
                            }, {
                                lifecycle: i.Singleton
                            });
                            if (t) return this.register(e, {
                                useClass: t
                            }, {
                                lifecycle: i.Singleton
                            });
                            throw new Error('Cannot register a type name as a singleton without a "to" token')
                        }
                        var n = e;
                        return t && !p(t) && (n = t), this.register(e, {
                            useClass: n
                        }, {
                            lifecycle: i.Singleton
                        })
                    }, e.prototype.resolve = function(e, t) {
                        void 0 === t && (t = new b);
                        var n = this.getRegistration(e);
                        if (!n && p(e)) throw new Error('Attempted to resolve unregistered dependency token: "' + e.toString() + '"');
                        if (this.executePreResolutionInterceptor(e, "Single"), n) {
                            var r = this.resolveRegistration(n, t);
                            return this.executePostResolutionInterceptor(e, r, "Single"), r
                        }
                        if (function(e) {
                                return "function" == typeof e || e instanceof l
                            }(e)) {
                            r = this.construct(e, t);
                            return this.executePostResolutionInterceptor(e, r, "Single"), r
                        }
                        throw new Error("Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.")
                    }, e.prototype.executePreResolutionInterceptor = function(e, t) {
                        var n, r;
                        if (this.interceptors.preResolution.has(e)) {
                            var i = [];
                            try {
                                for (var s = Object(o.f)(this.interceptors.preResolution.getAll(e)), a = s.next(); !a.done; a = s.next()) {
                                    var c = a.value;
                                    "Once" != c.options.frequency && i.push(c), c.callback(e, t)
                                }
                            } catch (d) {
                                n = {
                                    error: d
                                }
                            } finally {
                                try {
                                    a && !a.done && (r = s.return) && r.call(s)
                                } finally {
                                    if (n) throw n.error
                                }
                            }
                            this.interceptors.preResolution.setAll(e, i)
                        }
                    }, e.prototype.executePostResolutionInterceptor = function(e, t, n) {
                        var r, i;
                        if (this.interceptors.postResolution.has(e)) {
                            var s = [];
                            try {
                                for (var a = Object(o.f)(this.interceptors.postResolution.getAll(e)), c = a.next(); !c.done; c = a.next()) {
                                    var d = c.value;
                                    "Once" != d.options.frequency && s.push(d), d.callback(e, t, n)
                                }
                            } catch (u) {
                                r = {
                                    error: u
                                }
                            } finally {
                                try {
                                    c && !c.done && (i = a.return) && i.call(a)
                                } finally {
                                    if (r) throw r.error
                                }
                            }
                            this.interceptors.postResolution.setAll(e, s)
                        }
                    }, e.prototype.resolveRegistration = function(e, t) {
                        if (e.options.lifecycle === i.ResolutionScoped && t.scopedResolutions.has(e)) return t.scopedResolutions.get(e);
                        var n, r = e.options.lifecycle === i.Singleton,
                            o = e.options.lifecycle === i.ContainerScoped,
                            s = r || o;
                        return n = g(e.provider) ? e.provider.useValue : f(e.provider) ? s ? e.instance || (e.instance = this.resolve(e.provider.useToken, t)) : this.resolve(e.provider.useToken, t) : d(e.provider) ? s ? e.instance || (e.instance = this.construct(e.provider.useClass, t)) : this.construct(e.provider.useClass, t) : u(e.provider) ? e.provider.useFactory(this) : this.construct(e.provider, t), e.options.lifecycle === i.ResolutionScoped && t.scopedResolutions.set(e, n), n
                    }, e.prototype.resolveAll = function(e, t) {
                        var n = this;
                        void 0 === t && (t = new b);
                        var r = this.getAllRegistrations(e);
                        if (!r && p(e)) throw new Error('Attempted to resolve unregistered dependency token: "' + e.toString() + '"');
                        if (this.executePreResolutionInterceptor(e, "All"), r) {
                            var i = r.map((function(e) {
                                return n.resolveRegistration(e, t)
                            }));
                            return this.executePostResolutionInterceptor(e, i, "All"), i
                        }
                        var o = [this.construct(e, t)];
                        return this.executePostResolutionInterceptor(e, o, "All"), o
                    }, e.prototype.isRegistered = function(e, t) {
                        return void 0 === t && (t = !1), this._registry.has(e) || t && (this.parent || !1) && this.parent.isRegistered(e, !0)
                    }, e.prototype.reset = function() {
                        this._registry.clear(), this.interceptors.preResolution.clear(), this.interceptors.postResolution.clear()
                    }, e.prototype.clearInstances = function() {
                        var e, t;
                        try {
                            for (var n = Object(o.f)(this._registry.entries()), r = n.next(); !r.done; r = n.next()) {
                                var i = Object(o.c)(r.value, 2),
                                    s = i[0],
                                    a = i[1];
                                this._registry.setAll(s, a.filter((function(e) {
                                    return !g(e.provider)
                                })).map((function(e) {
                                    return e.instance = void 0, e
                                })))
                            }
                        } catch (c) {
                            e = {
                                error: c
                            }
                        } finally {
                            try {
                                r && !r.done && (t = n.return) && t.call(n)
                            } finally {
                                if (e) throw e.error
                            }
                        }
                    }, e.prototype.createChildContainer = function() {
                        var t, n, r = new e(this);
                        try {
                            for (var s = Object(o.f)(this._registry.entries()), a = s.next(); !a.done; a = s.next()) {
                                var c = Object(o.c)(a.value, 2),
                                    d = c[0],
                                    u = c[1];
                                u.some((function(e) {
                                    return e.options.lifecycle === i.ContainerScoped
                                })) && r._registry.setAll(d, u.map((function(e) {
                                    return e.options.lifecycle === i.ContainerScoped ? {
                                        provider: e.provider,
                                        options: e.options
                                    } : e
                                })))
                            }
                        } catch (l) {
                            t = {
                                error: l
                            }
                        } finally {
                            try {
                                a && !a.done && (n = s.return) && n.call(s)
                            } finally {
                                if (t) throw t.error
                            }
                        }
                        return r
                    }, e.prototype.beforeResolution = function(e, t, n) {
                        void 0 === n && (n = {
                            frequency: "Always"
                        }), this.interceptors.preResolution.set(e, {
                            callback: t,
                            options: n
                        })
                    }, e.prototype.afterResolution = function(e, t, n) {
                        void 0 === n && (n = {
                            frequency: "Always"
                        }), this.interceptors.postResolution.set(e, {
                            callback: t,
                            options: n
                        })
                    }, e.prototype.getRegistration = function(e) {
                        return this.isRegistered(e) ? this._registry.get(e) : this.parent ? this.parent.getRegistration(e) : null
                    }, e.prototype.getAllRegistrations = function(e) {
                        return this.isRegistered(e) ? this._registry.getAll(e) : this.parent ? this.parent.getAllRegistrations(e) : null
                    }, e.prototype.construct = function(e, t) {
                        var n = this;
                        if (e instanceof l) return e.createProxy((function(e) {
                            return n.resolve(e, t)
                        }));
                        var r = w.get(e);
                        if (!r || 0 === r.length) {
                            if (0 === e.length) return new e;
                            throw new Error('TypeInfo not known for "' + e.name + '"')
                        }
                        var i = r.map(this.resolveParams(t, e));
                        return new(e.bind.apply(e, Object(o.e)([void 0], i)))
                    }, e.prototype.resolveParams = function(e, t) {
                        var n = this;
                        return function(r, i) {
                            var s, a, c;
                            try {
                                return m(r) ? h(r) ? r.multiple ? (s = n.resolve(r.transform)).transform.apply(s, Object(o.e)([n.resolveAll(r.token)], r.transformArgs)) : (a = n.resolve(r.transform)).transform.apply(a, Object(o.e)([n.resolve(r.token, e)], r.transformArgs)) : r.multiple ? n.resolveAll(r.token) : n.resolve(r.token, e) : h(r) ? (c = n.resolve(r.transform, e)).transform.apply(c, Object(o.e)([n.resolve(r.token, e)], r.transformArgs)) : n.resolve(r, e)
                            } catch (d) {
                                throw new Error(I(t, i, d))
                            }
                        }
                    }, e
                }(),
                S = new P;
            var A = function() {
                return function(e) {
                    var t = a(e);
                    return function(n) {
                        function r() {
                            for (var r = [], i = 0; i < arguments.length; i++) r[i] = arguments[i];
                            return n.apply(this, Object(o.e)(r.concat(t.slice(r.length).map((function(t, n) {
                                var i, s, a;
                                try {
                                    return m(t) ? h(t) ? t.multiple ? (i = S.resolve(t.transform)).transform.apply(i, Object(o.e)([S.resolveAll(t.token)], t.transformArgs)) : (s = S.resolve(t.transform)).transform.apply(s, Object(o.e)([S.resolve(t.token)], t.transformArgs)) : t.multiple ? S.resolveAll(t.token) : S.resolve(t.token) : h(t) ? (a = S.resolve(t.transform)).transform.apply(a, Object(o.e)([S.resolve(t.token)], t.transformArgs)) : S.resolve(t)
                                } catch (d) {
                                    var c = n + r.length;
                                    throw new Error(I(e, c, d))
                                }
                            }))))) || this
                        }
                        return Object(o.b)(r, n), r
                    }(e)
                }
            };
            var R = function(e) {
                return c(e)
            };
            var M = function() {
                return function(e) {
                    w.set(e, a(e))
                }
            };
            var N = function() {
                return function(e) {
                    M()(e), S.registerSingleton(e)
                }
            };

            function C(e) {
                var t;
                return function(n) {
                    return null == t && (t = e(n)), t
                }
            }
            if ("undefined" == typeof Reflect || !Reflect.getMetadata) throw new Error("tsyringe requires a reflect polyfill. Please add 'import \"reflect-metadata\"' to the top of your entry point.")
        },
        SWKE: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("Mgpg"),
                o = n("fsN4");
            class s {
                constructor() {
                    this.logger = void 0;
                    const e = r.ModuleContainer.resolve(i.ZLoggerFactory);
                    this.logger = e.createZLogger("localstorage", ["cleaner"])
                }
                static getInstance() {
                    return this.instance || (this.instance = new s), this.instance
                }
                cleanupLocalStorageMatchConditions(e) {
                    void 0 === e && (e = e => !1);
                    const t = Object.keys(window.localStorage);
                    for (const n of t) e(n) && window.localStorage.removeItem(n)
                }
                cleanupKeysOfLocalStorage(e) {
                    void 0 === e && (e = []);
                    for (const t of e) window.localStorage.removeItem(t)
                }
                clearLocalStorage() {
                    window.localStorage.clear()
                }
                async cleanupAsyncLocalStorageMatchConditions(e) {
                    void 0 === e && (e = e => !1);
                    const t = o.a.getInstance(),
                        n = [];
                    await t.Storage.doesThisDatabaseExist() && n.push(t.Storage.FriendBlocked, t.Storage.InfoCache, t.Storage.RetryCache);
                    await t.SecureLocalstorage.doesThisDatabaseExist() && n.push(t.SecureLocalstorage.AsyncStore);
                    const r = [];
                    for (const i of n) {
                        const t = await i.getAllKey();
                        if (0 === t.length) continue;
                        if (Array.isArray(t[0])) {
                            this.logger.zsymb(9, 8222, 3e4, '"{}" store has array-typed keys; then can\'t be matched for cleaning up', i.name);
                            continue
                        }
                        const n = [];
                        for (const r of t) e(`${r}`) && n.push(r);
                        n.length && r.push(i.deleteMulti(n))
                    }
                    r.length && await Promise.all(r)
                }
                async clearAsyncLocalStorage() {
                    const e = o.a.getInstance(),
                        t = [e.Storage.FriendBlocked, e.Storage.InfoCache, e.Storage.RetryCache, e.SecureLocalstorage.AsyncStore];
                    return Promise.all(t.map((e => e.clear())))
                }
            }
            s.instance = null
        },
        SfRM: function(e, t, n) {
            var r = n("YESw");
            e.exports = function() {
                this.__data__ = r ? r(null) : {}, this.size = 0
            }
        },
        SoEx: function(e, t) {
            e.exports = function(e) {
                return e.webpackPolyfill || (e.deprecate = function() {}, e.paths = [], e.children || (e.children = []), Object.defineProperty(e, "loaded", {
                    enumerable: !0,
                    get: function() {
                        return e.l
                    }
                }), Object.defineProperty(e, "id", {
                    enumerable: !0,
                    get: function() {
                        return e.i
                    }
                }), e.webpackPolyfill = 1), e
            }
        },
        T7kW: function(e, t) {
            e.exports = new class {
                constructor() {
                    this._reverse = {}
                }
                subcribeMainIPC(e) {
                    e.on("zmain_register_process", ((e, t, n, r) => {
                        this.register(t, n, r)
                    }))
                }
                register(e, t, n) {
                    this._reverse[t] = e
                }
                getName(e) {
                    return this._reverse[e]
                }
            }
        },
        TTNl: function(e, t, n) {
            "use strict";
            n("tHMN")
        },
        TcBx: function(e, t) {
            t.endianness = function() {
                return "LE"
            }, t.hostname = function() {
                return "undefined" != typeof location ? location.hostname : ""
            }, t.loadavg = function() {
                return []
            }, t.uptime = function() {
                return 0
            }, t.freemem = function() {
                return Number.MAX_VALUE
            }, t.totalmem = function() {
                return Number.MAX_VALUE
            }, t.cpus = function() {
                return []
            }, t.type = function() {
                return "Browser"
            }, t.release = function() {
                return "undefined" != typeof navigator ? navigator.appVersion : ""
            }, t.networkInterfaces = t.getNetworkInterfaces = function() {
                return {}
            }, t.arch = function() {
                return "javascript"
            }, t.platform = function() {
                return "browser"
            }, t.tmpdir = t.tmpDir = function() {
                return "/tmp"
            }, t.EOL = "\n", t.homedir = function() {
                return "/"
            }
        },
        UJ0r: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return o
            })), n.d(t, "b", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("AH6j");
            n("PmZf");
            class o extends i.b {}
            const s = Object(r.define)("database-adapter-manager")
        },
        UJDs: function(e, t, n) {
            "use strict";
            let r;
            n.d(t, "b", (function() {
                    return r
                })), n.d(t, "a", (function() {
                    return i
                })),
                function(e) {
                    e[e.info = 0] = "info", e[e.error = 1] = "error", e[e.warn = 2] = "warn", e[e.debug = 3] = "debug", e[e.critical = 4] = "critical"
                }(r || (r = {}));
            const i = {
                [r.info]: "info",
                [r.error]: "error",
                [r.warn]: "warn",
                [r.debug]: "debug",
                [r.critical]: "critical"
            }
        },
        UK4g: function(e, t, n) {
            "use strict";
            n.d(t, "j", (function() {
                return r
            })), n.d(t, "b", (function() {
                return i
            })), n.d(t, "g", (function() {
                return o
            })), n.d(t, "c", (function() {
                return s
            })), n.d(t, "d", (function() {
                return a
            })), n.d(t, "f", (function() {
                return c
            })), n.d(t, "e", (function() {
                return d
            })), n.d(t, "h", (function() {
                return u
            })), n.d(t, "i", (function() {
                return l
            })), n.d(t, "k", (function() {
                return p
            })), n.d(t, "a", (function() {
                return m
            }));
            const r = 0,
                i = void 0,
                o = "db",
                s = "db-authenticated",
                a = "db-client-connected",
                c = "db-start-close-dbs",
                d = "db-finish-close-dbs",
                u = 1e4,
                l = 0,
                p = 1e4,
                m = !1
        },
        UURK: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("rCOr"),
                i = n("F1Ur"),
                o = n("CtPB");
            const s = {
                strict: !1,
                allowIndefinite: !0,
                allowUndefined: !0,
                allowBigInt: !0
            };
            class a {
                constructor(e, t = {}) {
                    this.pos = 0, this.data = e, this.options = t
                }
                done() {
                    return this.pos >= this.data.length
                }
                next() {
                    const e = this.data[this.pos];
                    let t = o.quick[e];
                    if (void 0 === t) {
                        const n = o.jump[e];
                        if (!n) throw new Error(`${r.decodeErrPrefix} no decoder for major type ${e>>>5} (byte 0x${e.toString(16).padStart(2,"0")})`);
                        const i = 31 & e;
                        t = n(this.data, this.pos, i, this.options)
                    }
                    return this.pos += t.encodedLength, t
                }
            }
            const c = Symbol.for("DONE"),
                d = Symbol.for("BREAK");

            function u(e, t) {
                if (e.done()) return c;
                const n = e.next();
                if (n.type === i.Type.break) return d;
                if (n.type.terminal) return n.value;
                if (n.type === i.Type.array) return function(e, t, n) {
                    const i = [];
                    for (let o = 0; o < e.value; o++) {
                        const s = u(t, n);
                        if (s === d) {
                            if (e.value === 1 / 0) break;
                            throw new Error(`${r.decodeErrPrefix} got unexpected break to lengthed array`)
                        }
                        if (s === c) throw new Error(`${r.decodeErrPrefix} found array but not enough entries (got ${o}, expected ${e.value})`);
                        i[o] = s
                    }
                    return i
                }(n, e, t);
                if (n.type === i.Type.map) return function(e, t, n) {
                    const i = !0 === n.useMaps,
                        o = i ? void 0 : {},
                        s = i ? new Map : void 0;
                    for (let a = 0; a < e.value; a++) {
                        const l = u(t, n);
                        if (l === d) {
                            if (e.value === 1 / 0) break;
                            throw new Error(`${r.decodeErrPrefix} got unexpected break to lengthed map`)
                        }
                        if (l === c) throw new Error(`${r.decodeErrPrefix} found map but not enough entries (got ${a} [no key], expected ${e.value})`);
                        if (!0 !== i && "string" != typeof l) throw new Error(`${r.decodeErrPrefix} non-string keys not supported (got ${typeof l})`);
                        const p = u(t, n);
                        if (p === c) throw new Error(`${r.decodeErrPrefix} found map but not enough entries (got ${a} [no value], expected ${e.value})`);
                        i ? s.set(l, p) : o[l] = p
                    }
                    return i ? s : o
                }(n, e, t);
                if (n.type === i.Type.tag) {
                    if (t.tags && "function" == typeof t.tags[n.value]) {
                        const r = u(e, t);
                        return t.tags[n.value](r)
                    }
                    throw new Error(`${r.decodeErrPrefix} tag not supported (${n.value})`)
                }
                throw new Error("unsupported")
            }
            t.Tokeniser = a, t.decode = function(e, t) {
                if (!(e instanceof Uint8Array)) throw new Error(`${r.decodeErrPrefix} data to decode must be a Uint8Array`);
                const n = (t = Object.assign({}, s, t)).tokenizer || new a(e, t),
                    i = u(n, t);
                if (i === c) throw new Error(`${r.decodeErrPrefix} did not find any content to decode`);
                if (i === d) throw new Error(`${r.decodeErrPrefix} got unexpected break`);
                if (!n.done()) throw new Error(`${r.decodeErrPrefix} too many terminals, data makes no sense`);
                return i
            }, t.tokensToObject = u
        },
        UbhR: function(e, t, n) {
            n("pevS")({
                global: !0
            }, {
                globalThis: n("OsYe")
            })
        },
        Udxx: function(e, t, n) {
            "use strict";
            t.byteLength = function(e) {
                var t = d(e),
                    n = t[0],
                    r = t[1];
                return 3 * (n + r) / 4 - r
            }, t.toByteArray = function(e) {
                var t, n, r = d(e),
                    s = r[0],
                    a = r[1],
                    c = new o(function(e, t, n) {
                        return 3 * (t + n) / 4 - n
                    }(0, s, a)),
                    u = 0,
                    l = a > 0 ? s - 4 : s;
                for (n = 0; n < l; n += 4) t = i[e.charCodeAt(n)] << 18 | i[e.charCodeAt(n + 1)] << 12 | i[e.charCodeAt(n + 2)] << 6 | i[e.charCodeAt(n + 3)], c[u++] = t >> 16 & 255, c[u++] = t >> 8 & 255, c[u++] = 255 & t;
                2 === a && (t = i[e.charCodeAt(n)] << 2 | i[e.charCodeAt(n + 1)] >> 4, c[u++] = 255 & t);
                1 === a && (t = i[e.charCodeAt(n)] << 10 | i[e.charCodeAt(n + 1)] << 4 | i[e.charCodeAt(n + 2)] >> 2, c[u++] = t >> 8 & 255, c[u++] = 255 & t);
                return c
            }, t.fromByteArray = function(e) {
                for (var t, n = e.length, i = n % 3, o = [], s = 16383, a = 0, c = n - i; a < c; a += s) o.push(u(e, a, a + s > c ? c : a + s));
                1 === i ? (t = e[n - 1], o.push(r[t >> 2] + r[t << 4 & 63] + "==")) : 2 === i && (t = (e[n - 2] << 8) + e[n - 1], o.push(r[t >> 10] + r[t >> 4 & 63] + r[t << 2 & 63] + "="));
                return o.join("")
            };
            for (var r = [], i = [], o = "undefined" != typeof Uint8Array ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, c = s.length; a < c; ++a) r[a] = s[a], i[s.charCodeAt(a)] = a;

            function d(e) {
                var t = e.length;
                if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                var n = e.indexOf("=");
                return -1 === n && (n = t), [n, n === t ? 0 : 4 - n % 4]
            }

            function u(e, t, n) {
                for (var i, o, s = [], a = t; a < n; a += 3) i = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2]), s.push(r[(o = i) >> 18 & 63] + r[o >> 12 & 63] + r[o >> 6 & 63] + r[63 & o]);
                return s.join("")
            }
            i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63
        },
        Ugdv: function(e, t, n) {
            "use strict";
            n("PhBv")
        },
        Uzj0: function(e, t, n) {
            "use strict";
            let r, i, o;
            let s;
            n.d(t, "a", (function() {
                    return r
                })), n.d(t, "b", (function() {
                    return i
                })), n.d(t, "c", (function() {
                    return s
                })),
                function(e) {
                    let t;
                    ! function(e) {
                        let t, n;
                        var r;
                        ! function(e) {
                            e[e.ASC = 1] = "ASC", e[e.DES = -1] = "DES"
                        }(t || (t = {})), e.Order = t, e.create = function(e) {
                            return (n, r) => {
                                for (let i = 0; i < e.length; i++) {
                                    const o = e[i],
                                        s = o.comparer(n[o.key], r[o.key]);
                                    if (0 !== s) return o.order === t.DES ? s * o.order : s
                                }
                                return 0
                            }
                        }, (r = n || (n = e.Comparer || (e.Comparer = {}))).bool = function(e, t) {
                            if (e || t) {
                                if (!e) return 1;
                                if (!t) return -1
                            }
                            return 0
                        }, r.number = function(e, t) {
                            return e > t ? 1 : e < t ? -1 : 0
                        }
                    }(t || (t = e.Sorter || (e.Sorter = {}))), e.asyncForEach = async function(e, t) {
                        for (let n = 0; n < e.length; n++) await t(e[n], n, e)
                    }, e.asyncFilter = async function(e, t) {
                        let n = [];
                        for (let r = 0; r < e.length; r++) await t(e[r], r, e) && n.push(e[r]);
                        return n
                    }, e.asyncMap = async function(e, t) {
                        let n = [];
                        for (let r = 0; r < e.length; r++) n.push(await t(e[r], r, e));
                        return n
                    }
                }(r || (r = {})),
                function(e) {
                    e.delay = function(e) {
                        return void 0 === e && (e = 0), new Promise((t => {
                            setTimeout(t, e)
                        }))
                    };
                    e.Container = class {
                        constructor() {
                            this.resolve = () => {}, this.reject = () => {}, this.promise = void 0, this.value = void 0, this.promise = new Promise(((e, t) => {
                                this.resolve = t => {
                                    this.value = t, e(t)
                                }, this.reject = t
                            }))
                        }
                    }
                }(i || (i = {})), (o || (o = {})).getNumberOfDays = function(e, t) {
                    const n = new Date(e),
                        r = new Date(t).getTime() - n.getTime();
                    return Math.round(r / 864e5)
                }, (s || (s = {})).map = function(e, t) {
                    return Object.keys(e).reduce((function(n, r) {
                        return n[r] = t(r, e[r]), n
                    }), {})
                };
            const a = "undefined" != typeof window && "Microsoft Internet Explorer" == (null === (c = window) || void 0 === c || null === (d = c.navigator) || void 0 === d ? void 0 : d.appName);
            var c, d;
            let u;
            var l;
            (l = u || (u = {})).encrypt = function(e, t) {
                let n = 0,
                    r = [];
                if (a) {
                    let n = 0,
                        i = e.length;
                    for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                    n %= i;
                    for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                } else
                    for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                return r.join("")
            }, l.decrypt = function(e, t) {
                let n = 0,
                    r = [];
                if (a) {
                    let n = 0,
                        i = e.length;
                    for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                    n %= i, n = i - n;
                    for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                } else
                    for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                return r.join("")
            }
        },
        VTBJ: function(e, t, n) {
            "use strict";

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function i(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function o(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? i(Object(n), !0).forEach((function(t) {
                        r(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }
            n.d(t, "a", (function() {
                return o
            }))
        },
        W8fB: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return i
            })), n.d(t, "a", (function() {
                return o
            })), n.d(t, "c", (function() {
                return s
            }));
            var r = n("jDHv");
            const i = Object(r.define)("sen-log-writer"),
                o = Object(r.define)("console-log-writer"),
                s = Object(r.define)("zlog-writer")
        },
        WFqU: function(e, t, n) {
            (function(t) {
                var n = "object" == typeof t && t && t.Object === Object && t;
                e.exports = n
            }).call(this, n("kjmW"))
        },
        WYAk: function(e, t, n) {
            var r, i, o, s;
            e.exports = (r = n("Ib8C"), o = (i = r).lib.Base, s = i.enc.Utf8, void(i.algo.HMAC = o.extend({
                init: function(e, t) {
                    e = this._hasher = new e.init, "string" == typeof t && (t = s.parse(t));
                    var n = e.blockSize,
                        r = 4 * n;
                    t.sigBytes > r && (t = e.finalize(t)), t.clamp();
                    for (var i = this._oKey = t.clone(), o = this._iKey = t.clone(), a = i.words, c = o.words, d = 0; d < n; d++) a[d] ^= 1549556828, c[d] ^= 909522486;
                    i.sigBytes = o.sigBytes = r, this.reset()
                },
                reset: function() {
                    var e = this._hasher;
                    e.reset(), e.update(this._iKey)
                },
                update: function(e) {
                    return this._hasher.update(e), this
                },
                finalize: function(e) {
                    var t = this._hasher,
                        n = t.finalize(e);
                    return t.reset(), t.finalize(this._oKey.clone().concat(n))
                }
            })))
        },
        X2RP: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("AH6j"),
                o = n("Mgpg");
            class s extends i.b {
                constructor() {
                    super(), this.logger = void 0;
                    const e = r.ModuleContainer.resolve(o.ZLoggerFactory);
                    this.logger = e.createZLogger("query-executor", [this.getExecutorName()])
                }
            }
        },
        XB6V: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("zlogger-factory")
        },
        Xi7e: function(e, t, n) {
            var r = n("KMkd"),
                i = n("adU4"),
                o = n("tMB7"),
                s = n("+6XX"),
                a = n("Z8oC");

            function c(e) {
                var t = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++t < n;) {
                    var r = e[t];
                    this.set(r[0], r[1])
                }
            }
            c.prototype.clear = r, c.prototype.delete = i, c.prototype.get = o, c.prototype.has = s, c.prototype.set = a, e.exports = c
        },
        XidR: function(e, t, n) {
            "use strict";
            var r = n("jDHv"),
                i = n("YEoC"),
                o = n("x9oK"),
                s = n("9rga");
            class a extends s.a {
                getAdapterFactoryToken() {
                    return o.b
                }
                async isFullnameOfExistedDatabase(e) {
                    try {
                        return (await
                            function(e) {
                                const t = globalThis.indexedDB.open(e);
                                return new Promise(((n, r) => {
                                    t.onupgradeneeded = function() {
                                        var n;
                                        null === (n = t.transaction) || void 0 === n || n.abort(), r(new d(`No database whose name is ${e} exists`))
                                    }, t.onsuccess = function() {
                                        n(t.result)
                                    }, t.onerror = function() {
                                        r(t.error)
                                    }
                                }))
                            }(e)).close(), !0
                    } catch (t) {
                        if (t.name === c) return !1;
                        throw t
                    }
                }
                getManagerName() {
                    return "idb-adapter-manager"
                }
                async getPartitionValues(e) {
                    return []
                }
                getAdapterType() {
                    return i.a.IDB
                }
            }
            r.ModuleContainer.registerSingleton(s.b, a);
            const c = "NonExistedDBError";
            class d extends Error {
                constructor(e) {
                    super(e), this.name = c
                }
            }
        },
        XuBa: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            const r = n("NFKh");
            class i {
                static encrypt(e) {
                    return r.AES.encrypt(e, "5dbe084b7eedNWjRref04e2rDxs01lwH", {
                        iv: "7eb5dbe084b7eedeef04e2622d46ba00",
                        mode: r.mode.ECB,
                        padding: r.pad.Pkcs7
                    }) + ""
                }
                static decrypt(e) {
                    return r.AES.decrypt(e, "5dbe084b7eedNWjRref04e2rDxs01lwH", {
                        keySize: 16,
                        iv: "7eb5dbe084b7eedeef04e2622d46ba00",
                        mode: r.mode.ECB,
                        padding: r.pad.Pkcs7
                    }).toString(r.enc.Utf8)
                }
            }
        },
        Y41u: function(e, t, n) {
            "use strict";
            let r;
            n.d(t, "c", (function() {
                    return r
                })), n.d(t, "b", (function() {
                    return i
                })), n.d(t, "a", (function() {
                    return o
                })),
                function(e) {
                    e.RegLogBucketStatus = "RegLogBucketStatus", e.SentryLogBucketStatus = "SentryLogBucketStatus", e.WriteSchedulerRequestFlush = "WriteSchedulerRequestFlush", e.WriterStatus = "WriterStatus", e.LogBucketRequestFlush = "LogBucketRequestFlush"
                }(r || (r = {}));
            class i {
                constructor(e, t) {
                    this.type = e, this.payload = t
                }
            }
            class o {
                constructor(e) {
                    this.type = e
                }
            }
        },
        Y4yM: function(e, t, n) {
            var r = n("Bvq2"),
                i = n("/EgQ"),
                o = "".split;
            e.exports = r((function() {
                return !Object("z").propertyIsEnumerable(0)
            })) ? function(e) {
                return "String" == i(e) ? o.call(e, "") : Object(e)
            } : Object
        },
        Y58e: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("config")
        },
        YESw: function(e, t, n) {
            var r = n("Cwc5")(Object, "create");
            e.exports = r
        },
        YEoC: function(e, t, n) {
            "use strict";
            let r, i, o, s, a, c, d;
            n.d(t, "b", (function() {
                    return r
                })), n.d(t, "g", (function() {
                    return i
                })), n.d(t, "f", (function() {
                    return o
                })), n.d(t, "c", (function() {
                    return s
                })), n.d(t, "a", (function() {
                    return a
                })), n.d(t, "d", (function() {
                    return c
                })), n.d(t, "e", (function() {
                    return d
                })),
                function(e) {
                    e.NEXT = "next", e.NEXT_UNIQUE = "nextunique", e.PREV = "prev", e.PREV_UNIQUE = "prevunique"
                }(r || (r = {})),
                function(e) {
                    e.integer = "integer", e.float = "float", e.string = "string", e.boolean = "boolean", e.json = "json", e.blob = "blob", e.jsonAndString = "json&string"
                }(i || (i = {})),
                function(e) {
                    e.READONLY = "readonly", e.READWRITE = "readwrite"
                }(o || (o = {})),
                function(e) {
                    e[e.BLOCKING = 0] = "BLOCKING", e[e.NON_BLOCKING = 50] = "NON_BLOCKING", e[e.LOW = 100] = "LOW", e[e.IDLE = 250] = "IDLE", e[e.NEVER_TIMEOUT = 1e3] = "NEVER_TIMEOUT"
                }(s || (s = {})),
                function(e) {
                    e[e.IDB = 0] = "IDB", e[e.SQLite = 1] = "SQLite"
                }(a || (a = {})),
                function(e) {
                    e[e.BeginTransaction = 0] = "BeginTransaction", e[e.CommitTransaction = 1] = "CommitTransaction", e[e.Clear = 2] = "Clear", e[e.Get = 3] = "Get", e[e.GetAndUpdate = 4] = "GetAndUpdate", e[e.GetMulti = 5] = "GetMulti", e[e.GetAll = 6] = "GetAll", e[e.GetAllKey = 7] = "GetAllKey", e[e.Insert = 8] = "Insert", e[e.InsertMulti = 9] = "InsertMulti", e[e.Update = 10] = "Update", e[e.UpdateMulti = 11] = "UpdateMulti", e[e.Delete = 12] = "Delete", e[e.DeleteMulti = 13] = "DeleteMulti", e[e.FindAndDelete = 14] = "FindAndDelete", e[e.Count = 15] = "Count"
                }(c || (c = {})),
                function(e) {
                    e[e.Unknown = 0] = "Unknown", e[e.Background = 1] = "Background", e[e.Host = 2] = "Host", e[e.Client = 3] = "Client", e[e.Worker = 4] = "Worker", e[e.Browser = 5] = "Browser"
                }(d || (d = {}))
        },
        YZti: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return s
            })), n.d(t, "b", (function() {
                return c
            }));
            var r = n("YEoC");
            const i = "undefined" != typeof window && "Microsoft Internet Explorer" == (null === (o = window.navigator) || void 0 === o ? void 0 : o.appName);
            var o;
            let s;
            var a;
            let c;
            (a = s || (s = {})).encrypt = function(e, t) {
                let n = 0,
                    r = [];
                if (i) {
                    let n = 0,
                        i = e.length;
                    for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                    n %= i;
                    for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                } else
                    for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                return r.join("")
            }, a.decrypt = function(e, t) {
                let n = 0,
                    r = [];
                if (i) {
                    let n = 0,
                        i = e.length;
                    for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                    n %= i, n = i - n;
                    for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                } else
                    for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                return r.join("")
            }, (c || (c = {})).getTypeName = function(e) {
                switch (e) {
                    case r.d.BeginTransaction:
                        return "begin-transaction";
                    case r.d.CommitTransaction:
                        return "commit-transaction";
                    case r.d.Clear:
                        return "clear";
                    case r.d.Get:
                        return "get";
                    case r.d.GetAndUpdate:
                        return "get-and-update";
                    case r.d.GetMulti:
                        return "get-multi";
                    case r.d.GetAll:
                        return "get-all";
                    case r.d.GetAllKey:
                        return "get-all-key";
                    case r.d.Insert:
                        return "insert";
                    case r.d.InsertMulti:
                        return "insert-multi";
                    case r.d.Update:
                        return "update";
                    case r.d.UpdateMulti:
                        return "update-multi";
                    case r.d.Delete:
                        return "delete";
                    case r.d.DeleteMulti:
                        return "delete-multi";
                    case r.d.FindAndDelete:
                        return "find-and-delete";
                    case r.d.Count:
                        return "count"
                }
            }
        },
        Z0cm: function(e, t) {
            var n = Array.isArray;
            e.exports = n
        },
        Z8oC: function(e, t, n) {
            var r = n("y1pI");
            e.exports = function(e, t) {
                var n = this.__data__,
                    i = r(n, e);
                return i < 0 ? (++this.size, n.push([e, t])) : n[i][1] = t, this
            }
        },
        ZBQp: function(e, t, n) {
            var r = n("zJQS");
            e.exports = function(e, t, n) {
                if (r(e), void 0 === t) return e;
                switch (n) {
                    case 0:
                        return function() {
                            return e.call(t)
                        };
                    case 1:
                        return function(n) {
                            return e.call(t, n)
                        };
                    case 2:
                        return function(n, r) {
                            return e.call(t, n, r)
                        };
                    case 3:
                        return function(n, r, i) {
                            return e.call(t, n, r, i)
                        }
                }
                return function() {
                    return e.apply(t, arguments)
                }
            }
        },
        ZICu: function(e, t, n) {
            "use strict";
            var r = n("YEoC"),
                i = n("xI/L"),
                o = n("qcQX"),
                s = n("KiFO");
            new o.a({
                name: "internal",
                session: !0,
                version: 1,
                milestoneVersion: 1,
                type: r.a.SQLite,
                partitionNamingStrategy: [i.a.const("internal")],
                partitionsMap: {
                    default: {
                        tables: [s.a]
                    }
                }
            }), s.a
        },
        ZWtO: function(e, t, n) {
            var r = n("4uTw"),
                i = n("9Nap");
            e.exports = function(e, t) {
                for (var n = 0, o = (t = r(t, e)).length; null != e && n < o;) e = e[i(t[n++])];
                return n && n == o ? e : void 0
            }
        },
        ZcVI: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            })), n.d(t, "b", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "d", (function() {
                return s
            })), n.d(t, "h", (function() {
                return a
            })), n.d(t, "i", (function() {
                return c
            })), n.d(t, "j", (function() {
                return d
            })), n.d(t, "m", (function() {
                return u
            })), n.d(t, "k", (function() {
                return l
            })), n.d(t, "l", (function() {
                return p
            })), n.d(t, "e", (function() {
                return m
            })), n.d(t, "f", (function() {
                return h
            })), n.d(t, "g", (function() {
                return f
            }));
            const r = "conversation",
                i = "friend",
                o = "group",
                s = "group_info",
                a = "ac",
                c = "acv2",
                d = "aco",
                u = "sock_msg",
                l = "sock_ac",
                p = "sock_aco",
                m = "actr",
                h = "actrv2",
                f = "actro"
        },
        ZgEe: function(e, t, n) {
            "use strict";
            (function(e) {
                t.a = class {
                    constructor() {
                        this.t0 = void 0, this.t0 = e.hrtime.bigint()
                    }
                    get ms() {
                        const t = e.hrtime.bigint();
                        return Number(t - this.t0) / 1e6
                    }
                    get us() {
                        const t = e.hrtime.bigint();
                        return Number(t - this.t0) / 1e3
                    }
                }
            }).call(this, n("ckNr"))
        },
        "aMN+": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("uS0h");

            function o(e, t) {
                i.encodeUintValue(e, r.Type.tag.majorEncoded, t.value)
            }
            o.compareTokens = i.encodeUint.compareTokens, o.encodedSize = function(e) {
                return i.encodeUintValue.encodedSize(e.value)
            }, t.decodeTag16 = function(e, t, n, o) {
                return new r.Token(r.Type.tag, i.readUint16(e, t + 1, o), 3)
            }, t.decodeTag32 = function(e, t, n, o) {
                return new r.Token(r.Type.tag, i.readUint32(e, t + 1, o), 5)
            }, t.decodeTag64 = function(e, t, n, o) {
                return new r.Token(r.Type.tag, i.readUint64(e, t + 1, o), 9)
            }, t.decodeTag8 = function(e, t, n, o) {
                return new r.Token(r.Type.tag, i.readUint8(e, t + 1, o), 2)
            }, t.decodeTagCompact = function(e, t, n, i) {
                return new r.Token(r.Type.tag, n, 1)
            }, t.encodeTag = o
        },
        adU4: function(e, t, n) {
            var r = n("y1pI"),
                i = Array.prototype.splice;
            e.exports = function(e) {
                var t = this.__data__,
                    n = r(t, e);
                return !(n < 0) && (n == t.length - 1 ? t.pop() : i.call(t, n, 1), --this.size, !0)
            }
        },
        b3Jv: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "idx_queue",
                    name: "IdxQueue",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        msgType: {
                            name: "msgType",
                            type: s.g.integer
                        },
                        ts: {
                            name: "ts",
                            type: s.g.string
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "stcont",
                    name: "StCont",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        msgType: {
                            name: "msgType",
                            type: s.g.integer
                        },
                        index: {
                            name: "index",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "index"
                            }],
                            unique: !0,
                            autoIncrement: !0
                        },
                        msgId: {
                            name: "msgId",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p)),
                g = {
                    tableName: "stidx",
                    name: "StIdx",
                    fields: {
                        keywordId: {
                            name: "keywordId",
                            type: s.g.integer
                        },
                        contentId: {
                            name: "contentId",
                            type: s.g.integer
                        },
                        freq: {
                            name: "freq",
                            type: s.g.integer
                        },
                        index: {
                            name: "index",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "index"
                            }],
                            unique: !0,
                            autoIncrement: !0
                        },
                        keywordId: {
                            name: "keywordId",
                            fields: [{
                                type: "raw",
                                field: "keywordId"
                            }],
                            unique: !1
                        }
                    }
                },
                y = new i.d(g),
                _ = new i.d(Object(r.a)({}, g)),
                E = new i.d(Object(r.a)({}, g)),
                b = {
                    tableName: "stkw",
                    name: "StKeyword",
                    fields: {
                        keyword: {
                            name: "keyword",
                            type: s.g.string
                        },
                        index: {
                            name: "index",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "index"
                            }],
                            unique: !0,
                            autoIncrement: !0
                        },
                        keyword: {
                            name: "keyword",
                            fields: [{
                                type: "raw",
                                field: "keyword"
                            }],
                            unique: !0
                        }
                    }
                },
                I = {
                    IdxQueue: d,
                    StCont: m,
                    StIdx: y,
                    StKeyword: new i.d(b)
                },
                v = {
                    IdxQueue: u,
                    StCont: h,
                    StIdx: _,
                    StKeyword: new i.d(Object(r.a)({}, b))
                },
                T = {
                    IdxQueue: l,
                    StCont: f,
                    StIdx: E,
                    StKeyword: new i.d(Object(r.a)({}, b))
                },
                O = {
                    name: "Search",
                    session: !0
                },
                w = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("Search"), o.a.byTable()],
                    partitionsMap: Object(a.a)(T)
                },
                P = {
                    partitionNamingStrategy: [o.a.const("sidx"), o.a.byUser()],
                    partitionsMap: Object(a.b)(v)
                },
                S = Object(r.a)(Object(r.a)(Object(r.a)({}, O), w), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                A = Object(r.a)(Object(r.a)(Object(r.a)({}, O), P), {}, {
                    version: 2,
                    milestoneVersion: 2,
                    type: s.a.IDB
                });
            let R = null,
                M = null;
            t.a = {
                basicSchema: I,
                get useSqlite() {
                    return null === R && (R = new i.a(S)), R
                },
                get useIdb() {
                    return null === M && (M = new i.a(A)), M
                }
            }
        },
        b42z: function(e, t, n) {
            var r = n("39uu");
            e.exports = function(e) {
                if (!r(e)) throw TypeError(String(e) + " is not an object");
                return e
            }
        },
        bAum: function(e, t, n) {
            "use strict";
            (function(t) {
                var n = t.argv,
                    r = n.indexOf("--"),
                    i = function(e) {
                        e = "--" + e;
                        var t = n.indexOf(e);
                        return -1 !== t && (-1 === r || t < r)
                    };
                e.exports = !(!("FORCE_COLOR" in t.env) && (i("no-color") || i("no-colors") || i("color=false") || !(i("color") || i("colors") || i("color=true") || i("color=always")) && (t.stdout && !t.stdout.isTTY || "win32" !== t.platform && !("COLORTERM" in t.env) && ("dumb" === t.env.TERM || !/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(t.env.TERM)))))
            }).call(this, n("ckNr"))
        },
        bQjk: function(e, t, n) {
            var r, i, o, s;
            e.exports = (s = n("Ib8C"), n("OLod"), i = (r = s).lib.CipherParams, o = r.enc.Hex, r.format.Hex = {
                stringify: function(e) {
                    return e.ciphertext.toString(o)
                },
                parse: function(e) {
                    var t = o.parse(e);
                    return i.create({
                        ciphertext: t
                    })
                }
            }, s.format.Hex)
        },
        bSii: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "a", (function() {
                return s
            }));
            var r = n("igA5");
            n("YEoC");

            function i(e, t) {
                if (!globalThis.localStorage) return t;
                try {
                    const t = r.a.getInstance().getItem(e);
                    if (t) return JSON.parse(t)
                } catch (n) {}
                return o(e, t), t
            }

            function o(e, t) {
                r.a.getInstance().setItem(e, JSON.stringify(t))
            }

            function s(e) {
                return 1 === e.length ? e[0] : e
            }
        },
        cEPT: function(e, t, n) {
            "use strict";
            var r = {}.propertyIsEnumerable,
                i = Object.getOwnPropertyDescriptor,
                o = i && !r.call({
                    1: 2
                }, 1);
            t.f = o ? function(e) {
                var t = i(this, e);
                return !!t && t.enumerable
            } : r
        },
        cF85: function(e, t, n) {
            "use strict";
            var r = n("jDHv"),
                i = n("x9oK"),
                o = n("PmZf"),
                s = n("AH6j");
            let a;
            ! function(e) {
                e.AbnormallyClose = "abnormally-closed"
            }(a || (a = {}));
            class c extends s.a {
                constructor() {
                    super(a.AbnormallyClose)
                }
            }
            var d = n("LzQZ"),
                u = n("rvru"),
                l = n("xpEm"),
                p = n("DI/x");

            function m(e) {
                return new Promise(((t, n) => {
                    e.onerror = () => n(e.error), e.onsuccess = () => t(e.result)
                }))
            }

            function h(e, t, n) {
                return `Invalid filter value for this method: '${e}' - Expected type: '${t}' - Actual type: '${n}'`
            }

            function f(e, t) {
                const n = Object(l.m)(t, {
                    operations: {
                        AND: l.a,
                        OR: l.k,
                        NOT: l.j,
                        gt: l.c,
                        gte: l.d,
                        lt: l.f,
                        lte: l.g,
                        in: l.e,
                        notIn: l.i,
                        eq: l.b,
                        notEq: l.h,
                        contains(e, t, n) {
                            if ("string" != typeof e) {
                                const t = h("contains", "string", typeof e);
                                throw new p.l(t)
                            }
                            return Object(l.l)((t => "string" == typeof t && t.includes(e)), t, n)
                        },
                        startsWith(e, t, n) {
                            if ("string" != typeof e) {
                                const t = h("startsWith", "string", typeof e);
                                throw new p.l(t)
                            }
                            return Object(l.l)((t => "string" == typeof t && t.startsWith(e)), t, n)
                        },
                        endsWith(e, t, n) {
                            if ("string" != typeof e) {
                                const t = h("endsWith", "string", typeof e);
                                throw new p.l(t)
                            }
                            return Object(l.l)((t => "string" == typeof t && t.endsWith(e)), t, n)
                        }
                    }
                });
                return n(e)
            }
            class g extends s.b {
                constructor(e) {
                    super(), this.connectionFactory = e, this.connection = null, this.isManuallyClose = !1, this.onAbnormallyCloseListeners = []
                }
                async getName() {
                    return (await this.getConnection()).name
                }
                async getObjectStoreNames() {
                    return (await this.getConnection()).objectStoreNames
                }
                async getVersion() {
                    return (await this.getConnection()).version
                }
                async getConnection(e) {
                    void 0 === e && (e = !1);
                    const t = async () => {
                        let e = null;
                        try {
                            e = await this.connectionFactory()
                        } catch (t) {
                            let e = t;
                            throw "VersionError" === t.name && (e = new p.k(t.message)), this.dispatchEvent(new o.d(e)), t
                        }
                        return e.onclose = () => {
                            this.dispatchEvent(new c)
                        }, e
                    };
                    if (this.connection) {
                        if (e) {
                            if (this.isManuallyClose) throw new p.d("The database connection has manually been closed!", ["idb"]);
                            const e = this.connection;
                            this.onAbnormallyCloseListeners.forEach((t => {
                                e.removeEventListener("close", t)
                            })), this.connection = await t()
                        }
                    } else this.connection = await t();
                    return this.connection
                }
                async getTransaction(e, t) {
                    let n = await this.getConnection(),
                        r = null;
                    try {
                        r = n.transaction(e, t)
                    } catch (i) {
                        if (!i || "InvalidStateError" !== i.name && 11 !== i.code) throw i;
                        n = await this.getConnection(!0), r = n.transaction(e, t)
                    }
                    return r
                }
                close() {
                    this.connection && !this.isManuallyClose && (this.connection.close(), this.isManuallyClose = !0)
                }
            }
            var y = n("bSii"),
                _ = n("3wcW");
            class E extends _.a {
                constructor(e, t, n) {
                    super(e, t, !1), this._transaction = n, this.allowMissingTable = !1
                }
                async delete() {}
                async close() {
                    this.instance && this.instance.close()
                }
                async _getTables() {
                    return Array.from(this.instance.objectStoreNames)
                }
                async _createTable(e) {
                    const t = this.instance;
                    let n = {};
                    if (e.isNonFieldlikeEntity) n = {
                        autoIncrement: !0
                    };
                    else {
                        const t = e.primaryIndex;
                        n = {
                            keyPath: Object(y.a)(t.getRealFields()),
                            autoIncrement: t.autoIncrement
                        }
                    }
                    if (t.objectStoreNames.contains(e.tableName)) return;
                    const r = t.createObjectStore(e.tableName, n);
                    Object.values(e.indices).map((e => {
                        if ("primary" === e.name) return;
                        const t = e.fields.map((e => "object" != typeof e ? e : "length" === e.type ? `${e.field.toString()}.length` : e.field));
                        r.createIndex(e.name, Object(y.a)(t), {
                            unique: e.unique
                        })
                    }))
                }
                async _createIndex(e, t) {
                    const n = this._transaction;
                    if (!n) throw new p.u(`Can't create '${t}' due to unavailable IDBTransaction transaction!`);
                    const r = n.objectStore(e.tableName),
                        i = e.getIndex(t),
                        o = i.fields.map((e => "object" != typeof e ? e : "length" === e.type ? `${e.field.toString()}.length` : e.field));
                    var s;
                    r.createIndex(t, 1 === (s = o).length ? s[0] : s, {
                        unique: i.unique
                    })
                }
                _addColumns(e, t) {
                    return Promise.resolve()
                }
            }
            var b = n("VTBJ"),
                I = n("YEoC"),
                v = n("X2RP");
            class T extends v.a {
                constructor(e, t) {
                    super(), this.instance = e, this.transactionManager = t
                }
                getExecutorName() {
                    return "idb"
                }
                async clear(e) {
                    let {
                        transaction: t,
                        meta: n
                    } = e;
                    const r = n.tableConfig;
                    return m((await this.getStore(t, r, I.f.READWRITE)).clear())
                }
                async get(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = r.index,
                        o = r.key,
                        s = n.tableConfig,
                        a = await this.getStoreOrIndex(t, s, i),
                        c = this.validateKey(s, i, o),
                        d = a.get(c);
                    return this.getResult(s, d)
                }
                async getMulti(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = r.index,
                        o = r.keys,
                        s = n.tableConfig,
                        a = await this.getStoreOrIndex(t, s, i),
                        c = o.map((e => {
                            const t = this.validateKey(s, i, e),
                                n = a.get(t);
                            return this.getResult(s, n)
                        }));
                    return Promise.all(c)
                }
                getAll(e) {
                    return e.params.direction === I.b.PREV || e.params.direction === I.b.PREV_UNIQUE || e.params.filter || e.params.predicate || e.params.aborted || e.params.onProgress || e.params.onValue ? this.getAllByCursor(e) : this.getAllWithoutFilter(e)
                }
                async getAllKeyByCursor(e) {
                    let {
                        meta: t,
                        params: n,
                        transaction: r
                    } = e;
                    const i = t.tableConfig,
                        o = n.range && this.toIDBKeyRange(n.range),
                        s = (await this.getStoreOrIndex(r, i, n.index)).openKeyCursor(o, n.direction);
                    return null === s ? [] : new Promise(((e, t) => {
                        const r = [];
                        s.onsuccess = () => {
                            const t = s.result;
                            if (null === t || null === t.primaryKey) return void e(r);
                            const i = t.primaryKey;
                            r.push(i);
                            r.length >= n.limit ? e(r) : t.continue()
                        }, s.onerror = () => {
                            t(s.error)
                        }
                    }))
                }
                async getAllKey(e) {
                    if (e.params.direction === I.b.PREV || e.params.direction === I.b.PREV_UNIQUE) return this.getAllKeyByCursor(e); {
                        const {
                            meta: t,
                            params: n,
                            transaction: r
                        } = e, i = t.tableConfig, o = n.range && this.toIDBKeyRange(n.range);
                        return m((await this.getStoreOrIndex(r, i, n.index)).getAllKeys(o, n.limit))
                    }
                }
                async getAndUpdate(e) {
                    const {
                        transaction: t,
                        params: n,
                        meta: r
                    } = e, i = n.index, o = n.updater, s = n.key, a = r.tableConfig, c = await this.getStoreOrIndex(t, a, i), d = this.validateKey(a, i, s), u = c.get(d), l = await this.getResult(a, u);
                    if (void 0 === l) return;
                    const h = await this.getStore(t, a, I.f.READWRITE),
                        f = await o(l || {});
                    if (!f && !1 !== n.ignoreNotFound) throw new p.f("Update undefined document");
                    const g = this.toDB(a, f),
                        y = h.put(g);
                    return await m(y), f
                }
                insert(e) {
                    return e.params.replace ? this._insertOrReplace(e) : this._insertIfNotExist(e)
                }
                insertMulti(e) {
                    return e.params.replace ? this.insertOrReplaceMulti(e) : this.insertIfNotExistMulti(e)
                }
                async update(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getStore(t, i, I.f.READWRITE);
                    return this._update(o, this.validateKey(i, "primary", r.key), r.attributes, this.toDB(i, r.value, !1), r.ignoreNotFound).then((t => t ? this.fromDB(e.meta.tableConfig, t) : t))
                }
                async updateMulti(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getStore(t, i, I.f.READWRITE), s = [], a = [], c = r.patches.map((t => this._update(o, this.validateKey(i, "primary", t.key), t.attributes, this.toDB(i, t.value, !1), r.ignoreNotFound).then((t => t ? this.fromDB(e.meta.tableConfig, t) : t)).then((e => {
                        e ? s.push(e) : a.push(e)
                    }))));
                    return Promise.all(c).then((() => ({
                        success: s,
                        fail: a
                    })))
                }
                async delete(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = n.tableConfig,
                        o = (await this.getStore(t, i, I.f.READWRITE)).delete(this.validateKey(i, "primary", r.key));
                    return this.checkReqSuccessOrFail(o)
                }
                async deleteMulti(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = n.tableConfig,
                        o = await this.getStore(t, i, I.f.READWRITE),
                        s = {
                            success: [],
                            fail: []
                        },
                        a = r.keys.map((e => this.checkReqSuccessOrFail(o.delete(e)).then((t => {
                            t ? s.success.push(e) : s.fail.push(e)
                        }))));
                    return await Promise.all(a), s
                }
                async count(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = n.tableConfig,
                        o = this.toIDBKeyRange(r.range);
                    return m((await this.getStoreOrIndex(t, i, r.index)).count(o))
                }
                async findAndDelete(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = n.tableConfig,
                        {
                            filter: o
                        } = r,
                        s = o ? e => f(e, o) : null,
                        a = this.toIDBKeyRange(r.range),
                        c = (await this.getStore(t, i, I.f.READWRITE)).openCursor(a);
                    return null === c ? 0 : new Promise(((e, t) => {
                        let n = 0,
                            r = !1;
                        c.onsuccess = () => {
                            if (r) return;
                            const t = c.result;
                            if (null === t || null === t.value) return r = !0, void e(n);
                            const o = this.fromDB(i, t.value);
                            s && !s(o) || (t.delete(), n += 1, !r) ? t.continue() : e(n)
                        }, c.onerror = () => {
                            t(c.error)
                        }
                    }))
                }
                beginTransaction(e) {
                    throw new p.a("beginTransaction", ["idb"])
                }
                commitTransaction(e) {
                    throw new p.a("commitTransaction", ["idb"])
                }
                async getAllByCursor(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r,
                        deferrer: i
                    } = e;
                    const o = n.tableConfig,
                        {
                            onProgress: s,
                            advance: a,
                            stepCount: c,
                            onValue: d,
                            predicate: u,
                            filter: l
                        } = r;
                    if (u && l) {
                        const e = new p.l("Query using both 'filter' and 'predicate' is not allowed!");
                        return void(null == i || i.reject(e))
                    }
                    let m = null;
                    (u || l) && (m = u || (e => f(e, l)));
                    const h = await this.getStoreOrIndex(t, o, r.index),
                        g = this.toIDBKeyRange(r.range),
                        y = h.openCursor(g, r.direction);
                    return null === y ? [] : new Promise(((e, t) => {
                        const n = [];
                        let i = !1,
                            u = !!a;
                        y.onsuccess = () => {
                            if (i) return;
                            const t = y.result;
                            if (null === t || null === t.value) return i = !0, void e(n);
                            if (u && a) return u = !1, void t.advance(a);
                            const l = this.fromDB(o, t.value);
                            d && d(l), m && !m(l) || (n.push(l), s && s(n, l), i = n.length >= r.limit, i || (i = !!r.aborted && r.aborted(n, l)), !i) ? (c && t.advance(c), t.continue()) : e(n)
                        }, y.onerror = () => {
                            t(y.error)
                        }
                    }))
                }
                async getAllWithoutFilter(e) {
                    let {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e;
                    const i = n.tableConfig,
                        o = this.toIDBKeyRange(r.range),
                        s = (await this.getStoreOrIndex(t, i, r.index)).getAll(o, r.limit);
                    return this.getResult(i, s)
                }
                async getStoreOrIndex(e, t, n) {
                    const r = await this.getStore(e, t, I.f.READONLY);
                    if ("primary" === n) return r;
                    const i = t.getIndex(n);
                    if (!i) throw new p.o(n);
                    return r.index(i.name)
                }
                async _insertIfNotExist(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getTransaction(t, i, I.f.READWRITE), s = o.objectStore(i.tableName);
                    let a = null;
                    if (!i.isNonFieldlikeEntity) {
                        const e = i.primaryIndex;
                        if (!e.autoIncrement) {
                            const t = Object(y.a)(e.createKey(r.value)),
                                n = s.get(t);
                            a = await new Promise((e => {
                                n.onsuccess = () => {
                                    const t = this.fromDB(i, n.result);
                                    e(t)
                                }, n.onerror = () => {
                                    e(null)
                                }
                            }))
                        }
                    }
                    if (a) return Promise.resolve(a); {
                        const e = s.add(this.toDB(i, r.value));
                        return t ? m(e).then((() => r.value)) : new Promise(((t, n) => {
                            o.oncomplete = () => {
                                t(r.value)
                            }, o.onerror = () => {
                                var i;
                                0 === (null === (i = e.error) || void 0 === i ? void 0 : i.code) ? t(r.value) : n(e.error)
                            }
                        }))
                    }
                }
                async _insertOrReplace(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getTransaction(t, i, I.f.READWRITE), s = o.objectStore(i.tableName).put(this.toDB(i, r.value));
                    return t ? m(s).then((() => r.value)) : new Promise(((e, t) => {
                        o.oncomplete = () => {
                            e(r.value)
                        }, o.onerror = () => {
                            t(s.error)
                        }
                    }))
                }
                async insertIfNotExistMulti(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getTransaction(t, i, I.f.READWRITE), s = o.objectStore(i.tableName), a = [], c = [], d = r.values.map((async e => {
                        let t = !1;
                        if (!i.isNonFieldlikeEntity) {
                            const n = i.primaryIndex;
                            if (!n.autoIncrement) {
                                const r = Object(y.a)(n.createKey(e)),
                                    o = s.get(r);
                                t = await new Promise((e => {
                                    o.onsuccess = () => {
                                        const t = this.fromDB(i, o.result);
                                        let n = !1;
                                        void 0 !== t && (a.push(t), n = !0), e(n)
                                    }, o.onerror = () => {
                                        e(!1)
                                    }
                                }))
                            }
                        }
                        if (t) return;
                        const n = s.add(this.toDB(i, e));
                        return this.checkReqSuccessOrFail(n).then((t => {
                            if (t) {
                                let t = e;
                                if (!i.isNonFieldlikeEntity) {
                                    const {
                                        primaryIndex: e
                                    } = i, r = e.fields[0].field;
                                    Object.prototype.hasOwnProperty.call(t, r) || (t[r] = n.result)
                                }
                                a.push(t)
                            } else c.push(e)
                        })).catch((() => {
                            c.push(e)
                        }))
                    }));
                    return t ? Promise.all(d).then((() => ({
                        success: a,
                        fail: c
                    }))) : new Promise((e => {
                        o.oncomplete = () => {
                            e({
                                success: a,
                                fail: c
                            })
                        }, o.onerror = () => {
                            e({
                                success: a,
                                fail: c
                            })
                        }
                    }))
                }
                async insertOrReplaceMulti(e) {
                    const {
                        transaction: t,
                        meta: n,
                        params: r
                    } = e, i = n.tableConfig, o = await this.getTransaction(t, i, I.f.READWRITE), s = o.objectStore(i.tableName), a = [], c = [], d = r.values.map((e => {
                        const t = s.put(this.toDB(i, e));
                        return this.checkReqSuccessOrFail(t).then((() => {
                            let n = e;
                            if (!i.isNonFieldlikeEntity) {
                                const {
                                    primaryIndex: e
                                } = i, r = e.fields[0].field;
                                Object.prototype.hasOwnProperty.call(n, r) || (n[r] = t.result)
                            }
                            a.push(n)
                        })).catch((() => {
                            c.push(e)
                        }))
                    }));
                    return t ? Promise.all(d).then((() => ({
                        success: a,
                        fail: c
                    }))) : new Promise(((e, t) => {
                        o.oncomplete = () => e({
                            success: a,
                            fail: c
                        }), o.onerror = () => e({
                            success: a,
                            fail: c
                        })
                    }))
                }
                async _update(e, t, n, r, i) {
                    const o = await m(e.get(t));
                    if (!o) {
                        if (i) return;
                        throw new p.f("Update undefined document!")
                    }
                    return await m(e.put(n.reduce(((e, t) => (e[t] = r[t], e)), o))), o
                }
                checkReqSuccessOrFail(e) {
                    return m(e).then((() => !0)).catch((() => !1))
                }
                getTransaction(e, t, n) {
                    const r = t.tableName;
                    if (e > 0) {
                        const t = this.transactionManager.get(e);
                        return Promise.resolve(t.instance)
                    }
                    return this.instance.getTransaction([r], n)
                }
                async getStore(e, t, n) {
                    return (await this.getTransaction(e, t, n)).objectStore(t.tableName)
                }
                toIDBKeyRange(e) {
                    if (e) {
                        if (e.from && e.to) try {
                            return IDBKeyRange.bound(e.from, e.to, e.excludeFrom, e.excludeTo)
                        } catch (t) {
                            throw t
                        }
                        return e.from ? IDBKeyRange.lowerBound(e.from, e.excludeFrom) : e.to ? IDBKeyRange.upperBound(e.to, e.excludeTo) : void 0
                    }
                }
                getResult(e, t) {
                    return m(t).then((t => this.fromDB(e, t)))
                }
                toDB(e, t, n) {
                    void 0 === n && (n = !0);
                    try {
                        e.validate(t, n)
                    } catch (i) {
                        this.logger.zsymb(21, 9691, 3e4, "{}: {} (database={}, table={})", i.name, i.message, e.dbName, e.name)
                    }
                    const {
                        isNonFieldlikeEntity: r
                    } = e;
                    return function(t) {
                        if (0 === e.transforms.length) return t;
                        const n = t => {
                            if (r) return e.transforms.reduce(((e, t) => t.toDB(e)), t); {
                                const n = Object(b.a)({}, t);
                                return e.transforms.forEach((e => {
                                    e.toDB(n)
                                })), n
                            }
                        };
                        return Array.isArray(t) ? t.map(n) : n(t)
                    }(t = e.prepareValue(t, n, r))
                }
                fromDB(e, t) {
                    if (0 === e.transforms.length) return t;
                    const n = t => (e.transforms.forEach((e => {
                        e.fromDB(t)
                    })), t);
                    return Array.isArray(t) ? t.map(n) : n(t)
                }
                validateKey(e, t, n) {
                    if (!e.getIndex(t).validateKey(n)) throw new p.l("The query key is invalid!");
                    return n
                }
            }
            class O {
                constructor(e, t) {
                    this.partition = e, this.instance = t
                }
                async beginTransaction(e) {
                    try {
                        const t = e.params.tables.map((e => this.partition.getTableConfig(e).tableName)),
                            n = e.params.mode,
                            r = await this.instance.getTransaction(t, n),
                            i = e.transaction;
                        e.deferrer.resolve(new w(i, r))
                    } catch (t) {
                        e.deferrer.reject(t)
                    }
                }
            }
            class w {
                constructor(e, t) {
                    this.id = e, this.instance = t, this.error = null, this.closed = void 0, this.onCloseListeners = [], this.closed = !1;
                    const n = e => {
                        this.closed = !0, this.error = e, this.onCloseListeners.forEach((t => t(e)))
                    };
                    t.addEventListener("complete", (() => n(t.error))), t.addEventListener("abort", (() => n(t.error))), t.addEventListener("error", (() => n(t.error)))
                }
                execute(e) {
                    return e().catch((e => {
                        throw this.instance.abort(), e
                    }))
                }
                onClose(e) {
                    this.onCloseListeners.push(e), this.closed && e(this.error)
                }
            }
            var P, S = n("rkiK");
            class A extends i.a {
                constructor(e, t, n, r, i, s) {
                    super(e, t, n, r, i, s, {}), this.instance.addEventListener(o.a.UnexpectedError, (e => {
                        this.dispatchEvent(new o.d(e.error))
                    })), this.instance.addEventListener(a.AbnormallyClose, (() => {
                        this.logger.zsymb(6, 9436, 3e4, "The database connection has abnormally closed!")
                    }))
                }
                deleteThisDatabase() {
                    this.instance.isManuallyClose = !0;
                    const e = indexedDB.deleteDatabase(this.fullName),
                        t = this.instance,
                        n = this.fullName,
                        r = this.logger;
                    return r.zsymb(6, 9436, 30001, `The database connection is manually closed due to database deletion: '${n}'`), new Promise(((i, o) => {
                        e.onsuccess = function() {
                            r.zsymb(0, 9436, 30002, `Delete database sucessfully: '${n}'`), i()
                        }, e.onblocked = function() {
                            t.close()
                        }, e.onerror = function() {
                            const t = e.error;
                            r.zsymb(0, 9436, 30003, `Failed to delete database: '${n}' - Error: ${t}`), o(t)
                        }
                    }))
                }
                closeThisDatabase() {
                    return this.instance.close(), this.logger.zsymb(6, 9436, 30004, `The database connection is manually closed due to manual database closing: '${this.fullName}'`), new Promise((e => {
                        setTimeout((() => {
                            e()
                        }), 1e4)
                    }))
                }
                static async factory(e, t) {
                    const n = new g((async function() {
                            const n = indexedDB.open(e, t.version);
                            n.onupgradeneeded = async e => {
                                if (null !== e.newVersion) try {
                                    const r = new E(t, n.result, n.transaction);
                                    await r.upgrade(e.oldVersion, e.newVersion), await r.validate()
                                } catch (r) {
                                    throw n.transaction.abort(), r
                                }
                            };
                            const i = S.e.start(S.b.db_ready),
                                o = Date.now(),
                                s = r.ModuleContainer.resolve(u.a),
                                a = setTimeout((() => {
                                    s.sendLongOpenRequestQos(e)
                                }), 2e4),
                                c = await m(n).catch((e => {
                                    throw clearTimeout(a), e
                                })),
                                d = Date.now();
                            clearTimeout(a);
                            const l = d - o;
                            return s.sendSuccessOpenDBDurationQos(e, o, l), i.end({
                                dbName: e
                            }), c.onversionchange = function(e) {
                                if (null === e.newVersion) {
                                    e.target.close()
                                }
                            }, c
                        })),
                        i = r.ModuleContainer.resolve(d.a),
                        o = new O(t, n),
                        s = new T(n, i);
                    return t.tables.forEach((e => e.transforms.forEach((e => e.init(t.cipherKey))))), new A(t, e, i, n, s, o)
                }
            }
            let R = r.ModuleContainer.injectable()(P = class {
                async createAdapter(e, t) {
                    return A.factory(e, t)
                }
            }) || P;
            r.ModuleContainer.registerSingleton(i.b, R)
        },
        cWgI: function(e, t, n) {
            var r = n("39uu");
            e.exports = function(e, t) {
                if (!r(e)) return e;
                var n, i;
                if (t && "function" == typeof(n = e.toString) && !r(i = n.call(e))) return i;
                if ("function" == typeof(n = e.valueOf) && !r(i = n.call(e))) return i;
                if (!t && "function" == typeof(n = e.toString) && !r(i = n.call(e))) return i;
                throw TypeError("Can't convert object to primitive value")
            }
        },
        cfqX: function(e, t, n) {
            "use strict";
            var r = n("N1xz"),
                i = n("K+9E");
            const o = e => e ? e - r.a.EPOCH : Date.now() - r.a.EPOCH,
                s = e => {
                    var t, n;
                    const i = {
                        duration: null !== (t = e.duration) && void 0 !== t ? t : 0,
                        usageTime: o(e.endAt),
                        data: e.exposeInfo(),
                        processName: r.a.process,
                        systemInfo: r.a.UsageMonitor.getSystemInfo()
                    };
                    null !== (n = e.stackTrace) && void 0 !== n && n.length && (i.stackTrace = e.stackTrace);
                    return [i, ...e.info || []]
                },
                a = e => {
                    let t = 0;
                    if (e.trim())
                        for (let r = 0; r < e.length; r++) t = 31 * t + e.charCodeAt(r), t = (n = t) > 2147483647 || n < -2147483648 ? 4294967295 & n : n;
                    var n;
                    return t
                };
            var c = n("fbdB");
            var d = class {
                    constructor(e) {
                        this.epoch = void 0, this.processName = void 0, this.events = void 0, this.processName = e, this.events = []
                    }
                    getName() {
                        return this.processName
                    }
                    add(e, t) {
                        this.events.some((n => n.name === e && n.time === t)) || this.events.push({
                            name: e,
                            time: t
                        })
                    }
                    saveEpoch(e) {
                        this.epoch || (this.epoch = e), this.add(c.a.bootstrap, e)
                    }
                    getEpoch() {
                        return this.epoch
                    }
                    get(e) {
                        return this.events.filter((t => t.name === e))[0]
                    }
                    getAll() {
                        return this.events
                    }
                    merge(e) {
                        const t = e.getEpoch();
                        t && this.saveEpoch(t), e.getAll().forEach((e => {
                            this.add(e.name, e.time)
                        })), this.events = this.events.sort(((e, t) => e.time - t.time))
                    }
                    hashCode() {
                        return a(`${this.epoch}`) ^ a(this.processName) ^ a(JSON.stringify(this.events))
                    }
                    cleanUp() {
                        this.events = []
                    }
                },
                u = n("KBA3");
            r.a.register(i.a.DATA_MANAGER, class {
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("data-manager")), this._logger
                }
                constructor() {
                    this.process = void 0, this.processEvents = {}, this._logger = void 0, this.process = new d(r.a.process), u.a.onDisable((() => this.cleanUp))
                }
                cleanUp() {
                    this.processEvents = {}, this.process.cleanUp()
                }
                getProcess(e) {
                    return e && e !== r.a.process ? (this.processEvents[e] || (this.processEvents[e] = new d(e)), this.processEvents[e]) : this.process
                }
                saveEvent(e, t) {
                    this.getProcess().add(e, t)
                }
                getEvent(e) {
                    return this.getProcess().get(e)
                }
                saveEpoch(e, t) {
                    this.getProcess(e).saveEpoch(t)
                }
                getEpoch(e) {
                    return this.getProcess(e).getEpoch()
                }
                getCurrentProcessData() {
                    return this.process
                }
                getOtherProcessData() {
                    return Object.values(this.processEvents)
                }
                mergeProcessData(e) {
                    this.getProcess(e.getName()).merge(e)
                }
                freezeProcessData(e) {
                    return {
                        epoch: e.getEpoch(),
                        processName: e.getName(),
                        events: e.getAll()
                    }
                }
                hydrateProcessData(e) {
                    try {
                        if (e.processName) {
                            var t;
                            const n = new d(e.processName);
                            return e.epoch && !isNaN(Number(e.epoch)) && n.saveEpoch(Number(e.epoch)), null !== (t = e.events) && void 0 !== t && t.length && e.events.forEach((e => {
                                e.name && !isNaN(Number(e.time)) && n.add(e.name, Number(e.time))
                            })), n
                        }
                    } catch (r) {
                        var n;
                        null === (n = this.Logger) || void 0 === n || n.zsymb(23, 9588, 3e4, "Fail on hydrate process data. ERR {}", String(r))
                    }
                }
                getHashCode() {
                    const e = this.process.hashCode();
                    let t = 0;
                    return Object.values(this.processEvents).forEach((e => t += e.hashCode())), e + t
                }
            });
            var l = n("CHYU");
            var p = class {
                constructor(e) {
                    this.record = void 0, this.record = e
                }
                end(e) {
                    if (!this.record || this.record.isDone) return;
                    const t = Date.now();
                    r.a.MetricManager.endRecord(this.record, t, e)
                }
                pushInfo(e) {
                    this.record && !this.record.isDone && this.record.pushInfo(e)
                }
            };
            var m = class {
                constructor() {
                    this.startingProcess = void 0, this.startingProcess = new Map
                }
                findStartingProcess(e) {
                    return this.startingProcess.get(e)
                }
                saveStartingProcess(e, t) {
                    if (!this.startingProcess.has(e)) {
                        if (this.startingProcess.size >= u.a.getConfig().max_starting_process_dictionary) {
                            const [e] = Array.from(this.startingProcess.keys());
                            this.startingProcess.delete(e)
                        }
                        return this.startingProcess.set(e, t)
                    }
                }
                cleanUp() {
                    this.startingProcess = new Map
                }
            };
            const h = new Set([c.b.start_up_time]);
            var f = n("MNz0");
            r.a.register(i.a.METRIC_MANAGER, class {
                constructor() {
                    this._records = void 0, this._logger = void 0, this._history = void 0, this._oneTimeMetrics = void 0, this.isEnabled = void 0
                }
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("manager")), this._logger
                }
                get records() {
                    return this._records || (this._records = {}), {
                        set: e => {
                            const t = e.key;
                            this._records[t] || (this._records[t] = []), this._records[t].push(e)
                        },
                        get: (e, t, n) => {
                            const i = r.a.MetricFactory.getKey(e, t),
                                o = this._records[i];
                            return null != o && o.length && n ? o.find(n) : null == o ? void 0 : o[0]
                        },
                        delete: e => {
                            const t = e.key;
                            if (this._records[t]) {
                                const n = this._records[t].findIndex((t => t == e));
                                n > -1 && this._records[t].splice(n, 1), 0 === this._records[t].length && delete this._records[t]
                            }
                        },
                        deleteByName: e => {
                            Object.keys(this._records).forEach((t => {
                                t.startsWith(e) && delete this._records[t]
                            }))
                        }
                    }
                }
                get OneTimeMetrics() {
                    return {
                        setStart: e => {
                            this._oneTimeMetrics || (this._oneTimeMetrics = new Set);
                            const t = `${e}_start`;
                            this._oneTimeMetrics.add(t)
                        },
                        hasStart: e => {
                            var t;
                            const n = `${e}_start`;
                            return !(null === (t = this._oneTimeMetrics) || void 0 === t || !t.has(n))
                        },
                        setEnd: e => {
                            this._oneTimeMetrics || (this._oneTimeMetrics = new Set);
                            const t = `${e}_end`;
                            this._oneTimeMetrics.add(t)
                        },
                        hasEnd: e => {
                            var t;
                            const n = `${e}_end`;
                            return !(null === (t = this._oneTimeMetrics) || void 0 === t || !t.has(n))
                        }
                    }
                }
                get history() {
                    return this._history || (this._history = new m), this._history
                }
                ready() {
                    u.a.onConfigChange((() => {
                        r.a.process === l.a.Render && r.a.MetricTransporter.transmitConfig();
                        const e = u.a.getConfig().enable_for_staging_account,
                            t = u.a.getConfig().staging_account;
                        this.isEnabled = u.a.enable || e && t, this.isEnabled || this.cleanUp()
                    }))
                }
                cleanUp() {
                    this._records = {}, this._oneTimeMetrics = new Set, this.history.cleanUp()
                }
                exit() {
                    r.a.process === l.a.Main && (r.a.UsageMonitor.exit(), r.a.LocalStat.export(!0))
                }
                record(e) {
                    if (!r.a.isInstalled() || !r.a.canIUse()) return;
                    if (!1 === this.isEnabled) return;
                    const t = Date.now();
                    r.a.DataManager.saveEvent(e, t), e === c.a.main_ready && r.a.process === l.a.Main && r.a.MetricTransporter.onMainReady(), e === c.a.main_window_finish_load && r.a.process === l.a.Main && r.a.UsageMonitor.onMainFinishLoad();
                    const n = u.a.getConfig().enable_write_log || !1;
                    r.a.process !== l.a.Main && n && r.a.MetricResolver.resolveEvent(e, t)
                }
                handleOneTimeMetric(e, t) {
                    h.has(e) && (t ? this.OneTimeMetrics.setStart(e) : this.OneTimeMetrics.setEnd(e))
                }
                start(e, t) {
                    if (!r.a.canIUse() || this.OneTimeMetrics.hasStart(e)) return this.createSection();
                    if (!1 === this.isEnabled) return this.createSection();
                    const n = Date.now(),
                        i = r.a.SchemaManager.loadSchema(e);
                    if (i.disabled) return this.createSection();
                    i.mode === f.a.ACCEPT_LAST && this.records.deleteByName(e), this.handleOneTimeMetric(e, !0);
                    const o = r.a.MetricFactory.create(e, t, i);
                    return o.setStartAt(n), this.processStackTrace(o), this.records.set(o), this.history.saveStartingProcess(e, r.a.process), this.createSection(o)
                }
                end(e, t, n) {
                    if (!r.a.canIUse() || this.OneTimeMetrics.hasEnd(e)) return;
                    if (!1 === this.isEnabled) return;
                    const i = Date.now(),
                        o = r.a.SchemaManager.loadSchema(e);
                    if (o.disabled) return;
                    this.handleOneTimeMetric(e, !1);
                    let s = this.records.get(e, t, (e => !!(e.startAt && e.startAt <= i)));
                    if (!s && this.isFromCurrentEpoch(e) && (s = this.createPartialFromCurrentEpoch(e, t)), s) this.endRecord(s, i, n);
                    else {
                        if (this.isFromCurrentProcess(e)) return;
                        const s = r.a.MetricFactory.create(e, t, o, !0);
                        s.setEndAt(i), s.pushInfo(n), s.evaluate(), r.a.MetricTransporter.transmit(s)
                    }
                }
                endRecord(e, t, n) {
                    e.isDone || (null != n && e.pushInfo(n), e.setEndAt(t), e.evaluate(), this.processStackTrace(e, !0), this.resolve(e))
                }
                createSection(e) {
                    return new p(e)
                }
                resolve(e) {
                    this.records.delete(e), r.a.MetricResolver.resolve(e, !0)
                }
                onReceivePartialRecords(e) {
                    var t;
                    if (!1 === this.isEnabled) return [];
                    const n = [];
                    return e.forEach((e => {
                        if (this.OneTimeMetrics.hasStart(e.name)) return;
                        this.handleOneTimeMetric(e.name, !0);
                        let t = this.records.get(e.name, e.key, (t => !!(e.type === t.type && t.startAt && e.endAt && t.startAt <= e.endAt)));
                        !t && this.isFromCurrentProcess(e.name) && (t = this.createPartialFromCurrentEpoch(e.name, e.key)), t ? t.isDone || (t.evaluate(e), this.resolve(t)) : n.push(e)
                    })), n.length && (null === (t = this.Logger) || void 0 === t || t.zsymb(11, 10255, 3e4, "[WARN] receive unknownRecords: {}", n)), n
                }
                isFromCurrentEpoch(e, t) {
                    let n = t;
                    return n || (n = r.a.SchemaManager.loadSchema(e)), !!n.startFromEpoch && (Array.isArray(n.fromProcess) ? n.fromProcess.some((e => e === r.a.process)) : !n.fromProcess || n.fromProcess === r.a.process)
                }
                isFromCurrentProcess(e, t) {
                    var n;
                    if (this.history.findStartingProcess(e) === r.a.process) return !0;
                    let i = t;
                    return i || (i = r.a.SchemaManager.loadSchema(e)), !(null === (n = i) || void 0 === n || !n.fromProcess) && (Array.isArray(i.fromProcess) ? i.fromProcess.some((e => e === r.a.process)) : i.fromProcess === r.a.process)
                }
                createPartialFromCurrentEpoch(e, t) {
                    const n = r.a.SchemaManager.loadSchema(e),
                        i = r.a.MetricFactory.create(e, t, n);
                    return i.setStartAt(r.a.EPOCH), this.records.set(i), i
                }
                processStackTrace(e, t) {
                    if (t || e.stackTrace) {
                        if (t && e.stackTrace) {
                            const t = e.getSchema();
                            let n = !1;
                            null != t && t.showStackTrace && (n = "boolean" == typeof t.showStackTrace ? t.showStackTrace : t.showStackTrace(...s(e))), n || e.deleteStackTrace()
                        }
                    } else {
                        let t = [];
                        const n = (new Error).stack.split("\n");
                        0 === n[0].indexOf("Error") && (t = n.slice(1)), t = t.slice(3).map((e => e.replace(/\s+at\s+/, ""))), e.addStackTrace(t)
                    }
                }
            });
            var g = n("rFEu"),
                y = n("AoYG");
            r.a.register(i.a.METRIC_SCHEMA_MANAGER, class {
                constructor() {
                    this.metricSchemas = void 0, this._customMetrics = void 0, this.isReady = void 0
                }
                get customMetrics() {
                    return this._customMetrics || (this._customMetrics = new Map), this._customMetrics
                }
                ready() {
                    if (this.isReady) return;
                    this.metricSchemas = new Map;
                    n("K6Wi").default.getSchemas().forEach((e => {
                        e.getMetrics().forEach((e => {
                            this.metricSchemas.set(e.name, e)
                        }))
                    })), this.isReady = !0, u.a.onDisable((() => this.cleanUp))
                }
                cleanUp() {
                    this.metricSchemas.clear(), this._customMetrics && this._customMetrics.clear()
                }
                loadSchema(e) {
                    this.isReady || this.ready();
                    const t = this.metricSchemas.get(e);
                    if (t) return t;
                    const n = Object(g.b)(e);
                    return this.customMetrics.set(e, n), n
                }
                getMemoryUsageSchemas() {
                    this.isReady || this.ready();
                    let e = [];
                    return this.metricSchemas.forEach((t => {
                        t.type === y.a.MEMORY && e.push(t)
                    })), e
                }
                getCPUUsageSchemas() {
                    this.isReady || this.ready();
                    let e = [];
                    return this.metricSchemas.forEach((t => {
                        t.type === y.a.CPU && e.push(t)
                    })), e
                }
                hasUsageSchemas() {
                    return !!this.getMemoryUsageSchemas().length || !!this.getCPUUsageSchemas().length
                }
            });
            var _ = n("VTBJ"),
                E = n("dFSO");
            class b {
                constructor(e) {
                    this.schema = void 0, this.id = void 0, this.name = void 0, this.key = void 0, this.type = void 0, this.startAt = void 0, this.endAt = void 0, this.stackTrace = void 0, this.duration = void 0, this.durationText = void 0, this.version = void 0, this.isDone = void 0, this.info = void 0, this.usageTime = void 0, this.usageTimeText = void 0, this.data = void 0, this.id = e.id, this.name = e.name, this.key = e.key, this.type = e.type || y.a.TIME, this.schema = e.metricSchema, this.version = e.version || b.DEFAULT_VERSION
                }
                setStartAt(e) {
                    this.startAt = e
                }
                setEndAt(e) {
                    this.endAt = e
                }
                setDuration(e) {
                    this.duration = e
                }
                addStackTrace(e) {
                    this.stackTrace = [...this.stackTrace || [], ...e]
                }
                deleteStackTrace() {
                    this.stackTrace = void 0
                }
                exposeInfo() {
                    var e;
                    return null !== (e = this.data) && void 0 !== e ? e : null
                }
                setData(e) {
                    this.data = e
                }
                resolve() {
                    this.isDone = !0
                }
                getSchema() {
                    return this.schema
                }
                pushInfo(e) {
                    this.info || (this.info = []), this.info.push(e)
                }
                evaluate(e) {
                    this.isDone || (e && e.endAt && (this.endAt = e.endAt), this.startAt && this.endAt && (this.duration = this.endAt - this.startAt), this.duration && (this.durationText = Object(E.f)(this.duration)), this.endAt && (this.usageTime = o(this.endAt), this.usageTime && (this.usageTimeText = Object(E.f)(this.usageTime))))
                }
                clone(e) {
                    null != e.startAt && (this.startAt = Number(e.startAt)), null != e.endAt && (this.endAt = Number(e.endAt)), null != e.duration && (this.duration = Number(e.duration)), null != e.data && (this.data = e.data), this.durationText = e.durationText, this.isDone = !0 === e.isDone, this.usageTime = e.usageTime, this.usageTimeText = e.usageTimeText;
                    try {
                        e.stackTrace && (this.stackTrace = e.stackTrace), e.info && (this.info = JSON.parse(e.info) || [])
                    } catch (t) {}
                }
            }
            b.DEFAULT_VERSION = 1;
            var I = b;
            class v extends I {
                constructor(e) {
                    super(e), this.type = y.a.TIME, this.version = v.VERSION
                }
                evaluate(e) {
                    super.evaluate(e)
                }
                exposeInfo() {
                    return {
                        name: this.name,
                        duration: this.duration,
                        startAt: this.startAt,
                        endAt: this.endAt
                    }
                }
                resolve() {
                    this.isDone || (this.info = [...this.info || [], {
                        duration: this.duration,
                        startAt: this.startAt,
                        endAt: this.endAt
                    }], super.resolve())
                }
            }
            v.VERSION = 1;
            var T = v;
            class O extends I {
                constructor(e) {
                    super(e), this.usage = void 0, this.passedTime = void 0, this.type = y.a.USAGE, this.version = O.VERSION
                }
                evaluate() {
                    super.evaluate()
                }
                exposeInfo() {
                    return {
                        usage: this.usage,
                        passedTime: this.passedTime
                    }
                }
                resolve() {
                    super.resolve()
                }
                setData(e, t) {
                    this.usage = e, this.passedTime = t
                }
            }
            O.VERSION = 1;
            var w, P = O;
            r.a.register(i.a.METRIC_FACTORY, class {
                    constructor() {
                        this.idCounter = void 0
                    }
                    generateId() {
                        return null == this.idCounter && (this.idCounter = 0), this.idCounter++, this.idCounter
                    }
                    getKey(e, t) {
                        return e + (null != t ? `_${t}` : "")
                    }
                    create(e, t, n, r) {
                        let i;
                        const o = (null == n ? void 0 : n.type) || y.a.TIME;
                        return i = o === y.a.CPU || o === y.a.MEMORY ? new P({
                            id: this.generateId(),
                            name: e,
                            key: this.getKey(e, t),
                            metricSchema: n
                        }) : o === y.a.TIME ? new T({
                            id: r ? 0 : this.generateId(),
                            name: e,
                            key: this.getKey(e, t),
                            metricSchema: n
                        }) : new I({
                            id: r ? 0 : this.generateId(),
                            type: o,
                            name: e,
                            key: this.getKey(e, t),
                            metricSchema: n
                        }), i
                    }
                    clone(e) {
                        let t;
                        const n = (null == e ? void 0 : e.type) || y.a.TIME,
                            r = {
                                id: this.generateId(),
                                type: n,
                                name: e.name,
                                key: e.key,
                                version: e.version
                            };
                        return t = n === y.a.USAGE ? new P(Object(_.a)({}, r)) : n === y.a.TIME ? new T(Object(_.a)({}, r)) : new I(Object(_.a)({}, r)), t.clone(e), t
                    }
                }),
                function(e) {
                    e.TRANSMIT_RECORDS = "TRANSMIT_RECORDS", e.TRANSMIT_ALL = "TRANSMIT_ALL", e.TRANSMIT_EVENTS = "TRANSMIT_EVENTS", e.TRANSMIT_CONFIG = "TRANSMIT_CONFIG", e.TRANSMIT_FPS = "TRANSMIT_FPS", e.TRANSMIT_FPS_SECTION = "TRANSMIT_FPS_SECTION", e.REGISTER = "REGISTER", e.SEND_STATS = "SEND_STATS"
                }(w || (w = {}));
            var S = w;
            var A = class {
                constructor(e) {
                    this.messageChannel = void 0, this.transportDataHolder = void 0, this.sending = void 0, this.sendingTimeout = void 0, this.idleRequestId = void 0, this.lastSentDataManagerHash = void 0, this.requestIdle = e => {
                        try {
                            var t;
                            if (r.a.process !== l.a.Main)
                                if (window && "function" == typeof(null === (t = window) || void 0 === t ? void 0 : t.requestIdleCallback)) return window.requestIdleCallback(e)
                        } catch (n) {}
                        return setTimeout((() => {
                            e()
                        }), 1)
                    }, this.cancelRequestIdle = () => {
                        try {
                            var e;
                            if (r.a.process !== l.a.Main)
                                if ("number" == typeof this.idleRequestId) return window && "function" == typeof(null === (e = window) || void 0 === e ? void 0 : e.requestIdleCallback) && window.cancelIdleCallback(this.idleRequestId), void(this.idleRequestId = void 0)
                        } catch (t) {}
                        clearTimeout(this.idleRequestId)
                    }, this.messageChannel = e, this.transportDataHolder = {}, this.sending = !1
                }
                send(e, t, n, r) {
                    var i;
                    if (!this.messageChannel) return;
                    let o = n,
                        s = e;
                    if (null != (null == r ? void 0 : r.fromClientId) && (s += `_${r.fromClientId}`), null != (null == r ? void 0 : r.toClientId) && (s += `_${r.toClientId}`), Array.isArray(n)) {
                        var a, c;
                        let e = [];
                        const r = null === (a = this.transportDataHolder[s]) || void 0 === a || null === (c = a.data) || void 0 === c ? void 0 : c[t];
                        Array.isArray(r) && null != r && r.length && (e = [...r, ...n], o = e)
                    } else if ("object" == typeof n) {
                        var d, u;
                        const e = null === (d = this.transportDataHolder[s]) || void 0 === d || null === (u = d.data) || void 0 === u ? void 0 : u[t];
                        e && (o = Object(_.a)(Object(_.a)({}, e || {}), o))
                    }
                    const l = {
                        action: e,
                        data: Object(_.a)(Object(_.a)({}, (null === (i = this.transportDataHolder[s]) || void 0 === i ? void 0 : i.data) || {}), {}, {
                            [t]: o
                        }),
                        fromClientId: null == r ? void 0 : r.fromClientId,
                        toClientId: null == r ? void 0 : r.toClientId
                    };
                    this.transportDataHolder[s] = l, this.startSend()
                }
                exit() {
                    this.sending && (clearTimeout(this.sendingTimeout), this.cancelRequestIdle())
                }
                startSend() {
                    this.sending || (this.sending = !0, clearTimeout(this.sendingTimeout), this.cancelRequestIdle(), this.sendingTimeout = setTimeout((() => {
                        this.idleRequestId = this.requestIdle((() => {
                            if (this.messageChannel) {
                                const e = this.transportDataHolder;
                                this.transportDataHolder = {};
                                const t = this.getExtraTransferInfo();
                                let n = !!t;
                                const r = [];
                                Object.values(e).forEach((e => {
                                    const i = {
                                        action: e.action,
                                        data: e.data,
                                        fromClientId: null == e ? void 0 : e.fromClientId,
                                        toClientId: null == e ? void 0 : e.toClientId
                                    };
                                    n && "object" == typeof i.data && (i.data.extraInfo = t, n = !1), r.push(i)
                                })), r.length && this.messageChannel.send(r)
                            }
                            this.sending = !1
                        }))
                    }), 3e3))
                }
                getExtraTransferInfo() {
                    if (this.lastSentDataManagerHash !== r.a.DataManager.getHashCode()) {
                        this.lastSentDataManagerHash = r.a.DataManager.getHashCode();
                        const e = r.a.DataManager.getCurrentProcessData();
                        return {
                            processData: r.a.DataManager.freezeProcessData(e)
                        }
                    }
                }
            };
            var R, M = class {
                constructor() {
                    this.messageChannel = void 0, this.sender = void 0, this.onMessage = e => {
                        e.forEach((e => {
                            if (r.a.process === l.a.Main) {
                                var t;
                                const {
                                    fromClientId: c,
                                    action: p,
                                    data: m
                                } = e;
                                var n;
                                if (this.onReceiveProcessEventData(null == m || null === (t = m.extraInfo) || void 0 === t ? void 0 : t.processData), p === S.TRANSMIT_RECORDS) {
                                    if (null != m && null !== (n = m.records) && void 0 !== n && n.length) {
                                        const e = [];
                                        m.records.forEach((t => {
                                            const n = this.hydrateMetricRecord(t);
                                            n && e.push(n)
                                        }));
                                        const t = r.a.MetricManager.onReceivePartialRecords(e);
                                        if (t.length) {
                                            const e = this.messageChannel.getClients().filter((e => e.id !== c));
                                            if (e.length)
                                                for (const n of e) {
                                                    var i;
                                                    null === (i = this.sender) || void 0 === i || i.send(S.TRANSMIT_RECORDS, "records", t, {
                                                        fromClientId: c,
                                                        toClientId: n.id
                                                    })
                                                }
                                        }
                                    }
                                } else if (p === S.REGISTER) {
                                    var o;
                                    if ((null == m ? void 0 : m.processName) !== l.a.Render) null === (o = this.sender) || void 0 === o || o.send(S.TRANSMIT_CONFIG, "config", u.a.getConfig(), {
                                        toClientId: c
                                    })
                                } else if (p === S.TRANSMIT_ALL) {
                                    var s;
                                    null != m && null !== (s = m.records) && void 0 !== s && s.length && m.records.forEach((e => {
                                        const t = this.hydrateMetricRecord(e);
                                        t && r.a.LocalStat.record(t)
                                    }))
                                } else if (p === S.SEND_STATS) try {
                                        const e = m.processStats;
                                        e && r.a.UsageMonitor.onReceiveProcessStats(e)
                                    } catch (d) {} else if (p === S.TRANSMIT_EVENTS) this.onReceiveProcessEventData(m.processData);
                                    else if (p === S.TRANSMIT_CONFIG) {
                                    (null == m ? void 0 : m.config) && u.a.mergeSetting(m.config);
                                    const e = this.messageChannel.getClients().filter((e => e.id !== c));
                                    if (e.length)
                                        for (const t of e) {
                                            var a;
                                            null === (a = this.sender) || void 0 === a || a.send(S.TRANSMIT_CONFIG, "config", u.a.getConfig(), {
                                                toClientId: t.id
                                            })
                                        }
                                } else p === S.TRANSMIT_FPS ? null != m && m.fps && r.a.LocalStat.recordFps(m.fps) : p === S.TRANSMIT_FPS_SECTION && null != m && m.fps && r.a.LocalStat.recordFpsSection(m.fps)
                            } else {
                                const {
                                    action: t,
                                    data: n
                                } = e;
                                var c;
                                if (t === S.TRANSMIT_RECORDS) null != n && null !== (c = n.records) && void 0 !== c && c.length && r.a.MetricManager.onReceivePartialRecords(n.records);
                                else t === S.TRANSMIT_CONFIG && (null == n ? void 0 : n.config) && u.a.mergeSetting(n.config)
                            }
                        }))
                    }
                }
                listen(e) {
                    var t;
                    this.messageChannel = e, null === (t = this.messageChannel) || void 0 === t || t.onMessage(this.onMessage)
                }
                bindSender(e) {
                    this.sender = e
                }
                onReceiveProcessEventData(e) {
                    if (e) {
                        const t = r.a.DataManager.hydrateProcessData(e);
                        t && r.a.DataManager.mergeProcessData(t)
                    }
                }
                hydrateMetricRecord(e) {
                    try {
                        return r.a.MetricFactory.clone(e)
                    } catch (t) {}
                }
            };
            ! function(e) {
                e.RENDERER = "metricz-renderer", e.MAIN = "metricz-main"
            }(R || (R = {}));
            r.a.register(i.a.METRIC_TRANSPORTER, class {
                constructor() {
                    this.messageChannel = void 0, this.isReady = !1, this.registered = void 0, this._sender = void 0, this._receiver = void 0, this._logger = void 0
                }
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("transporter")), this._logger
                }
                createMessageChannel() {
                    if (this.messageChannel) return;
                    let e;
                    try {
                        0
                    } catch (t) {}
                    this.receiver.listen(this.messageChannel)
                }
                get sender() {
                    return this._sender || (this._sender = new A(this.messageChannel)), this._sender
                }
                get receiver() {
                    return this._receiver || (this._receiver = new M), this._receiver.bindSender(this.sender), this._receiver
                }
                ready() {
                    this.isReady || (this.isReady = !0, this.createMessageChannel(), this.checkConnection())
                }
                onMainReady() {
                    this.createMessageChannel()
                }
                transmit(e) {
                    if (r.a.process !== l.a.Main) {
                        const t = [this.freezeMetricRecord(e)];
                        this.sender.send(S.TRANSMIT_RECORDS, "records", t)
                    }
                }
                checkConnection() {
                    this.registered || r.a.process === l.a.Main || this.registered || (this.registered = !0, this.sender.send(S.REGISTER, "processName", r.a.process))
                }
                transmitProcessStats(e) {
                    r.a.process !== l.a.Main && this.sender.send(S.SEND_STATS, "processStats", e)
                }
                transmitRecords(e) {
                    if (r.a.process !== l.a.Main) {
                        const t = e.map((e => this.freezeMetricRecord(e)));
                        this.sender.send(S.TRANSMIT_ALL, "records", t)
                    }
                }
                transmitEvents() {
                    this.sender.send(S.TRANSMIT_EVENTS, "extraInfo", {})
                }
                transmitConfig() {
                    this.sender.send(S.TRANSMIT_CONFIG, "config", u.a.getConfig())
                }
                transmitFps(e, t, n) {
                    this.sender.send(S.TRANSMIT_FPS, "fps", Object(_.a)({
                        processName: r.a.process,
                        recordAt: t,
                        usageTime: n
                    }, e))
                }
                transmitFpsSection(e, t) {
                    this.sender.send(S.TRANSMIT_FPS_SECTION, "fps", Object(_.a)({
                        processName: r.a.process,
                        taskKey: t
                    }, e))
                }
                exit() {
                    this.sender.exit()
                }
                freezeMetricRecord(e) {
                    return JSON.parse(JSON.stringify(Object(_.a)(Object(_.a)({}, e), {}, {
                        info: JSON.stringify(e.info)
                    })))
                }
            });
            n("ncfp");
            var N = class {
                constructor() {
                    this.qosLogControl = void 0, this.reservedLogs = void 0, this.enabled = !0, this.tsMaxReserved = void 0, this.MAX_RESERVED_LOGS = 1e3, this.MAX_TIMEOUT_DISABLE = Object(E.g)("5m")
                }
                register(e) {
                    this.qosLogControl = e
                }
                send(e) {
                    var t, n, i, o;
                    this.qosLogControl ? r.a.process === l.a.Main ? null !== (t = this.qosLogControl) && void 0 !== t && t._readyQos ? (this.handleReservedLogs(), null === (n = this.qosLogControl) || void 0 === n || n.logQos({
                        success: e.success,
                        commandId: e.cmdId,
                        subCommandId: e.subCmdId || 0,
                        duration: e.duration,
                        errorCode: (null == e ? void 0 : e.errorCode) || 0,
                        params: e.params,
                        startTime: e.startTime
                    })) : this.reserve(e) : (this.handleReservedLogs(), e.success ? null === (i = this.qosLogControl) || void 0 === i || i.increaseSuccess(e.cmdId, e.subCmdId, e.duration, e.params) : null === (o = this.qosLogControl) || void 0 === o || o.increaseFailed(e.cmdId, e.subCmdId, e.duration, e.errorCode, e.startTime, e.params)) : this.reserve(e)
                }
                handleReservedLogs() {
                    var e;
                    if (null !== (e = this.reservedLogs) && void 0 !== e && e.length) {
                        const e = this.reservedLogs;
                        this.reservedLogs = [], e.forEach((e => {
                            this.send(e)
                        }))
                    }
                }
                reserve(e) {
                    this.reservedLogs && this.reservedLogs.length >= this.MAX_RESERVED_LOGS && (this.reservedLogs.shift(), this.tsMaxReserved ? Date.now() - this.tsMaxReserved >= this.MAX_TIMEOUT_DISABLE && (this.enabled = !1) : this.tsMaxReserved = Date.now()), this.enabled && (this.reservedLogs || (this.reservedLogs = []), this.reservedLogs.push(e))
                }
            };
            var C = class {
                constructor() {
                    this._qosSender = void 0, this._logger = void 0, this.pendingQosLogs = void 0, this.disabled = void 0, this.MAX_LOGS_ROLL_OUT = 1e3
                }
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("qos")), this._logger
                }
                get qosSender() {
                    return this._qosSender || (this._qosSender = new N), this._qosSender
                }
                registerQosControl(e) {
                    this.qosSender.register(e)
                }
                checkEnableSubmitLog() {
                    var e;
                    const t = u.a.getConfig().enable_submit_qos,
                        n = (u.a.getConfig().submit_qos_except_dev, u.a.getConfig().enable_for_staging_account),
                        r = u.a.getConfig().staging_account;
                    let i = (u.a.enable || n && r) && t;
                    var o;
                    (null === (e = this.Logger) || void 0 === e || e.zsymb(3, 10257, 3e4, "isEnabled: {}", i), i) ? null !== (o = this.pendingQosLogs) && void 0 !== o && o.length && this.pendingQosLogs.forEach((e => {
                        this.logQos(e)
                    })): (this.disabled = !0, this.pendingQosLogs = [])
                }
                send(e, t) {
                    if (this.disabled) return;
                    if (!t.qos || t.disabled || !e.isDone) return;
                    const n = {
                        success: !0,
                        cmdId: t.qos.cmdId,
                        subCmdId: t.qos.subCmdId || 0,
                        duration: e.duration,
                        startTime: e.startAt,
                        params: [...e.info || []]
                    };
                    u.a.getConfig().enable_submit_qos ? this.logQos(n) : (this.pendingQosLogs || (this.pendingQosLogs = []), this.pendingQosLogs.length >= this.MAX_LOGS_ROLL_OUT && this.pendingQosLogs.shift(), this.pendingQosLogs.push(n))
                }
                logQos(e) {
                    try {
                        this.qosSender.send(e)
                    } catch (n) {
                        var t;
                        null === (t = this.Logger) || void 0 === t || t.zsymb(20, 10257, 30001, "metric logQos ERR: {}", n)
                    }
                }
            };
            r.a.register(i.a.METRIC_RESOLVER, class {
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("resolver")), this._logger
                }
                get records() {
                    return {
                        push: e => {
                            this._records || (this._records = []), this._records.push(e)
                        },
                        getAll: () => this._records || [],
                        clear: () => {
                            var e;
                            (null === (e = this._records) || void 0 === e ? void 0 : e.length) && (this._records = [])
                        }
                    }
                }
                get qosManager() {
                    return this._qosManager || (this._qosManager = new C), this._qosManager
                }
                constructor() {
                    this._records = void 0, this._logger = void 0, this._qosManager = void 0, this.lastTransmit = void 0, this.isReady = void 0, this.configSynced = void 0, this.timerSendRecord = void 0, this.MAX_TRANSMIT_TIMEOUT = 5e3, this.lastTransmit = r.a.EPOCH
                }
                ready() {
                    this.isReady || (u.a.onConfigChange((() => {
                        this.configSynced = !0, this.handleRecordsByConfig(), this.qosManager.checkEnableSubmitLog()
                    })), this.isReady = !0)
                }
                handleRecordsByConfig() {
                    const e = u.a.getConfig().enable_for_staging_account,
                        t = u.a.getConfig().staging_account,
                        n = u.a.getConfig().enable_write_log || !1;
                    if ((u.a.enable || e && t) && n) {
                        const e = Date.now();
                        this.checkNeedTransmitToMain() ? (this.timerSendRecord && clearTimeout(this.timerSendRecord), this.transmitRecords(), this.lastTransmit = e) : this.records.getAll().length && e - this.lastTransmit < this.MAX_TRANSMIT_TIMEOUT && (this.timerSendRecord && clearTimeout(this.timerSendRecord), this.timerSendRecord = setTimeout((() => {
                            this.transmitRecords(), this.lastTransmit = Date.now()
                        }), this.MAX_TRANSMIT_TIMEOUT - (e - this.lastTransmit)))
                    } else this.records.clear()
                }
                checkNeedTransmitToMain() {
                    return this.records.getAll().length >= u.a.getConfig().max_cache_records_resolved || Date.now() - this.lastTransmit >= this.MAX_TRANSMIT_TIMEOUT
                }
                resolve(e, t) {
                    void 0 === t && (t = !1), e.isDone || e.resolve(), this.analyze(e), t && r.a.process === l.a.Main && r.a.LocalStat.record(e)
                }
                resolveEvent(e, t) {
                    r.a.MetricTransporter.transmitEvents()
                }
                exportAll() {
                    this.transmitRecords()
                }
                registerQosControl(e) {
                    this.qosManager.registerQosControl(e)
                }
                exit() {
                    this.timerSendRecord && clearTimeout(this.timerSendRecord)
                }
                transmitRecords() {
                    const e = this.records.getAll();
                    this.records.clear(), e.length && r.a.MetricTransporter.transmitRecords(e)
                }
                analyze(e) {
                    const t = e.getSchema();
                    if (null == t || !t.statement) return;
                    t.statement.getAll().forEach((t => {
                        this.scanStatement(t, e)
                    }))
                }
                scanStatement(e, t) {
                    let n;
                    const r = e => {
                        if (e.disabled) return;
                        let n;
                        var i;
                        if (this.checkStatPoint(e, t) && (n = e, null !== (i = e.points) && void 0 !== i && i.length))
                            for (const t of e.points) {
                                const e = r(t);
                                if (e) {
                                    n = e;
                                    break
                                }
                            }
                        return n
                    };
                    for (const i of e.points)
                        if (n = r(i), n && this.qosManager.send(t, n), "sequential" === e.checkingMode && n) break
                }
                checkStatPoint(e, t) {
                    const n = s(t);
                    return "boolean" == typeof e.condition ? e.condition : e.condition(...n)
                }
            });
            var D = n("5Drw"),
                L = n("Na1p");
            r.a.register(i.a.USAGE_MONITOR, class {
                constructor() {
                    this._timelineEngine = void 0, this.timeline = void 0, this._logger = void 0, this._processMonitor = void 0, this._appUsageMonitor = void 0, this._isReady = void 0, this.webSystemInfo = void 0, this.submittedSystemInfo = void 0, this.execTimeNode = e => {
                        const {
                            metrics: t
                        } = e, n = t.filter((e => e.type === y.a.CPU || e.type === y.a.MEMORY));
                        var r;
                        n.length && (null === (r = this.processMonitor) || void 0 === r || r.recordAtTime(e, n))
                    }, this.timeline = []
                }
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("usage-monitor")), this._logger
                }
                get timelineEngine() {
                    return this._timelineEngine || (this._timelineEngine = new D.b, this._timelineEngine.onMessage(this.execTimeNode)), this._timelineEngine
                }
                get processMonitor() {
                    if (!this._processMonitor) try {
                        let e;
                        e = r.a.process === l.a.Main ? n("xDBg").default : n("gpfy").default, this._processMonitor = new e
                    } catch (e) {}
                    return this._processMonitor
                }
                get appUsageMonitor() {
                    if (!this._appUsageMonitor) try {
                        let e = n("w46u").default;
                        this._appUsageMonitor = new e
                    } catch (e) {}
                    return this._appUsageMonitor
                }
                getSystemInfo() {
                    return this.webSystemInfo
                }
                async loadWebSystemInfo() {
                    try {
                        var e, t;
                        if (null !== (e = navigator) && void 0 !== e && null !== (t = e.userAgentData) && void 0 !== t && t.getHighEntropyValues) {
                            const e = await navigator.userAgentData.getHighEntropyValues(["architecture"]);
                            null != e && e.architecture && (this.webSystemInfo = {
                                arch: e.architecture
                            })
                        }
                    } catch (n) {}
                }
                ready() {
                    this._isReady || (this.loadWebSystemInfo(), r.a.SchemaManager.hasUsageSchemas() && (r.a.process !== l.a.Main || L.a.start()), u.a.onConfigChange((() => {})), this._isReady = !0)
                }
                onMainFinishLoad() {
                    r.a.process === l.a.Main && setTimeout((() => {
                        try {
                            this.checkToSubmitSystemInfo()
                        } catch (e) {}
                    }), 1e3)
                }
                checkToSubmitSystemInfo() {}
                startUp() {
                    const e = r.a.SchemaManager.getMemoryUsageSchemas(),
                        t = r.a.SchemaManager.getCPUUsageSchemas(),
                        n = e.filter((e => {
                            var t;
                            return null === (t = e.timeline) || void 0 === t ? void 0 : t.timeNodes.length
                        })),
                        i = t.filter((e => {
                            var t;
                            return null === (t = e.timeline) || void 0 === t ? void 0 : t.timeNodes.length
                        })),
                        o = [];
                    [...n, ...i].forEach((e => {
                        var t;
                        ((null === (t = e.timeline) || void 0 === t ? void 0 : t.timeNodes) || []).forEach((t => {
                            let {
                                time: n
                            } = t;
                            const r = o.find((e => e.time === n));
                            if (r) r.add(e);
                            else {
                                const t = new D.a(n);
                                t.add(e), o.push(t)
                            }
                        }))
                    })), o.length && (this.timeline = o, this.timelineEngine.startUp(o))
                }
                onReceiveProcessStats(e) {
                    var t, n;
                    null != e && e.pid && e.name !== l.a.Main && (null === (t = this.processMonitor) || void 0 === t || null === (n = t.combineRendererStats) || void 0 === n || n.call(t, e))
                }
                exit() {
                    this.timelineEngine.stop()
                }
            });
            const U = g.a.time("10s"),
                x = [g.a.time("1m"), g.a.time("5m"), g.a.time("10m"), g.a.time("20m"), g.a.time("30m"), g.a.time("1h"), g.a.time("2h"), g.a.time("4h"), g.a.time("6h"), g.a.time("8h")];
            r.a.register(i.a.LOCAL_STAT, class {
                constructor() {
                    this.tasks = [], this.processAppUsage = {}, this.totalAppUsage = {}, this.queryStatistics = {
                        totalRequest: 0,
                        totalExecDuration: 0,
                        inUse: {}
                    }, this.processStats = {}, this.attentionQueries = [], this.fpsInfo = void 0, this.fpsSectionDropInfo = void 0, this.fpsDropInfo = void 0, this.hasChange = {
                        queryStatistics: !1,
                        fpsInfo: !1
                    }, this.writing = !1, this.savedProcessDataHash = 0, this.timeoutLog = void 0, this.writerEnabled = void 0, this.isReady = void 0, this.WHITELIST_MEMORY = new Set(["rss", "heapTotal", "heapUsed", "heapSizeLimit"]), this.writeLog = async () => {
                        if (r.a.process !== l.a.Main) return;
                        const e = this.getWriter();
                        try {
                            var t, n;
                            const i = () => Object(E.e)(Date.now());
                            if (this.tasks.length) {
                                const t = this.tasks;
                                this.tasks = [];
                                let n = `------ updated at: ${i()} ------\n`;
                                t.forEach(((e, t) => {
                                    n += `${t+1}.\n`, n += this.writeContentFromObject(e), n += "\n\n"
                                })), n += "\n", await e.append("metrics", n)
                            }
                            if (Object.keys(this.processAppUsage).length) {
                                const t = this.processAppUsage;
                                this.processAppUsage = {};
                                let n = `------ updated at: ${i()} ------\n`;
                                for (const e in t) {
                                    n += `\n- Usage after ${Object(E.f)(Number(e))}:`;
                                    const r = this.totalAppUsage[e];
                                    r && (n += `+--- total: cpu: ${r.cpuTotal.toFixed(2)}% | mem: ${Object(E.d)(r.memoryTotal)}`);
                                    for (const i of t[e]) {
                                        let e = "";
                                        for (const t in i) e += `${t}:${i[t]} | `;
                                        n += `\n+ ${e}`
                                    }
                                }
                                n += "\n\n", this.totalAppUsage = {}, await e.append("app-usage", n)
                            }
                            if (Object.keys(this.processStats).length) {
                                const t = this.processStats;
                                this.processStats = {};
                                for (const n in t) {
                                    let r = `------ updated at: ${i()} ------\n`;
                                    t[n].forEach((e => {
                                        r += this.writeContentFromObject(e), r += "\n"
                                    })), r += "\n\n\n", await e.append(`usage.${n}`, r)
                                }
                            }
                            if (this.hasProcessDataChanged()) {
                                this.savedProcessDataHash = r.a.DataManager.getHashCode();
                                const t = [r.a.DataManager.getCurrentProcessData(), ...r.a.DataManager.getOtherProcessData()];
                                let n = `------ updated at: ${i()} ------\n`;
                                t.forEach((e => {
                                    n += `\n* process: ${e.getName()}`;
                                    e.getAll().forEach((e => {
                                        n += `\n  - ${e.name} : ${e.time} (${Object(E.e)(e.time)})`
                                    })), n += "\n"
                                })), await e.write("actions", n)
                            }
                            if (this.hasChange.queryStatistics) {
                                this.hasChange.queryStatistics = !1;
                                let t = `------ updated at: ${i()} ------\n`;
                                t += `\nTotal request: ${this.queryStatistics.totalRequest}`, t += `\nAverage duration: ${Object(E.f)(this.queryStatistics.totalExecDuration/this.queryStatistics.totalRequest)}`, Object.keys(this.queryStatistics.inUse).length && (t += "\n- By usage time:");
                                for (const e in this.queryStatistics.inUse) Number(e) <= Date.now() - r.a.EPOCH && (t += `\n + ${Object(E.f)(Number(e))}:`, t += `\n   Total request: ${this.queryStatistics.inUse[e].totalRequest}`, t += `\n   Average duration: ${Object(E.f)(this.queryStatistics.inUse[e].totalExecDuration/this.queryStatistics.inUse[e].totalRequest)}`);
                                t += "\n\n", await e.write("query-stats", t)
                            }
                            if (this.attentionQueries.length) {
                                const t = this.attentionQueries;
                                this.attentionQueries = [];
                                let n = `------ updated at: ${i()} ------\n`;
                                const r = e => Object.entries(e).map((e => {
                                    let [t, n] = e;
                                    return `${t}=${JSON.stringify(n)}`
                                })).join(",");
                                t.forEach((e => {
                                    var t;
                                    const i = null !== (t = e.info) && void 0 !== t && t[1] ? r(e.info[1]) : "";
                                    n += `\n* ${i||e.id}: `, n += this.writeContentFromObject(e), n += "\n"
                                })), n += "\n\n\n", await e.append("attention-queries", n)
                            }
                            if (this.hasChange.fpsInfo && this.fpsInfo) {
                                this.hasChange.fpsInfo = !1;
                                let t = `------ updated at: ${i()} ------\n`;
                                t += `* process: ${this.fpsInfo.processName} | usageTime: ${Object(E.f)(this.fpsInfo.usageTime)} | recordAt: ${Object(E.e)(this.fpsInfo.recordAt)}`, t += `\n  + fps: ${this.fpsInfo.fps}`, t += `\n  + avgFps: ${this.fpsInfo.avgFps}`, t += `\n  + maxFps: ${this.fpsInfo.maxFps}`, t += `\n  + history: ${JSON.stringify(this.fpsInfo.fpsColumns)}`, t += "\n\n", await e.append("fps", t)
                            }
                            if (null !== (t = this.fpsDropInfo) && void 0 !== t && t.length) {
                                const t = [...this.fpsDropInfo];
                                this.fpsDropInfo = void 0;
                                let n = `------ updated at: ${i()} ------\n`;
                                t.forEach((e => {
                                    n += `* process: ${e.processName} ${e.startAt?`| recordAt: ${Object(E.e)(e.startAt)}`:""}`, n += `\n  + lowestDrop: ${e.lowestDrop} FPS`, n += `\n  + recoverTime: ${e.recoverTime}`, n += `\n  + beforeDrop: ${e.beforeDrop} FPS`, n += `\n  + afterRecover: ${e.afterRecover} FPS`, e.startAt && (n += `\n  + startAt: ${Object(E.e)(e.startAt)}`), e.endAt && (n += `\n  + endAt: ${Object(E.e)(e.endAt)}`), n += "\n"
                                })), n += "\n\n", await e.append("fps-drop", n)
                            }
                            if (null !== (n = this.fpsSectionDropInfo) && void 0 !== n && n.length) {
                                const t = [...this.fpsSectionDropInfo];
                                this.fpsSectionDropInfo = void 0;
                                let n = `------ updated at: ${i()} ------\n`;
                                t.forEach((e => {
                                    n += `\n* ${e.taskKey} `, n += `\n  + lowestDrop: ${e.lowestDrop} FPS`, n += `\n  + recoverTime: ${e.recoverTime}`, n += `\n  + beforeDrop: ${e.beforeDrop} FPS`, n += `\n  + afterRecover: ${e.afterRecover} FPS`, e.startAt && (n += `\n  + startAt: ${Object(E.e)(e.startAt)}`), e.endAt && (n += `\n  + endAt: ${Object(E.e)(e.endAt)}`), n += "\n"
                                })), n += "\n\n", await e.append("fps-section-drop", n)
                            }
                        } catch (i) {}
                    }, this.hasDataChanged = () => {
                        var e, t;
                        return this.tasks.length || Object.keys(this.processAppUsage).length || this.hasChange.queryStatistics || this.hasChange.fpsInfo || this.attentionQueries.length || (null === (e = this.fpsSectionDropInfo) || void 0 === e ? void 0 : e.length) || (null === (t = this.fpsDropInfo) || void 0 === t ? void 0 : t.length) || this.hasProcessDataChanged()
                    }
                }
                ready() {
                    this.isReady || r.a.process === l.a.Main && (u.a.on("staging_account", (e => {
                        const t = u.a.getConfig().enable_for_staging_account,
                            n = u.a.getConfig().enable_write_log || !1;
                        this.writerEnabled = (u.a.getConfig().enable || !!e && t) && n, this.writerEnabled ? this.startWrite() : this.reset()
                    })), this.isReady = !0)
                }
                reset() {
                    this.tasks = [], this.processAppUsage = {}, this.queryStatistics = {
                        totalRequest: 0,
                        totalExecDuration: 0,
                        inUse: {}
                    }, this.processStats = {}, this.attentionQueries = [], this.hasChange = {
                        queryStatistics: !1,
                        fpsInfo: !1
                    }, this.writing = !1, this.savedProcessDataHash = 0, this.timeoutLog && clearTimeout(this.timeoutLog)
                }
                record(e) {
                    if (!1 === this.writerEnabled) return;
                    if (r.a.process !== l.a.Main) return;
                    if (e.name === c.b.fps) return;
                    let t = {
                        duration: e.durationText,
                        startAt: e.startAt ? Object(E.e)(e.startAt) : void 0,
                        endAt: e.endAt ? Object(E.e)(e.endAt) : void 0,
                        id: e.id,
                        name: e.name,
                        type: e.type,
                        info: [...e.info || []],
                        usageTime: e.usageTimeText
                    };
                    if (e.type === y.a.TIME)
                        if (e.name === c.b.query_resolution_time) {
                            if (t = Object(_.a)(Object(_.a)({}, t), {}, {
                                    stackTrace: e.stackTrace
                                }), e.duration) {
                                this.hasChange.queryStatistics = !0, this.queryStatistics.totalRequest++, this.queryStatistics.totalExecDuration += e.duration;
                                for (const t of x) {
                                    const n = e => e <= t;
                                    e.usageTime && n(e.usageTime) && (this.queryStatistics.inUse[t] || (this.queryStatistics.inUse[t] = {
                                        totalRequest: 0,
                                        totalExecDuration: 0
                                    }), this.queryStatistics.inUse[t].totalRequest++, this.queryStatistics.inUse[t].totalExecDuration += e.duration)
                                }
                                e.duration > U && this.attentionQueries.push(t)
                            }
                        } else t = Object(_.a)({}, t), this.tasks.push(t);
                    this.startWrite()
                }
                recordUsage(e, t) {
                    if (!1 === this.writerEnabled) return;
                    if (r.a.process !== l.a.Main) return;
                    const n = o(t);
                    this.processAppUsage[n] = e.map((e => ({
                        pid: e.pid,
                        ppid: e.ppid,
                        processName: e.name,
                        processType: e.type,
                        cpu: `${e.cpu.toFixed(2)}%`,
                        memory: Object(E.d)(e.memory),
                        sandboxed: e.sandboxed,
                        usageTime: Object(E.f)(n),
                        elapsed: Object(E.f)(e.elapsed),
                        timestamp: e.timestamp
                    }))), this.startWrite()
                }
                recordProcessStats(e) {
                    var t;
                    if (!1 === this.writerEnabled) return;
                    if (r.a.process !== l.a.Main) return;
                    let n = {};
                    if (null != e && e.memory)
                        for (const r in e.memory)
                            if (this.WHITELIST_MEMORY.has(r)) {
                                const t = e.memory[r];
                                n[r] = "number" == typeof t ? Object(E.d)(t) : t
                            }
                    let i = {};
                    null != e && null !== (t = e.cpu) && void 0 !== t && t.percent && (i = {
                        percent: e.cpu.percent
                    });
                    const o = {
                        recordAt: Object(E.e)(e.recordAt),
                        usageTime: Object(E.f)(e.usageTime),
                        pid: e.pid,
                        name: e.name,
                        memory: n,
                        cpu: i,
                        creationTime: e.creationTime ? Object(E.e)(e.creationTime) : null,
                        sandboxed: e.sandboxed,
                        processType: e.type
                    };
                    this.processStats[e.name] || (this.processStats[e.name] = []), this.processStats[e.name].push(o), this.startWrite()
                }
                recordFps(e) {
                    !1 !== this.writerEnabled && r.a.process === l.a.Main && (this.fpsInfo = e, this.hasChange.fpsInfo = !0, this.startWrite())
                }
                recordFpsSection(e) {
                    !1 !== this.writerEnabled && r.a.process === l.a.Main && (e.taskKey ? (this.fpsSectionDropInfo || (this.fpsSectionDropInfo = []), this.fpsSectionDropInfo.push(e)) : (this.fpsDropInfo || (this.fpsDropInfo = []), this.fpsDropInfo.push(e)), this.startWrite())
                }
                recordAppUsage(e, t) {
                    if (!1 === this.writerEnabled) return;
                    if (r.a.process !== l.a.Main) return;
                    const n = o(t);
                    this.processAppUsage[n] = e.map((e => ({
                        pid: e.pid,
                        ppid: e.ppid,
                        processName: e.name,
                        processType: e.type,
                        cpu: `${e.cpu.toFixed(2)}%`,
                        memory: Object(E.d)(e.memory),
                        sandboxed: e.sandboxed,
                        usageTime: Object(E.f)(n),
                        elapsed: Object(E.f)(e.elapsed),
                        timestamp: e.timestamp
                    }))), this.totalAppUsage[n] = e.reduce(((e, t) => (e.cpuTotal += t.cpu, e.memoryTotal += t.memory, e)), {
                        cpuTotal: 0,
                        memoryTotal: 0
                    }), this.startWrite()
                }
                startWrite() {
                    !1 !== this.writerEnabled && r.a.process === l.a.Main && !this.writing && this.writerEnabled && (this.writing = !0, this.timeoutLog = setTimeout((() => {
                        this.writeLog().finally((() => {
                            if (this.writing = !1, this.hasDataChanged()) return this.startWrite()
                        }))
                    }), 5e3))
                }
                export (e) {
                    !1 !== this.writerEnabled && r.a.process === l.a.Main && e && (clearTimeout(this.timeoutLog), this.hasDataChanged() && this.writeLog())
                }
                writeContentFromObject(e) {
                    let t = "";
                    for (const n in e) {
                        const r = e[n];
                        if (void 0 !== r)
                            if (Array.isArray(r)) t += `\n - ${n}:`, r.forEach((e => {
                                if ("object" == typeof e) {
                                    t += "\n   + {";
                                    for (const n in e) t += `\n      ${n} : ${e[n]}`;
                                    t += "\n     }"
                                } else t += `\n   + ${e}`
                            }));
                            else if ("object" == typeof r) {
                            t += `\n - ${n}:`;
                            for (const e in r) void 0 !== r[e] && (t += `\n   .  ${e} : ${r[e]}`);
                            t += "\n"
                        } else t += `\n - ${n} : ${r}`
                    }
                    return t
                }
                hasProcessDataChanged() {
                    return r.a.DataManager.getHashCode() !== this.savedProcessDataHash
                }
                getWriter() {
                    return (0, n("sc+k").default)()
                }
            });
            var k = n("igRa");
            r.a.register(i.a.UI_MANAGER, class {
                constructor() {
                    this._fpsTimeline = void 0, this.fpsEngineStartAt = void 0, this.fpsState = void 0, this.maxFps = void 0, this._logger = void 0, this._tool = void 0, this.isActive = void 0, this.controllerId = void 0, this._avgFpsCounter = void 0, this.lowestDroppedFpsMonitor = void 0, this._listerners = void 0, this._fpsSections = void 0, this.FPS_SECTION_EXPIRATION_TIME = 6e4, this.fpsFallingConfig = {
                        safeFpsGap: 10
                    }, this.startLowestDroppedFpsMonitor = () => {
                        this.lowestDroppedFpsMonitor && this.lowestDroppedFpsMonitor.end(), this.lowestDroppedFpsMonitor = this.getFpsFallingRecorder(), this.lowestDroppedFpsMonitor.onData((e => {
                            var t;
                            const n = (null === (t = this.lowestDroppedFpsMonitor) || void 0 === t ? void 0 : t.end()) || e;
                            this.recordLowestDroppedFpsMetric(n), this.triggerEvent(k.a.DROP_FPS, n), this.lowestDroppedFpsMonitor = void 0, this.startLowestDroppedFpsMonitor()
                        })), this.lowestDroppedFpsMonitor.start()
                    }, this.recordFpsMetric = e => {
                        if (!this.fpsState || !this.isActive || !u.a.getConfig().enable_fps_monitor) return;
                        const t = Date.now(),
                            {
                                metrics: n,
                                passedTime: i,
                                startTime: o
                            } = e,
                            s = n.find((e => e.name === c.b.fps));
                        if (s) {
                            const e = r.a.MetricFactory.create(s.name, `${s.name}.${i}`, s);
                            e.setStartAt(o), e.setEndAt(t), e.pushInfo({
                                fps: this.fpsState.fps,
                                avgFps: this.fpsState.avgFps,
                                maxFps: this.fpsState.maxFps,
                                usageTime: i
                            }), e.evaluate(), e.resolve(), r.a.MetricResolver.resolve(e)
                        }(u.a.getConfig().enable_write_log || !1) && r.a.MetricTransporter.transmitFps(this.fpsState, t, i)
                    }, this.recordLowestDroppedFpsMetric = e => {
                        if (null == e.lowestDrop) return;
                        const t = r.a.SchemaManager.loadSchema(c.b.fps_lowest_drop),
                            n = r.a.MetricFactory.create(t.name, `${t.name}.${Date.now()}`, t);
                        n.setDuration(e.lowestDrop), n.pushInfo(Object(_.a)(Object(_.a)({}, e), {}, {
                            maxFps: this.maxFps
                        })), n.evaluate(), n.resolve(), r.a.MetricResolver.resolve(n);
                        (u.a.getConfig().enable_write_log || !1) && r.a.MetricTransporter.transmitFpsSection(e)
                    }
                }
                get Logger() {
                    return this._logger || (this._logger = r.a.createLogger("ui-manager")), this._logger
                }
                get fpsTimeline() {
                    return this._fpsTimeline || (this._fpsTimeline = new D.b, this._fpsTimeline.onMessage(this.recordFpsMetric)), this._fpsTimeline
                }
                get avgFpsCounter() {
                    return this._avgFpsCounter || (this._avgFpsCounter = {
                        _columnNo: 0,
                        _total: 0
                    }), this._avgFpsCounter
                }
                get fpsSections() {
                    return this._fpsSections || (this._fpsSections = new Map), this._fpsSections
                }
                get listerners() {
                    return this._listerners || (this._listerners = {}), this._listerners
                }
                get Tool() {
                    if (!this._tool) {
                        const e = n("5BYM").default;
                        this._tool = new e(this)
                    }
                    return this._tool
                }
                ready() {}
                exit() {
                    this._fpsTimeline && this.fpsTimeline.stop(), this.lowestDroppedFpsMonitor && (this.lowestDroppedFpsMonitor.end(), this.lowestDroppedFpsMonitor = void 0), this.fpsEngineStartAt = void 0
                }
                registerController() {
                    if (this.controllerId) return;
                    this.controllerId = Date.now();
                    return {
                        id: this.controllerId,
                        setIsActive: e => {
                            this.isActive = e
                        }
                    }
                }
                unregisterController(e) {
                    this.controllerId === e && (this.controllerId = void 0)
                }
                registerFpsMonitor() {
                    if (this.fpsEngineStartAt || r.a.process !== l.a.Render && r.a.process !== l.a.Web) return;
                    if (this.fpsEngineStartAt = Date.now(), u.a.getConfig().enable_fps_monitor) {
                        const e = new D.a(Object(E.g)("1m")),
                            t = r.a.SchemaManager.loadSchema(c.b.fps);
                        t.categories && (e.add(t), this.fpsTimeline.startEvery(e))
                    }
                    if (u.a.getConfig().enable_fps_monitor_v2 && u.a.getConfig().enable_fps_drop_monitor) {
                        r.a.SchemaManager.loadSchema(c.b.fps_lowest_drop).categories && this.startLowestDroppedFpsMonitor()
                    }
                    return {
                        id: this.fpsEngineStartAt,
                        recordFps: (e, t, n) => this.recordFps(e, t, n)
                    }
                }
                unregisterFpsMonitor(e) {
                    this.fpsEngineStartAt === e && (this.fpsEngineStartAt = void 0, this.lowestDroppedFpsMonitor && (this.lowestDroppedFpsMonitor.end(), this.lowestDroppedFpsMonitor = void 0), this._fpsTimeline && this.fpsTimeline.stop())
                }
                getRegisteredFpsMonitor() {
                    return this.fpsEngineStartAt
                }
                recordFps(e, t, n) {
                    this.isActive && (this.avgFpsCounter._columnNo++, this.avgFpsCounter._total += e.fps, this.fpsState = e, this.fpsState.avgFps = Number((this.avgFpsCounter._total / this.avgFpsCounter._columnNo).toFixed(0)), this.maxFps = Math.max(t, this.maxFps || 60), 120 === this.maxFps && (this.fpsFallingConfig.safeFpsGap = 20), this.triggerEvent(k.a.FPS, {
                        fps: e.fps,
                        now: n
                    }))
                }
                getFps() {
                    return this.fpsState
                }
                on(e, t) {
                    this.listerners[e] || (this.listerners[e] = []), this.listerners[e].push(t)
                }
                removeListener(e, t) {
                    var n;
                    null !== (n = this.listerners[e]) && void 0 !== n && n.length && (this.listerners[e] = this.listerners[e].filter((e => e !== t)))
                }
                triggerEvent(e, t) {
                    const n = this.listerners[e];
                    null != n && n.length && n.forEach((e => e(t)))
                }
                getFpsFallingRecorder(e) {
                    return new(0, n("/Pmb").default)(Object(_.a)(Object(_.a)({
                        safeFpsGap: this.fpsFallingConfig.safeFpsGap
                    }, e || {}), {}, {
                        maxFps: this.maxFps
                    }))
                }
                startRecordSectionFps(e, t) {
                    var n;
                    const i = !!u.a.getConfig().fps_section[e],
                        o = u.a.getConfig().enable_fps_drop_monitor;
                    if (!this.getRegisteredFpsMonitor() || !i || !o) return;
                    const s = r.a.SchemaManager.loadSchema(e);
                    if (s.disabled) return;
                    const a = r.a.MetricFactory.getKey(e, t);
                    if (null === (n = this.fpsSections.get(a)) || void 0 === n || !n.listener) {
                        const n = n => {
                            if (null != n.lowestDrop) {
                                const r = this.fpsSections.get(a);
                                if (!r) return;
                                r.result ? null != r.result.lowestDrop && r.result.lowestDrop > n.lowestDrop && (r.result = n) : r.result = n, (null == r || !r.timer) && r.startAt && Date.now() - r.startAt >= this.FPS_SECTION_EXPIRATION_TIME && this.endRecordSectionFps(e, t)
                            }
                        };
                        this.on(k.a.DROP_FPS, n), this.fpsSections.set(a, Object(_.a)(Object(_.a)({}, this.fpsSections.get(a) || {}), {}, {
                            startAt: Date.now(),
                            listener: n
                        }))
                    }
                    const c = this.fpsSections.get(a);
                    c && (c.timer && clearTimeout(c.timer), c.timer = null != s.timeout ? setTimeout((() => {
                        this.endRecordSectionFps(e, t)
                    }), s.timeout) : void 0)
                }
                endRecordSectionFps(e, t, n) {
                    const i = r.a.MetricFactory.getKey(e, t),
                        o = this.fpsSections.get(i);
                    if (!o) return;
                    const s = Date.now(),
                        a = o.listener;
                    a && this.removeListener(k.a.DROP_FPS, a), null != o && o.timer && clearTimeout(o.timer);
                    const c = o.result ? Object(_.a)(Object(_.a)({}, o.result), {}, {
                        startAt: o.startAt,
                        endAt: s,
                        maxFps: this.maxFps
                    }) : void 0;
                    if (this.fpsSections.delete(i), null != (null == c ? void 0 : c.lowestDrop)) {
                        var d;
                        null === (d = this.Logger) || void 0 === d || d.zsymb(5, 9876, 30001, "[drop] {}: {}", i, c);
                        const o = r.a.SchemaManager.loadSchema(e);
                        if (!o.disabled) {
                            const s = r.a.MetricFactory.create(e, t, o);
                            s.setData(c), s.setDuration(c.lowestDrop), s.pushInfo(c), n && s.pushInfo(n), s.evaluate(), s.resolve(), r.a.MetricResolver.resolve(s);
                            (u.a.getConfig().enable_write_log || !1) && r.a.MetricTransporter.transmitFpsSection(c, i)
                        }
                    }
                    return c
                }
            })
        },
        ckNr: function(e, t) {
            var n, r, i = e.exports = {};

            function o() {
                throw new Error("setTimeout has not been defined")
            }

            function s() {
                throw new Error("clearTimeout has not been defined")
            }

            function a(e) {
                if (n === setTimeout) return setTimeout(e, 0);
                if ((n === o || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0);
                try {
                    return n(e, 0)
                } catch (t) {
                    try {
                        return n.call(null, e, 0)
                    } catch (t) {
                        return n.call(this, e, 0)
                    }
                }
            }! function() {
                try {
                    n = "function" == typeof setTimeout ? setTimeout : o
                } catch (e) {
                    n = o
                }
                try {
                    r = "function" == typeof clearTimeout ? clearTimeout : s
                } catch (e) {
                    r = s
                }
            }();
            var c, d = [],
                u = !1,
                l = -1;

            function p() {
                u && c && (u = !1, c.length ? d = c.concat(d) : l = -1, d.length && m())
            }

            function m() {
                if (!u) {
                    var e = a(p);
                    u = !0;
                    for (var t = d.length; t;) {
                        for (c = d, d = []; ++l < t;) c && c[l].run();
                        l = -1, t = d.length
                    }
                    c = null, u = !1,
                        function(e) {
                            if (r === clearTimeout) return clearTimeout(e);
                            if ((r === s || !r) && clearTimeout) return r = clearTimeout, clearTimeout(e);
                            try {
                                r(e)
                            } catch (t) {
                                try {
                                    return r.call(null, e)
                                } catch (t) {
                                    return r.call(this, e)
                                }
                            }
                        }(e)
                }
            }

            function h(e, t) {
                this.fun = e, this.array = t
            }

            function f() {}
            i.nextTick = function(e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
                d.push(new h(e, t)), 1 !== d.length || u || a(m)
            }, h.prototype.run = function() {
                this.fun.apply(null, this.array)
            }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = f, i.addListener = f, i.once = f, i.off = f, i.removeListener = f, i.removeAllListeners = f, i.emit = f, i.prependListener = f, i.prependOnceListener = f, i.listeners = function(e) {
                return []
            }, i.binding = function(e) {
                throw new Error("process.binding is not supported")
            }, i.cwd = function() {
                return "/"
            }, i.chdir = function(e) {
                throw new Error("process.chdir is not supported")
            }, i.umask = function() {
                return 0
            }
        },
        cnBV: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return r
            })), n.d(t, "b", (function() {
                return i
            }));
            const r = {
                    ux_latency: "ux_latency",
                    task_latency: "task_latency",
                    usage: "usage",
                    web_vitals: "web_vitals",
                    navigation_timing: "navigation_timing",
                    core: "core"
                },
                i = {
                    start_up: "start_up",
                    dal: "dal",
                    chat: "chat"
                }
        },
        cv67: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function(e) {
                var t = r,
                    n = t.lib,
                    i = n.WordArray,
                    o = n.Hasher,
                    s = t.algo,
                    a = [];
                ! function() {
                    for (var t = 0; t < 64; t++) a[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0
                }();
                var c = s.MD5 = o.extend({
                    _doReset: function() {
                        this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878])
                    },
                    _doProcessBlock: function(e, t) {
                        for (var n = 0; n < 16; n++) {
                            var r = t + n,
                                i = e[r];
                            e[r] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8)
                        }
                        var o = this._hash.words,
                            s = e[t + 0],
                            c = e[t + 1],
                            m = e[t + 2],
                            h = e[t + 3],
                            f = e[t + 4],
                            g = e[t + 5],
                            y = e[t + 6],
                            _ = e[t + 7],
                            E = e[t + 8],
                            b = e[t + 9],
                            I = e[t + 10],
                            v = e[t + 11],
                            T = e[t + 12],
                            O = e[t + 13],
                            w = e[t + 14],
                            P = e[t + 15],
                            S = o[0],
                            A = o[1],
                            R = o[2],
                            M = o[3];
                        S = d(S, A, R, M, s, 7, a[0]), M = d(M, S, A, R, c, 12, a[1]), R = d(R, M, S, A, m, 17, a[2]), A = d(A, R, M, S, h, 22, a[3]), S = d(S, A, R, M, f, 7, a[4]), M = d(M, S, A, R, g, 12, a[5]), R = d(R, M, S, A, y, 17, a[6]), A = d(A, R, M, S, _, 22, a[7]), S = d(S, A, R, M, E, 7, a[8]), M = d(M, S, A, R, b, 12, a[9]), R = d(R, M, S, A, I, 17, a[10]), A = d(A, R, M, S, v, 22, a[11]), S = d(S, A, R, M, T, 7, a[12]), M = d(M, S, A, R, O, 12, a[13]), R = d(R, M, S, A, w, 17, a[14]), S = u(S, A = d(A, R, M, S, P, 22, a[15]), R, M, c, 5, a[16]), M = u(M, S, A, R, y, 9, a[17]), R = u(R, M, S, A, v, 14, a[18]), A = u(A, R, M, S, s, 20, a[19]), S = u(S, A, R, M, g, 5, a[20]), M = u(M, S, A, R, I, 9, a[21]), R = u(R, M, S, A, P, 14, a[22]), A = u(A, R, M, S, f, 20, a[23]), S = u(S, A, R, M, b, 5, a[24]), M = u(M, S, A, R, w, 9, a[25]), R = u(R, M, S, A, h, 14, a[26]), A = u(A, R, M, S, E, 20, a[27]), S = u(S, A, R, M, O, 5, a[28]), M = u(M, S, A, R, m, 9, a[29]), R = u(R, M, S, A, _, 14, a[30]), S = l(S, A = u(A, R, M, S, T, 20, a[31]), R, M, g, 4, a[32]), M = l(M, S, A, R, E, 11, a[33]), R = l(R, M, S, A, v, 16, a[34]), A = l(A, R, M, S, w, 23, a[35]), S = l(S, A, R, M, c, 4, a[36]), M = l(M, S, A, R, f, 11, a[37]), R = l(R, M, S, A, _, 16, a[38]), A = l(A, R, M, S, I, 23, a[39]), S = l(S, A, R, M, O, 4, a[40]), M = l(M, S, A, R, s, 11, a[41]), R = l(R, M, S, A, h, 16, a[42]), A = l(A, R, M, S, y, 23, a[43]), S = l(S, A, R, M, b, 4, a[44]), M = l(M, S, A, R, T, 11, a[45]), R = l(R, M, S, A, P, 16, a[46]), S = p(S, A = l(A, R, M, S, m, 23, a[47]), R, M, s, 6, a[48]), M = p(M, S, A, R, _, 10, a[49]), R = p(R, M, S, A, w, 15, a[50]), A = p(A, R, M, S, g, 21, a[51]), S = p(S, A, R, M, T, 6, a[52]), M = p(M, S, A, R, h, 10, a[53]), R = p(R, M, S, A, I, 15, a[54]), A = p(A, R, M, S, c, 21, a[55]), S = p(S, A, R, M, E, 6, a[56]), M = p(M, S, A, R, P, 10, a[57]), R = p(R, M, S, A, y, 15, a[58]), A = p(A, R, M, S, O, 21, a[59]), S = p(S, A, R, M, f, 6, a[60]), M = p(M, S, A, R, v, 10, a[61]), R = p(R, M, S, A, m, 15, a[62]), A = p(A, R, M, S, b, 21, a[63]), o[0] = o[0] + S | 0, o[1] = o[1] + A | 0, o[2] = o[2] + R | 0, o[3] = o[3] + M | 0
                    },
                    _doFinalize: function() {
                        var t = this._data,
                            n = t.words,
                            r = 8 * this._nDataBytes,
                            i = 8 * t.sigBytes;
                        n[i >>> 5] |= 128 << 24 - i % 32;
                        var o = e.floor(r / 4294967296),
                            s = r;
                        n[15 + (i + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), n[14 + (i + 64 >>> 9 << 4)] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), t.sigBytes = 4 * (n.length + 1), this._process();
                        for (var a = this._hash, c = a.words, d = 0; d < 4; d++) {
                            var u = c[d];
                            c[d] = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8)
                        }
                        return a
                    },
                    clone: function() {
                        var e = o.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    }
                });

                function d(e, t, n, r, i, o, s) {
                    var a = e + (t & n | ~t & r) + i + s;
                    return (a << o | a >>> 32 - o) + t
                }

                function u(e, t, n, r, i, o, s) {
                    var a = e + (t & r | n & ~r) + i + s;
                    return (a << o | a >>> 32 - o) + t
                }

                function l(e, t, n, r, i, o, s) {
                    var a = e + (t ^ n ^ r) + i + s;
                    return (a << o | a >>> 32 - o) + t
                }

                function p(e, t, n, r, i, o, s) {
                    var a = e + (n ^ (t | ~r)) + i + s;
                    return (a << o | a >>> 32 - o) + t
                }
                t.MD5 = o._createHelper(c), t.HmacMD5 = o._createHmacHelper(c)
            }(Math), r.MD5)
        },
        "d/or": function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("database-settings-manager")
        },
        d04y: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "qoslogv2",
                    name: "Qoslogv2",
                    fields: {
                        record: {
                            name: "record",
                            type: s.g.string
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer
                        },
                        cmdId: {
                            name: "cmdId",
                            type: s.g.string
                        },
                        type: {
                            name: "type",
                            type: s.g.string
                        },
                        requestId: {
                            name: "requestId",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "ts"
                            }, {
                                type: "raw",
                                field: "cmdId"
                            }, {
                                type: "raw",
                                field: "type"
                            }],
                            unique: !0
                        },
                        ts: {
                            name: "ts",
                            fields: [{
                                type: "raw",
                                field: "ts"
                            }],
                            unique: !1
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "actionlog",
                    name: "Actionlog",
                    fields: {
                        type: s.g.string
                    },
                    indices: {},
                    isNonFieldlikeEntity: !0
                },
                m = {
                    Qoslogv2: d,
                    Actionlog: new i.d(p)
                },
                h = {
                    Qoslogv2: u,
                    Actionlog: new i.d(Object(r.a)({}, p))
                },
                f = {
                    Qoslogv2: l,
                    Actionlog: new i.d(Object(r.a)({}, p))
                },
                g = {
                    name: "Qos",
                    session: !1
                },
                y = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.const("Qos"), o.a.byTable()],
                    partitionsMap: Object(a.a)(f)
                },
                _ = {
                    partitionNamingStrategy: [o.a.const("zdb_qos")],
                    partitionsMap: Object(a.b)(h)
                },
                E = Object(r.a)(Object(r.a)(Object(r.a)({}, g), y), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                b = Object(r.a)(Object(r.a)(Object(r.a)({}, g), _), {}, {
                    version: 3,
                    milestoneVersion: 3,
                    type: s.a.IDB
                });
            let I = null,
                v = null;
            t.a = {
                basicSchema: m,
                get useSqlite() {
                    return null === I && (I = new i.a(E)), I
                },
                get useIdb() {
                    return null === v && (v = new i.a(b)), v
                }
            }
        },
        d7IX: function(e, t, n) {
            var r = n("wbIY"),
                i = n("Bvq2"),
                o = n("ejc7");
            e.exports = !r && !i((function() {
                return 7 != Object.defineProperty(o("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            }))
        },
        dFSO: function(e, t, n) {
            "use strict";
            n.d(t, "g", (function() {
                return s
            })), n.d(t, "b", (function() {
                return a
            })), n.d(t, "f", (function() {
                return c
            })), n.d(t, "d", (function() {
                return u
            })), n.d(t, "c", (function() {
                return l
            })), n.d(t, "e", (function() {
                return p
            })), n.d(t, "a", (function() {
                return f
            }));
            const r = 36e5,
                i = 24 * r,
                o = {
                    W: 6048e5,
                    D: i,
                    h: r,
                    m: 6e4,
                    s: 1e3
                },
                s = e => {
                    var t;
                    const n = null === (t = /(\d+)(ms)/g.exec(e)) || void 0 === t ? void 0 : t[1];
                    if (n) return Number(n);
                    const r = /(\d+)([WDhms])/g;
                    let i, s = 0;
                    for (; i = r.exec(e);) s += parseInt(i[1]) * o[i[2]];
                    return s
                },
                a = e => null == e,
                c = (e, t) => {
                    let n = e;
                    const r = [];
                    for (const i in o) {
                        const e = o[i],
                            t = Math.trunc(n / e);
                        t > 0 && (r.push(`${t}`.padStart(2, "0") + i), n -= t * e)
                    }
                    return n > 0 && (null != t && (n = Number(n.toFixed(t))), r.push(n + "ms")), r.join(":")
                },
                d = ["bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
                u = e => {
                    let t = 0,
                        n = parseInt(e.toString(), 10) || 0;
                    for (; n >= 1024 && ++t;) n /= 1024;
                    return n.toFixed(n < 10 && t > 0 ? 1 : 0) + " " + d[t]
                },
                l = e => 1024 * Number(e),
                p = e => {
                    const t = e => `${e}`.padStart(2, "0"),
                        n = new Date(e);
                    return `${n.toLocaleDateString()} ${`${t(n.getHours())}:${t(n.getMinutes())}:${t(n.getSeconds())}.${t(n.getMilliseconds())}`}`
                };
            let m, h = {};
            const f = e => {
                if (!m) {
                    let e = "";
                    [...d].reverse().forEach(((t, n) => {
                        h[t] = 1024 ** (d.length - 1 - n), e += 0 === n ? t : `|${t}`
                    })), m = new RegExp(`(\\d+)(?:)(${e})`, "g")
                }
                let t, n = 0;
                for (; t = m.exec(e);) n += parseInt(t[1]) * h[t[2]];
                return n
            }
        },
        dI7C: function(e, t, n) {
            (function(e, t) {
                ! function(e, n) {
                    "use strict";
                    if (!e.setImmediate) {
                        var r, i, o, s, a, c = 1,
                            d = {},
                            u = !1,
                            l = e.document,
                            p = Object.getPrototypeOf && Object.getPrototypeOf(e);
                        p = p && p.setTimeout ? p : e, "[object process]" === {}.toString.call(e.process) ? r = function(e) {
                            t.nextTick((function() {
                                h(e)
                            }))
                        } : ! function() {
                            if (e.postMessage && !e.importScripts) {
                                var t = !0,
                                    n = e.onmessage;
                                return e.onmessage = function() {
                                    t = !1
                                }, e.postMessage("", "*"), e.onmessage = n, t
                            }
                        }() ? e.MessageChannel ? ((o = new MessageChannel).port1.onmessage = function(e) {
                            h(e.data)
                        }, r = function(e) {
                            o.port2.postMessage(e)
                        }) : l && "onreadystatechange" in l.createElement("script") ? (i = l.documentElement, r = function(e) {
                            var t = l.createElement("script");
                            t.onreadystatechange = function() {
                                h(e), t.onreadystatechange = null, i.removeChild(t), t = null
                            }, i.appendChild(t)
                        }) : r = function(e) {
                            setTimeout(h, 0, e)
                        } : (s = "setImmediate$" + Math.random() + "$", a = function(t) {
                            t.source === e && "string" == typeof t.data && 0 === t.data.indexOf(s) && h(+t.data.slice(s.length))
                        }, e.addEventListener ? e.addEventListener("message", a, !1) : e.attachEvent("onmessage", a), r = function(t) {
                            e.postMessage(s + t, "*")
                        }), p.setImmediate = function(e) {
                            "function" != typeof e && (e = new Function("" + e));
                            for (var t = new Array(arguments.length - 1), n = 0; n < t.length; n++) t[n] = arguments[n + 1];
                            var i = {
                                callback: e,
                                args: t
                            };
                            return d[c] = i, r(c), c++
                        }, p.clearImmediate = m
                    }

                    function m(e) {
                        delete d[e]
                    }

                    function h(e) {
                        if (u) setTimeout(h, 0, e);
                        else {
                            var t = d[e];
                            if (t) {
                                u = !0;
                                try {
                                    ! function(e) {
                                        var t = e.callback,
                                            n = e.args;
                                        switch (n.length) {
                                            case 0:
                                                t();
                                                break;
                                            case 1:
                                                t(n[0]);
                                                break;
                                            case 2:
                                                t(n[0], n[1]);
                                                break;
                                            case 3:
                                                t(n[0], n[1], n[2]);
                                                break;
                                            default:
                                                t.apply(void 0, n)
                                        }
                                    }(t)
                                } finally {
                                    m(e), u = !1
                                }
                            }
                        }
                    }
                }("undefined" == typeof self ? void 0 === e ? this : e : self)
            }).call(this, n("kjmW"), n("ckNr"))
        },
        dktu: function(e, t) {
            e.exports = {}
        },
        dnEP: function(e, t, n) {
            "use strict";
            var r = n("nu5z")();
            e.exports = function(e) {
                return "string" == typeof e ? e.replace(r, "") : e
            }
        },
        dt0z: function(e, t, n) {
            var r = n("zoYe");
            e.exports = function(e) {
                return null == e ? "" : r(e)
            }
        },
        e4Nc: function(e, t, n) {
            var r = n("fGT3"),
                i = n("k+1r"),
                o = n("JHgL"),
                s = n("pSRY"),
                a = n("H8j4");

            function c(e) {
                var t = -1,
                    n = null == e ? 0 : e.length;
                for (this.clear(); ++t < n;) {
                    var r = e[t];
                    this.set(r[0], r[1])
                }
            }
            c.prototype.clear = r, c.prototype.delete = i, c.prototype.get = o, c.prototype.has = s, c.prototype.set = a, e.exports = c
        },
        e7zE: function(e, t, n) {
            var r, i, o, s, a, c, d, u, l;
            e.exports = (l = n("Ib8C"), n("3y9D"), n("WYAk"), i = (r = l).lib, o = i.Base, s = i.WordArray, a = r.algo, c = a.SHA1, d = a.HMAC, u = a.PBKDF2 = o.extend({
                cfg: o.extend({
                    keySize: 4,
                    hasher: c,
                    iterations: 1
                }),
                init: function(e) {
                    this.cfg = this.cfg.extend(e)
                },
                compute: function(e, t) {
                    for (var n = this.cfg, r = d.create(n.hasher, e), i = s.create(), o = s.create([1]), a = i.words, c = o.words, u = n.keySize, l = n.iterations; a.length < u;) {
                        var p = r.update(t).finalize(o);
                        r.reset();
                        for (var m = p.words, h = m.length, f = p, g = 1; g < l; g++) {
                            f = r.finalize(f), r.reset();
                            for (var y = f.words, _ = 0; _ < h; _++) m[_] ^= y[_]
                        }
                        i.concat(p), c[0]++
                    }
                    return i.sigBytes = 4 * u, i
                }
            }), r.PBKDF2 = function(e, t, n) {
                return u.create(n).compute(e, t)
            }, l.PBKDF2)
        },
        eOcF: function(e, t) {
            var n = {}.hasOwnProperty;
            e.exports = function(e, t) {
                return n.call(e, t)
            }
        },
        eUgh: function(e, t) {
            e.exports = function(e, t) {
                for (var n = -1, r = null == e ? 0 : e.length, i = Array(r); ++n < r;) i[n] = t(e[n], n, e);
                return i
            }
        },
        ebA4: function(e, t, n) {
            "use strict";
            n.d(t, "c", (function() {
                return d
            })), n.d(t, "b", (function() {
                return u
            })), n.d(t, "a", (function() {
                return l
            }));
            var r = n("UJDs"),
                i = n("j6JD"),
                o = n("CDcE"),
                s = n("fsQs"),
                a = n("XuBa");
            const c = new TextEncoder;

            function d(e) {
                let t = e;
                if (Object(o.c)(t)) return t.asset = a.a.encrypt(t.asset), t;
                if (Object(o.b)(t)) return t.args;
                if ("function" == typeof t) try {
                    t = e()
                } catch (n) {
                    t = t.toString()
                }
                return "object" == typeof t && (t = JSON.stringify(t, Object(o.a)())), "string" == typeof t && (t = t.replace(/\r\n|\n|\t|\r/g, "").toString()), t
            }

            function u(e, t) {
                let {
                    lineMeta: n,
                    template: a,
                    args: u
                } = e;
                if ("number" == typeof a) throw new Error("Error: expected template as string. Got number?! [" + n.id1 + ":" + n.id2 + "]");
                const l = Object(i.a)(n.tick),
                    p = [n.module, n.features.join("/")].filter((e => e)).join("|"),
                    m = function(e, t) {
                        let n = [],
                            r = -1;
                        if (t.forEach(((e, t) => {
                                (Object(o.b)(e) || Object(o.c)(e)) && (r = t), n.push(d(e))
                            })), 1 === n.length && 1 === t.length && "function" == typeof t[0] && Array.isArray(n[0]) && (n = [...n[0]]), !e) return n.join(" ");
                        const i = "{}";
                        let s = e;
                        const a = [];
                        for (n.forEach((e => {
                                -1 !== s.search(i) ? s = s.replace(i, e) : a.push(e)
                            })); - 1 !== s.search(i);) s = s.replace(i, "");
                        return s.concat(" ").concat(a.join(" "))
                    }(a, u),
                    h = "[" + [n.id1, n.id2].join(":") + "]",
                    f = r.a[n.level].toUpperCase(),
                    g = [`${l}__${t?`${t.ss}.${t.ss_ln}`:"?.?"}`, f, p, m, h].join("\t"),
                    y = c.encode(g.concat("\n"));
                return y.byteLength > s.k.file_lim ? y.slice(0, s.k.file_lim) : y
            }

            function l(e) {
                const t = new ArrayBuffer(8),
                    n = new DataView(t),
                    r = 4294967295,
                    i = ~~(e / r),
                    o = e % r - i;
                return n.setUint32(0, i), n.setUint32(4, o), t
            }
        },
        ebwN: function(e, t, n) {
            var r = n("Cwc5")(n("Kz5y"), "Map");
            e.exports = r
        },
        ejc7: function(e, t, n) {
            var r = n("OsYe"),
                i = n("39uu"),
                o = r.document,
                s = i(o) && i(o.createElement);
            e.exports = function(e) {
                return s ? o.createElement(e) : {}
            }
        },
        ekgI: function(e, t, n) {
            var r = n("YESw"),
                i = Object.prototype.hasOwnProperty;
            e.exports = function(e) {
                var t = this.__data__;
                return r ? void 0 !== t[e] : i.call(t, e)
            }
        },
        ez9R: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("zlog-bin-encoder")
        },
        ezdo: function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("HPcM"),
                s = n("Y58e"),
                a = n("AH6j"),
                c = n("fsQs"),
                d = n("Y41u"),
                u = n("UJDs"),
                l = n("PLj1"),
                p = n("jGDt"),
                m = n("KRcn"),
                h = n("7FSS");
            const f = null === globalThis || void 0 === globalThis ? void 0 : globalThis.performance;
            let g = Object(i.injectable)()(r = function(e, t) {
                return Object(i.inject)(p.a)(e, void 0, 0)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === p.a ? Object : p.a])(r = class extends a.b {
                constructor(e) {
                    super(), this._session = e, this._data = [], this._lastPing = 0, this._isSessionLineReady = !1, this.add = e => {
                        this._data.push(e), f.now() - this._lastPing >= c.l && (this._lastPing = f.now(), this._broadcastEvent(d.c.LogBucketRequestFlush)), this._data.length > 5e4 && h.a.error(`[ZLL]: bucket size high: ${this._data.length}`)
                    }, this._broadcastEvent = (e, t) => {
                        switch (e) {
                            case d.c.LogBucketRequestFlush:
                            case d.c.RegLogBucketStatus:
                                this.dispatchEvent(new d.b(e, t))
                        }
                    }, this.recordSession()
                }
                get(e) {
                    return void 0 === e && (e = c.i), this._isSessionLineReady || h.a.error("[ZLL]: session line not ready. get() returns 0 untils it is ready"), this._isSessionLineReady ? this._data.slice(0, e) : []
                }
                removeFirst(e) {
                    void 0 === e && (e = 1), this._data.splice(0, e)
                }
                getAll() {
                    return this._isSessionLineReady ? this._data : []
                }
                size() {
                    return this._data.length
                }
                recordSession() {
                    const e = this._session.getSession();
                    const t = `zlgvers:${e.zlgv} ps:${e.process} build:${e.env}-${e.buildType} pversion:${e.pversion} avers:undefined bhash:${e.build}`,
                        n = {
                            lineMeta: {
                                type: "info",
                                module: "Session".toUpperCase(),
                                features: [""],
                                level: u.b.info,
                                id1: 0,
                                id2: 0,
                                tick: this._session.getProcessStartTime()
                            },
                            template: "",
                            args: [t]
                        };
                    this._data.unshift(n), this._isSessionLineReady = !0
                }
            }) || r) || r) || r) || r;
            var y;
            i.ModuleContainer.registerSingleton(o.a, g);
            let _ = Object(i.injectable)()(y = class extends a.b {
                constructor() {
                    super(...arguments), this._data = []
                }
                removeFirst(e) {
                    void 0 === e && (e = 1), this._data.splice(0, e)
                }
                add(e) {
                    this._data.push(e), this._broadcastEvent(d.c.LogBucketRequestFlush)
                }
                get(e) {
                    const t = this._data.slice(0, e);
                    return this._data = this._data.slice(e), t
                }
                getAll() {
                    return this._data
                }
                size() {
                    return this._data.length
                }
                _broadcastEvent(e, t) {
                    switch (e) {
                        case d.c.LogBucketRequestFlush:
                        case d.c.SentryLogBucketStatus:
                            this.dispatchEvent(new d.b(e, t))
                    }
                }
            }) || y;
            i.ModuleContainer.registerSingleton(o.b, _);
            const E = Object(i.define)("zlogger-validator");
            var b;
            let I = Object(i.injectable)()(b = function(e, t) {
                return Object(i.inject)(s.a)(e, void 0, 0)
            }(b = Reflect.metadata("design:type", Function)(b = Reflect.metadata("design:paramtypes", [void 0 === s.a ? Object : s.a])(b = class {
                constructor(e) {
                    this.config = e, this.DevOrStagingLevelConfig = {
                        [u.b.info]: !0,
                        [u.b.error]: !0,
                        [u.b.warn]: !0,
                        [u.b.debug]: !0,
                        [u.b.critical]: !0
                    }, this.ProdLevelConfig = {
                        [u.b.info]: !0,
                        [u.b.error]: !0,
                        [u.b.warn]: !0,
                        [u.b.debug]: !1,
                        [u.b.critical]: !0
                    }, this.DevOrStagingTransConfig = {
                        [u.b.info]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.error]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.warn]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.debug]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.critical]: {
                            toFile: !0,
                            toConsole: !0
                        }
                    }, this.ProdTransConfig = {
                        [u.b.info]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.error]: {
                            toFile: !0,
                            toConsole: !0
                        },
                        [u.b.warn]: {
                            toFile: !1,
                            toConsole: !1
                        },
                        [u.b.debug]: {
                            toFile: !1,
                            toConsole: !1
                        },
                        [u.b.critical]: {
                            toFile: !0,
                            toConsole: !0
                        }
                    }, this._ProcessBlacklist = [], c.n && h.a.log("zlogger validator init")
                }
                validateLog(e, t, n, r) {
                    if (this._isBlackedlisted(e)) return !1;
                    switch (e) {
                        case l.b.Main:
                            return this._validateNoConfig(t, n, r);
                        case l.b.Web:
                        case l.b.Login:
                        case l.b.Photo:
                        case l.b.SharedWorker:
                        case l.b.Render:
                            return this._validateUsingConfig(t, n, r);
                        default:
                            return this._validateNoConfig(t, n, r)
                    }
                }
                _validateUsingConfig(e, t, n) {
                    const r = !!this.config && this.config.get("stagingAccount"),
                        i = !!this.config && this.config.get("adminMode");
                    return (!0 !== (null == n ? void 0 : n.stagingOnly) || !1 !== r || !1 != !i) && (i || r ? this.DevOrStagingLevelConfig[e] && this.DevOrStagingTransConfig[e][t] : this.ProdLevelConfig[e] && this.ProdTransConfig[e][t])
                }
                _validateNoConfig(e, t, n) {
                    return this.ProdLevelConfig[e] && this.ProdTransConfig[e][t]
                }
                _isBlackedlisted(e) {
                    var t;
                    return !!(e === l.b.Embed || this.config && !0 === (null === (t = this.config) || void 0 === t ? void 0 : t.get("adminConfig.offLog")) || this._ProcessBlacklist.includes(e))
                }
            }) || b) || b) || b) || b;
            i.ModuleContainer.register(E, I);
            const v = Object(i.define)("zsentry-log-trans"),
                T = Object(i.define)("zfile-log-trans"),
                O = Object(i.define)("zconsole-log-trans");
            var w, P, S, A = n("W8fB");
            let R = Object(i.injectable)()(w = function(e, t) {
                    return Object(i.inject)(o.b)(e, void 0, 0)
                }(w = Reflect.metadata("design:type", Function)(w = Reflect.metadata("design:paramtypes", [void 0 === o.b ? Object : o.b])(w = class {
                    constructor(e) {
                        this.sentryBucket = e
                    }
                    transport(e) {
                        throw new Error("Method not implemented.")
                    }
                }) || w) || w) || w) || w,
                M = Object(i.injectable)()(P = function(e, t) {
                    return Object(i.inject)(o.a)(e, void 0, 0)
                }(P = function(e, t) {
                    return Object(i.inject)(E)(e, void 0, 1)
                }(P = Reflect.metadata("design:type", Function)(P = Reflect.metadata("design:paramtypes", [void 0 === o.a ? Object : o.a, void 0 === E ? Object : E])(P = class {
                    constructor(e, t) {
                        this.regularBucket = e, this.validator = t, this._currentProcess = void 0, this._currentProcess = Object(m.a)()
                    }
                    transport(e) {
                        this.validator.validateLog(this._currentProcess, e.lineMeta.level, "toFile", e.extras) && this.regularBucket.add(e)
                    }
                }) || P) || P) || P) || P) || P,
                N = Object(i.injectable)()(S = function(e, t) {
                    return Object(i.inject)(E)(e, void 0, 0)
                }(S = function(e, t) {
                    return Object(i.inject)(A.a)(e, void 0, 1)
                }(S = Reflect.metadata("design:type", Function)(S = Reflect.metadata("design:paramtypes", [void 0 === E ? Object : E, void 0 === A.a ? Object : A.a])(S = class {
                    constructor(e, t) {
                        this.validator = e, this.consoleWriter = t, this._currentProcess = void 0, this._currentProcess = Object(m.a)()
                    }
                    transport(e) {
                        this.validator.validateLog(this._currentProcess, e.lineMeta.level, "toConsole", e.extras) && this.consoleWriter.write(e)
                    }
                }) || S) || S) || S) || S) || S;
            i.ModuleContainer.registerSingleton(T, M), i.ModuleContainer.registerSingleton(v, R), i.ModuleContainer.registerSingleton(O, N);
            var C = n("XB6V");
            const D = ["info", "warn", "debug", "error", "critical"],
                L = ["", "F", "C", "T", "FT", "CT"];

            function U() {
                let e = 0;
                const t = {},
                    n = {};
                return D.forEach((r => {
                    L.forEach((i => {
                        "" === i ? (t[e] = `z${r}A`, n[`z${r}A`] = e, e += 1) : "T" === i ? (t[e] = `z${r}AT`, n[`z${r}AT`] = e, e += 1) : (t[e] = `z${r}${i}`, n[`z${r}${i}`] = e, e += 1)
                    }))
                })), {
                    EnumeratedLevels: t,
                    ReversedEnumeratedLevels: n
                }
            }
            Object.freeze(L), Object.freeze(D);
            const x = U().EnumeratedLevels,
                k = U().ReversedEnumeratedLevels;
            Object.freeze(x), Object.freeze(k);
            var B, j = n("h0S/");
            let F = Object(i.injectable)()(B = function(e, t) {
                return Object(i.inject)(T)(e, void 0, 0)
            }(B = function(e, t) {
                return Object(i.inject)(v)(e, void 0, 1)
            }(B = function(e, t) {
                return Object(i.inject)(O)(e, void 0, 2)
            }(B = Reflect.metadata("design:type", Function)(B = Reflect.metadata("design:paramtypes", [void 0 === T ? Object : T, void 0 === v ? Object : v, void 0 === O ? Object : O])(B = class extends class {} {
                constructor(e, t, n) {
                    super(), this.fileTransporter = e, this.sentryTransporter = t, this.consoleTransporter = n, this._instanceMap = new Map
                }
                createZLogger(e, t, n) {
                    void 0 === t && (t = []);
                    const r = `${e}:${t.join(":")}`,
                        o = this._instanceMap.get(r);
                    var s, a, c, d, l, m, f, g, y, _, E;
                    if (o && ((null == n ? void 0 : n.trans) === (null === (s = o.config) || void 0 === s ? void 0 : s.trans) && (null == n || null === (a = n.trans) || void 0 === a ? void 0 : a.file) === (null === (c = o.config) || void 0 === c || null === (d = c.trans) || void 0 === d ? void 0 : d.file) && (null == n || null === (l = n.trans) || void 0 === l ? void 0 : l.console) === (null === (m = o.config) || void 0 === m || null === (f = m.trans) || void 0 === f ? void 0 : f.console) && (null == n || null === (g = n.trans) || void 0 === g ? void 0 : g.sentry) === (null === (y = o.config) || void 0 === y || null === (_ = y.trans) || void 0 === _ ? void 0 : _.sentry) && (null == n ? void 0 : n.stagingOnly) === (null === (E = o.config) || void 0 === E ? void 0 : E.stagingOnly))) return o.logger;
                    let b, I, v;
                    (void 0 === (null == n ? void 0 : n.trans) || null != n && n.trans.file) && (b = this.fileTransporter), (void 0 === (null == n ? void 0 : n.trans) || null != n && n.trans.console) && (I = this.consoleTransporter), (void 0 === (null == n ? void 0 : n.trans) || null != n && n.trans.sentry) && (v = this.sentryTransporter);
                    const T = class {
                        constructor(e, t, n) {
                            var r = this;
                            this.module = e, this.features = t, this.config = n, this.enabled = !0, this.Sentry = null, this.tempOffConfig = {
                                toConsole: !1,
                                toFile: !1,
                                toSentry: !1
                            }, this.zsentry = function() {
                                if (r.Sentry) {
                                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                                    r.Sentry.captureException(new Error(t.join(" ")))
                                }
                            }, this.zfatal = function() {}, this.zsymb = function(e, t, n) {
                                if (!1 === r.enabled) return;
                                const i = x[e];
                                for (var o = arguments.length, s = new Array(o > 3 ? o - 3 : 0), a = 3; a < o; a++) s[a - 3] = arguments[a];
                                if (i.includes("zcritical")) return void(r.Sentry && r.Sentry.captureException(new Error(s.join(" "))));
                                const c = r._getLevel(i);
                                if (i.endsWith("A")) r._transport({
                                    tick: Date.now(),
                                    level: c,
                                    id1: t,
                                    id2: n,
                                    templ: null,
                                    args: s,
                                    target: "ConsoleFile"
                                });
                                else if (i.endsWith("AT")) {
                                    const [e, ...i] = s;
                                    r._transport({
                                        tick: Date.now(),
                                        level: c,
                                        id1: t,
                                        id2: n,
                                        templ: e,
                                        args: i,
                                        target: "ConsoleFile"
                                    })
                                } else if (i.endsWith("C") || i.endsWith("F")) r._transport({
                                    tick: Date.now(),
                                    level: c,
                                    id1: t,
                                    id2: n,
                                    templ: null,
                                    args: s,
                                    target: i.endsWith("C") ? "toConsole" : "toFile"
                                });
                                else if (i.endsWith("CT") || i.endsWith("FT")) {
                                    const [e, ...o] = s;
                                    r._transport({
                                        tick: Date.now(),
                                        level: c,
                                        id1: t,
                                        id2: n,
                                        templ: e,
                                        args: o,
                                        target: i.endsWith("CT") ? "toConsole" : "toFile"
                                    })
                                }
                            }, this._transport = e => {
                                let {
                                    tick: t,
                                    level: n,
                                    id1: r,
                                    id2: o,
                                    templ: s,
                                    args: a,
                                    target: c
                                } = e;
                                const d = () => ({
                                        lineMeta: {
                                            type: "normal",
                                            module: this.module,
                                            features: this.features,
                                            id1: r,
                                            id2: o,
                                            level: n,
                                            tick: t
                                        },
                                        template: s,
                                        args: a,
                                        extras: {
                                            stagingOnly: this.config.stagingOnly
                                        }
                                    }),
                                    u = i.ModuleContainer.resolve(p.a);
                                var l, m;
                                if ("ConsoleFile" === c) !1 === this.tempOffConfig.toConsole && u.isEnabledConsole() && (null === (l = this.config.toConsole) || void 0 === l || l.transport(d())), !1 === this.tempOffConfig.toFile && (null === (m = this.config.toFile) || void 0 === m || m.transport(d()));
                                else if (!1 === this.tempOffConfig[c]) {
                                    var h;
                                    if ("toConsole" === c && !u.isEnabledConsole()) return;
                                    null === (h = this.config[c]) || void 0 === h || h.transport(d())
                                }
                            }, this._getLevel = e => {
                                let t = e;
                                e.endsWith("A") ? t = e.replace("A", "") : e.endsWith("AT") ? t = e.replace("AT", "") : e.endsWith("C") ? t = e.replace("C", "") : e.endsWith("CT") ? t = e.replace("CT", "") : e.endsWith("F") ? t = e.replace("F", "") : e.endsWith("FT") && (t = e.replace("FT", ""));
                                let n = u.b.info;
                                switch (t) {
                                    case "zinfo":
                                        n = u.b.info;
                                        break;
                                    case "zwarn":
                                        n = u.b.warn;
                                        break;
                                    case "zerror":
                                        n = u.b.error;
                                        break;
                                    case "zdebug":
                                        n = u.b.debug
                                }
                                return n
                            }, this.zinfo = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zinfoC = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zinfoF = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zwarn = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zwarnC = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zwarnF = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zerror = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zerrorC = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zerrorF = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zdebug = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zdebugC = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.zdebugF = function() {
                                throw new Error("babel-plugin-transform-zlog failed: zlog malfunction")
                            }, this.enabled = !0 === function(e, t, n) {
                                if (void 0 === n && (n = !1), !j.a.includes(e) && !1 === j.c[e]) return h.a.error("LogModeController:", [e, t], `module ${e} is not whitelisted`), !1;
                                let r = !1;
                                for (const i of t) {
                                    const o = j.a.includes(i) || !(!1 === j.c[e]);
                                    if (n && !o || !o && !r) return !1;
                                    if (o) {
                                        if (r = !0, !n) return !0
                                    } else if (!r) return h.a.error("LogModeController:", [e, t], `feat ${i} is not whitelisted and requireAllFeatOn:${n}`), !1
                                }
                                return !0
                            }(this.module, this.features)
                        }
                        disableFile() {
                            this.tempOffConfig.toFile = !0
                        }
                        enableFile() {
                            this.tempOffConfig.toFile = !1
                        }
                        disableConsole() {
                            this.tempOffConfig.toConsole = !0
                        }
                        enableConsole() {
                            this.tempOffConfig.toConsole = !1
                        }
                        static create(e, t, n) {
                            return new this(e, t, n)
                        }
                        pause() {
                            this.enabled = !0
                        }
                        resume() {
                            this.enabled = !1
                        }
                        specialTransport(e) {
                            this._transport(e)
                        }
                    }.create(e, t, {
                        toFile: b,
                        toConsole: I,
                        toSentry: v,
                        stagingOnly: null == n ? void 0 : n.stagingOnly
                    });
                    return this._instanceMap.set(r, {
                        logger: T,
                        config: n
                    }), T
                }
                createZLoggerStaging(e, t, n) {
                    return t.push(j.b.staging), this.createZLogger(e, t, {
                        trans: n,
                        stagingOnly: !0
                    })
                }
            }) || B) || B) || B) || B) || B) || B;
            i.ModuleContainer.register(C.a, F);
            var G = n("yBqK"),
                q = n("ebA4");
            var H, z = n("CDcE");
            let K = Object(i.injectable)()(H = Reflect.metadata("design:type", Function)(H = Reflect.metadata("design:paramtypes", [])(H = class extends class {
                constructor() {
                    this._TextEncoder = new TextEncoder
                }
                encodeUi8(e, t, n) {
                    return e.setUint8(t, n), t + c.b.ui8
                }
                encodeUi16(e, t, n) {
                    return e.setUint16(t, n), t + c.b.ui16
                }
                encodeUi32(e, t, n) {
                    return e.setUint32(t, n), t + c.b.ui32
                }
                encodeFloat32(e, t, n) {
                    return e.setFloat32(t, n), t + c.b.float32
                }
                encodeFloat64(e, t, n) {
                    return e.setFloat64(t, n), t + c.b.float64
                }
                encodeBigInt64(e, t, n) {
                    const r = Object(q.a)(n),
                        i = new Uint8Array(r);
                    for (let o = 0; o < i.byteLength; o++) t = this.encodeUi8(e, t, i[o]);
                    return t
                }
                encodeTotalSize(e, t, n) {
                    return this.encodeUi16(e, t, n)
                }
                encodeTotalSizeEnd(e, t) {
                    return this.encodeUi16(e, t, t + c.b.ui16)
                }
                encodeTick(e, t, n) {
                    const r = Object(q.a)(n),
                        i = new Uint8Array(r);
                    return this.copyCache(e, t, i)
                }
                encodeVers(e, t, n) {
                    if (n > 32767) throw new Error("[BinEncoder] error: encoding verion is TOO BIG!");
                    return this.encodeUi16(e, t, n)
                }
                encodeEncoderVers(e, t, n) {
                    if (n > 255) throw new Error("[BinEncoder] error: encoding level is TOO BIG!");
                    return this.encodeUi8(e, t, n)
                }
                encodeLevel(e, t, n) {
                    if (n > 255) throw new Error("[BinEncoder] error: encoding level is TOO BIG!");
                    return this.encodeUi8(e, t, n)
                }
                encodeHeaderNum(e, t, n) {
                    if (n > 255) throw new Error("[BinEncoder] error: encoding numOfHeader is TOO BIG!");
                    return this.encodeUi8(e, t, n)
                }
                encodeStringOnly(e, t, n) {
                    const r = this._TextEncoder.encode(n),
                        i = r.byteLength;
                    return t = this.encodeUi8(e, t, i), this.copyCache(e, t, r)
                }
                copyCache(e, t, n) {
                    for (let r = 0; r < n.byteLength; r++) t = this.encodeUi8(e, t, n[r]);
                    return t
                }
            } {
                constructor() {
                    super(), this.MemoryLogBatch = void 0, this.dv = void 0, this._lastOffset = 0, this._lastTs = 0, this.MemoryLogBatch = new ArrayBuffer(c.d.mem_batch_lim), this.dv = new DataView(this.MemoryLogBatch)
                }
                getLastBuffer() {
                    return this.MemoryLogBatch.slice(0, this._lastOffset)
                }
                encode(e, t, n) {
                    try {
                        const {
                            lineMeta: r,
                            args: i
                        } = e;
                        let o = 0;
                        o += c.b.ui16;
                        let s = r.tick;
                        s <= this._lastTs && (s = this._lastTs + 1), this._lastTs = s, o = this.encodeTick(this.dv, o, s), o = this.encodeEncoderVers(this.dv, o, c.o), o = this.encodeLevel(this.dv, o, r.level), o = this.encodeUi16(this.dv, o, n.ss), o = this.encodeUi32(this.dv, o, n.ss_ln), o = this.encodeStringOnly(this.dv, o, "L98HQdtV"), o = this.encodeUi32(this.dv, o, t), o = this.encodeUi16(this.dv, o, r.id1), o = this.encodeUi16(this.dv, o, r.id2), o = this._encodeArgs(o, this.dv, i);
                        const a = o + c.b.ui16;
                        return this.encodeTotalSize(this.dv, 0, a), o = this.encodeTotalSize(this.dv, o, a), this._lastOffset = o, this.MemoryLogBatch.slice(0, a)
                    } catch (r) {
                        throw h.a.error("BinEncoderImpl.encode error:", r), new Error("BinEncoderImpl.encode error")
                    }
                }
                _allowTruncate() {
                    const e = i.ModuleContainer.resolve(s.a),
                        t = (null == e ? void 0 : e.get("adminMode")) || !1,
                        n = e.get("stagingAccount") || !1;
                    return !(t || n)
                }
                _encodeArgs(e, t, n) {
                    let r = !1;
                    const i = [];
                    if (n.length)
                        for (let s of n) "object" == typeof s && (r = Object(z.b)(s) || Object(z.c)(s)), i.push(Object(q.c)(s));
                    let o;
                    if (o = 1 === i.length && 1 === n.length && Array.isArray(i[0]) && "function" == typeof n[0] ? G.encode([...i[0]]) : G.encode(i), o.byteLength > c.d.line_hard_lim) {
                        const e = JSON.stringify(i, Object(z.a)()).slice(0, c.d.line_hard_lim);
                        o = G.encode(e)
                    } else if (!r && o.byteLength > c.d.line_soft_lim && this._allowTruncate()) {
                        const e = JSON.stringify(i, Object(z.a)()).slice(0, c.d.line_soft_lim);
                        o = G.encode(e)
                    }
                    for (let s = 0; s < o.byteLength; s++) e = this.encodeUi8(t, e, o[s]);
                    return e
                }
            }) || H) || H) || H;
            var W = n("ez9R");
            i.ModuleContainer.registerSingleton(W.a, K);
            var V = n("K8kB");
            var Y, $ = class {
                constructor(e, t) {
                    void 0 === e && (e = []), void 0 === t && (t = !0), this.tasks = e, this.alive = t
                }
                do() {
                    return this.add(...arguments)
                }
                add() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    return this.tasks = this.tasks.concat(t), this
                }
                once(e) {
                    return void 0 === e && (e = !1), this.alive = !1, e && (async e => this.async())() || this.sync(), this
                }
                every(e) {
                    return this.add((() => new Promise((t => setTimeout(t, e))))), this.forever(!0)
                }
                forever(e) {
                    return void 0 === e && (e = !1), this.alive = !0, e && (async e => this.async())() || this.sync(), this
                }
                cancel() {
                    return this.alive = !1, this
                }
                async
                async () {
                    for (let e of this.tasks) await e();
                    this.alive && this.async()
                }
                sync() {
                    for (let e of this.tasks) e();
                    this.alive && this.sync()
                }
            };
            let Q = Object(i.injectable)()(Y = function(e, t) {
                return Object(i.inject)(o.a)(e, void 0, 0)
            }(Y = Reflect.metadata("design:type", Function)(Y = Reflect.metadata("design:paramtypes", [void 0 === o.a ? Object : o.a])(Y = class extends a.b {
                constructor(e) {
                    super(), this.bucket = e, this.task = void 0, this.start = () => {
                        var e;
                        if (null !== (e = this.task) && void 0 !== e && e.alive) return;
                        this.task || (this.task = new $);
                        const t = l.c[Object(m.a)()] || c.e;
                        this.task.add((() => this._broadcastEvent(d.c.WriteSchedulerRequestFlush))).every(t), this._listenEvents()
                    }, this.stop = () => {
                        this.task && this.task.cancel(), this.task = void 0
                    }, this._listenEvents = () => {
                        this.bucket.addEventListener(d.c.LogBucketRequestFlush, this._handleFlushRequestFromBucket)
                    }, this._handleFlushRequestFromBucket = () => {
                        var e;
                        this.task && this.task.alive || (c.n && h.a.log("Oopsie! Scheduler is somehow not running. Restarting..."), null === (e = this.task) || void 0 === e || e.cancel(), this.task = void 0, this.start())
                    }
                }
                _broadcastEvent(e) {
                    if (e === d.c.WriteSchedulerRequestFlush) this.dispatchEvent(new d.a(e))
                }
            }) || Y) || Y) || Y) || Y;
            i.ModuleContainer.registerSingleton(V.a, Q)
        },
        fGT3: function(e, t, n) {
            var r = n("4kuk"),
                i = n("Xi7e"),
                o = n("ebwN");
            e.exports = function() {
                this.size = 0, this.__data__ = {
                    hash: new r,
                    map: new(o || i),
                    string: new r
                }
            }
        },
        fPcq: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("uS0h"),
                o = n("rCOr");
            const s = BigInt(-1),
                a = BigInt(1);

            function c(e, t) {
                const n = t.value,
                    r = "bigint" == typeof n ? n * s - a : -1 * n - 1;
                i.encodeUintValue(e, t.type.majorEncoded, r)
            }
            c.encodedSize = function(e) {
                const t = e.value,
                    n = "bigint" == typeof t ? t * s - a : -1 * t - 1;
                return n < i.uintBoundaries[0] ? 1 : n < i.uintBoundaries[1] ? 2 : n < i.uintBoundaries[2] ? 3 : n < i.uintBoundaries[3] ? 5 : 9
            }, c.compareTokens = function(e, t) {
                return e.value < t.value ? 1 : e.value > t.value ? -1 : 0
            }, t.decodeNegint16 = function(e, t, n, o) {
                return new r.Token(r.Type.negint, -1 - i.readUint16(e, t + 1, o), 3)
            }, t.decodeNegint32 = function(e, t, n, o) {
                return new r.Token(r.Type.negint, -1 - i.readUint32(e, t + 1, o), 5)
            }, t.decodeNegint64 = function(e, t, n, a) {
                const c = i.readUint64(e, t + 1, a);
                if ("bigint" != typeof c) {
                    const e = -1 - c;
                    if (e >= Number.MIN_SAFE_INTEGER) return new r.Token(r.Type.negint, e, 9)
                }
                if (!0 !== a.allowBigInt) throw new Error(`${o.decodeErrPrefix} integers outside of the safe integer range are not supported`);
                return new r.Token(r.Type.negint, s - BigInt(c), 9)
            }, t.decodeNegint8 = function(e, t, n, o) {
                return new r.Token(r.Type.negint, -1 - i.readUint8(e, t + 1, o), 2)
            }, t.encodeNegint = c
        },
        "fYZ/": function(e, t, n) {
            "use strict";
            var r = n("nu5z"),
                i = new RegExp(r().source);
            e.exports = i.test.bind(i)
        },
        fbdB: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return r.a
            })), n.d(t, "a", (function() {
                return i
            }));
            var r = n("uzza");
            var i = {
                bootstrap: "bootstrap",
                main_ready: "main_ready",
                main_window_finish_load: "main_window_finish_load",
                app_did_mount: "app_did_mount",
                app_done_preload_data: "app_done_preload_data",
                app_ready: "app_ready"
            };
            n("cnBV")
        },
        fsN4: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("+ExH"),
                o = n("1UUk");
            class s {
                static getInstance() {
                    if (!this.instance) {
                        const e = r.ModuleContainer.resolve(o.b);
                        this.instance = e.createQueryBuilder(i.a)
                    }
                    return this.instance
                }
            }
            s.instance = null
        },
        fsQs: function(e, t, n) {
            "use strict";
            n.d(t, "h", (function() {
                return r
            })), n.d(t, "f", (function() {
                return o
            })), n.d(t, "g", (function() {
                return s
            })), n.d(t, "e", (function() {
                return a
            })), n.d(t, "i", (function() {
                return c
            })), n.d(t, "j", (function() {
                return d
            })), n.d(t, "l", (function() {
                return u
            })), n.d(t, "o", (function() {
                return l
            })), n.d(t, "a", (function() {
                return p
            })), n.d(t, "m", (function() {
                return m
            })), n.d(t, "k", (function() {
                return h
            })), n.d(t, "d", (function() {
                return f
            })), n.d(t, "b", (function() {
                return g
            })), n.d(t, "c", (function() {
                return y
            })), n.d(t, "n", (function() {
                return E
            }));
            const r = 1024,
                i = r * r,
                o = 1e3,
                s = 2e3,
                a = 5e3,
                c = 1e5,
                d = 1e3,
                u = 3e5,
                l = 61,
                p = 100,
                m = {
                    SESSION_MAX: 32767,
                    SESSION_LINE_MAX: 4294967295
                },
                h = {
                    mem_batch_lim: 500 * r,
                    line_hard_lim: 30 + 50 * r,
                    line_soft_lim: 30 + 2 * r,
                    file_lim: 10 * i,
                    page_limit: 10 * i
                },
                f = {
                    mem_batch_lim: 150 * r,
                    line_hard_lim: 30 + 50 * r,
                    line_soft_lim: 30 + 2 * r,
                    file_lim: 5 * i,
                    page_limit: 250 * r
                },
                g = {
                    i8: 1,
                    ui8: 1,
                    i16: 2,
                    ui16: 2,
                    i32: 4,
                    ui32: 4,
                    float32: 4,
                    float64: 4,
                    big64: 8,
                    ubig64: 8
                };
            let y, _;
            ! function(e) {
                e[e.OK = 0] = "OK", e[e.ENCODE_LATER = 1] = "ENCODE_LATER", e[e.REWIND = 2] = "REWIND", e[e.OVERSIZE_NEXTPAGE = 3] = "OVERSIZE_NEXTPAGE"
            }(y || (y = {})),
            function(e) {
                e.TRUNCATED_ALL = "SLEE0", e.ENCODE_BUFF_HARD_LIMIT = "SLEE1", e.ENCODE_BUFF_SOFT_LIMIT = "SLEE2", e.MAX_LOGSIZE = "SLEE3", e.LINE_LIMIT_SOFT = "SLEE4", e.LINE_LIMIT_HARD = "SLEE5", e.LIME_LIMIT_HARD_NOTRUNC = "SLEE6"
            }(_ || (_ = {}));
            const E = !1
        },
        "g+yy": function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("rCOr"),
                o = n("uS0h"),
                s = n("pMzR"),
                a = n("PvD+");

            function c(e, t, n, o, s) {
                const c = n + o;
                i.assertEnoughData(e, t, c);
                const d = new r.Token(r.Type.string, a.toString(e, t + n, t + c), c);
                return !0 === s.retainStringBytes && (d.byteValue = a.slice(e, t + n, t + c)), d
            }
            const d = s.encodeBytes;
            t.decodeString16 = function(e, t, n, r) {
                return c(e, t, 3, o.readUint16(e, t + 1, r), r)
            }, t.decodeString32 = function(e, t, n, r) {
                return c(e, t, 5, o.readUint32(e, t + 1, r), r)
            }, t.decodeString64 = function(e, t, n, r) {
                const s = o.readUint64(e, t + 1, r);
                if ("bigint" == typeof s) throw new Error(`${i.decodeErrPrefix} 64-bit integer string lengths not supported`);
                return c(e, t, 9, s, r)
            }, t.decodeString8 = function(e, t, n, r) {
                return c(e, t, 2, o.readUint8(e, t + 1, r), r)
            }, t.decodeStringCompact = function(e, t, n, r) {
                return c(e, t, 1, n, r)
            }, t.encodeString = d
        },
        "gb/T": function(e, t, n) {
            var r, i;
            e.exports = (i = n("Ib8C"), n("OLod"), i.mode.ECB = ((r = i.lib.BlockCipherMode.extend()).Encryptor = r.extend({
                processBlock: function(e, t) {
                    this._cipher.encryptBlock(e, t)
                }
            }), r.Decryptor = r.extend({
                processBlock: function(e, t) {
                    this._cipher.decryptBlock(e, t)
                }
            }), r), i.mode.ECB)
        },
        gpNb: function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("PmZf"),
                s = n("rvru"),
                a = n("UJ0r"),
                c = n("PhBv"),
                d = n("tHMN");
            let u = i.ModuleContainer.injectable()(r = function(e, t) {
                return i.ModuleContainer.inject(c.b)(e, void 0, 0)
            }(r = function(e, t) {
                return i.ModuleContainer.inject(a.b)(e, void 0, 1)
            }(r = function(e, t) {
                return i.ModuleContainer.inject(s.a)(e, void 0, 2)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === c.a ? Object : c.a, void 0 === a.a ? Object : a.a, void 0 === s.a ? Object : s.a])(r = class extends d.a {
                constructor(e, t, n) {
                    super(), this.queryPlanner = e, this.adapterManager = t, this.dbQos = n, this.queryPlanner.addEventListener(o.a.QueryError, (e => {
                        this.dispatchEvent(new o.b(e.error)), this.dbQos.sendDBErrorQos(e.error)
                    })), this.queryPlanner.addEventListener(o.a.UnexpectedError, (e => {
                        this.dispatchEvent(new o.d(e.error)), this.dbQos.sendDBErrorQos(e.error)
                    }))
                }
                async closeDatabase(e) {
                    await this.adapterManager.closeDatabase(e)
                }
                async closeAllDatabases() {
                    this.queryPlanner.stop(), await this.adapterManager.closeAllDatabases()
                }
                async deleteDatabase(e) {
                    await this.adapterManager.deleteDatabase(e)
                }
                async deleteAllDatabases() {
                    this.queryPlanner.stop(), await this.adapterManager.deleteAllDatabases()
                }
                doesDatabaseExists(e) {
                    return this.adapterManager.doesDatabaseExists(e)
                }
                do(e) {
                    return this.queryPlanner.do(e)
                }
                doImmediately(e) {
                    return "Qos" === e.database && e.trace(), this.queryPlanner.doImmediately(e)
                }
            }) || r) || r) || r) || r) || r) || r;
            i.ModuleContainer.registerSingleton(d.b, u)
        },
        gpfy: function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("VTBJ"),
                i = n("N1xz"),
                o = n("dFSO"),
                s = n("AoYG");
            t.default = class {
                constructor() {
                    this.systemInfo = void 0
                }
                recordAtTime(e, t) {
                    const n = Date.now();
                    try {
                        const {
                            pid: a,
                            memoryUsage: c,
                            heapStats: d,
                            cpuUsage: u
                        } = MetriczGlobal.getProcessStats(), l = {
                            pid: a,
                            name: i.a.process,
                            memory: {
                                rss: c.rss,
                                heapTotal: c.heapTotal,
                                heapUsed: c.heapUsed,
                                heapSizeLimit: Object(o.c)(d.heapSizeLimit),
                                totalHeapSizeExecutable: Object(o.c)(d.totalHeapSizeExecutable),
                                totalPhysicalSize: Object(o.c)(d.totalPhysicalSize),
                                totalAvailableSize: Object(o.c)(d.totalAvailableSize),
                                mallocedMemory: Object(o.c)(d.mallocedMemory),
                                peakMallocedMemory: Object(o.c)(d.peakMallocedMemory),
                                doesZapGarbage: d.doesZapGarbage,
                                external: c.external,
                                arrayBuffers: c.arrayBuffers
                            },
                            cpu: Object(r.a)({}, u),
                            recordAt: n,
                            usageTime: n - i.a.EPOCH
                        };
                        null != t && t.length && t.forEach((t => {
                            const r = i.a.MetricFactory.create(t.name, `${l.name}.${e.passedTime}`, t);
                            var o;
                            (r.setStartAt(e.startTime), r.setEndAt(n), r.setData(l, e.passedTime), t.type === s.a.CPU) ? r.pushInfo({
                                percentCPUUsage: null === (o = l.cpu) || void 0 === o ? void 0 : o.percent,
                                recordAt: l.recordAt,
                                usageTime: l.usageTime,
                                processName: l.name
                            }): t.type === s.a.MEMORY && r.pushInfo({
                                heapUsed: l.memory.heapUsed,
                                heapTotal: l.memory.heapTotal,
                                rss: l.memory.rss
                            });
                            r.evaluate(), r.resolve(), i.a.MetricResolver.resolve(r)
                        })), i.a.MetricTransporter.transmitProcessStats(l)
                    } catch (a) {}
                }
                getSystemInfo() {
                    return this.systemInfo || (this.systemInfo = {
                        arch: MetriczGlobal.getArch()
                    }), this.systemInfo
                }
            }
        },
        "h0S/": function(e, t, n) {
            "use strict";
            let r;
            n.d(t, "b", (function() {
                    return r
                })), n.d(t, "c", (function() {
                    return i
                })), n.d(t, "a", (function() {
                    return o
                })),
                function(e) {
                    e.moduleA = "moduleA", e.featA = "featA", e.featPhoto = "photo", e.featPhotoLoadCache = "photoLoadCache", e.featPhotoDomCache = "photoDomCache", e.featPhotoReduxAction = "photoReduxAction", e.staging = "staging", e.onlyAdminChatSettings = "only-admin-chat-setting", e.contactTabV2 = "contact-tab-v2", e.conversationSetting = "conversation-setting", e.appStatus = "app-status", e.focusDetectorManager = "focus-detector-manager", e.focusStatus = "focus-status", e.syncDownload = "sync-download", e.activeDeactive = "active-deactive", e.signalProtocolManager = "signal-protocol-manager", e.resendManager = "resend-manager", e.iidManager = "iid-manager", e.signalStore = "signal-protocol-store", e.conversation = "conversation", e.controller = "controller", e.service = "service", e.stateMachine = "state-machine", e.convList = "conv-list", e.e2ee = "e2ee", e.metricz = "metricz", e.unread = "unread", e.blobHelper = "blob-helper", e.imgNormalizer = "img-normalizer", e.pinTopic = "pin-topic"
                }(r || (r = {}));
            const i = {
                    [r.moduleA]: !0,
                    [r.featA]: !0,
                    [r.featPhoto]: !0,
                    [r.featPhotoLoadCache]: !0,
                    [r.featPhotoDomCache]: !0,
                    [r.featPhotoReduxAction]: !0,
                    [r.staging]: !0,
                    [r.onlyAdminChatSettings]: !0,
                    [r.contactTabV2]: !0,
                    [r.conversationSetting]: !0,
                    [r.appStatus]: !0,
                    [r.focusDetectorManager]: !0,
                    [r.focusStatus]: !0,
                    [r.syncDownload]: !0,
                    [r.activeDeactive]: !0,
                    [r.controller]: !0,
                    [r.service]: !0,
                    [r.stateMachine]: !0,
                    [r.service]: !0,
                    [r.stateMachine]: !0,
                    [r.metricz]: !0,
                    [r.blobHelper]: !0,
                    [r.imgNormalizer]: !0,
                    [r.pinTopic]: !0
                },
                o = []
        },
        h6tn: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return p
            }));
            var r = function() {
                return r = Object.assign || function(e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }, r.apply(this, arguments)
            };
            Object.create;
            Object.create;
            var i = function() {
                return i = Object.assign || function(e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }, i.apply(this, arguments)
            };
            Object.create;
            Object.create;

            function o(e) {
                return e.toLowerCase()
            }
            var s = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g],
                a = /[^A-Z0-9]+/gi;

            function c(e, t, n) {
                return t instanceof RegExp ? e.replace(t, n) : t.reduce((function(e, t) {
                    return e.replace(t, n)
                }), e)
            }

            function d(e, t) {
                var n = e.charAt(0),
                    r = e.substr(1).toLowerCase();
                return t > 0 && n >= "0" && n <= "9" ? "_" + n + r : "" + n.toUpperCase() + r
            }

            function u(e, t) {
                return void 0 === t && (t = {}),
                    function(e, t) {
                        void 0 === t && (t = {});
                        for (var n = t.splitRegexp, r = void 0 === n ? s : n, i = t.stripRegexp, d = void 0 === i ? a : i, u = t.transform, l = void 0 === u ? o : u, p = t.delimiter, m = void 0 === p ? " " : p, h = c(c(e, r, "$1\0$2"), d, "\0"), f = 0, g = h.length;
                            "\0" === h.charAt(f);) f++;
                        for (;
                            "\0" === h.charAt(g - 1);) g--;
                        return h.slice(f, g).split("\0").map(l).join(m)
                    }(e, i({
                        delimiter: "",
                        transform: d
                    }, t))
            }

            function l(e, t) {
                return 0 === t ? e.toLowerCase() : d(e, t)
            }

            function p(e, t) {
                return void 0 === t && (t = {}), u(e, r({
                    transform: l
                }, t))
            }
        },
        hRcX: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("jDHv");
            const o = () => {},
                s = (() => {
                    let e = 0;
                    return () => ++e
                })(),
                a = {
                    id: 0,
                    retry: 0,
                    success: o,
                    error: o,
                    execute: o
                };

            function c(e, t) {
                const n = e.length;
                e.push(t),
                    function(e, t, n) {
                        let r = n;
                        for (;;) {
                            const n = r - 1 >>> 1,
                                i = e[n];
                            if (!(void 0 !== i && u(i, t) > 0)) return;
                            e[n] = t, e[r] = i, r = n
                        }
                    }(e, t, n)
            }

            function d(e) {
                const t = e[0];
                if (void 0 !== t) {
                    const n = e.pop();
                    return n !== t && (e[0] = n, function(e, t, n) {
                        let r = n;
                        const i = e.length;
                        for (; r < i;) {
                            const n = 2 * (r + 1) - 1,
                                i = e[n],
                                o = n + 1,
                                s = e[o];
                            if (void 0 !== i && u(i, t) < 0) void 0 !== s && u(s, i) < 0 ? (e[r] = s, e[o] = t, r = o) : (e[r] = i, e[n] = t, r = n);
                            else {
                                if (!(void 0 !== s && u(s, t) < 0)) return;
                                e[r] = s, e[o] = t, r = o
                            }
                        }
                    }(e, n, 0)), t
                }
                return null
            }

            function u(e, t) {
                const n = e.sortIndex - t.sortIndex;
                return 0 !== n ? n : e.id - t.id
            }
            let l;
            ! function(e) {
                e[e.BLOCKING = 50] = "BLOCKING", e[e.NON_BLOCKING = 250] = "NON_BLOCKING", e[e.IDLE = 500] = "IDLE", e[e.NEVER_TIMEOUT = 1e3] = "NEVER_TIMEOUT"
            }(l || (l = {}));
            const p = new class {
                    push(e, t) {
                        const n = Object(r.a)(Object(r.a)(Object(r.a)({}, a), t), {}, {
                            id: s()
                        });
                        e.push(n)
                    }
                    getCandidate(e) {
                        return e.shift()
                    }
                },
                m = new class {
                    push(e, t) {
                        c(e, Object(r.a)(Object(r.a)(Object(r.a)({}, a), t), {}, {
                            sortIndex: Date.now() + (t.deadline || l.NON_BLOCKING),
                            id: s()
                        }))
                    }
                    getCandidate(e) {
                        return d(e)
                    }
                };
            class h {
                constructor(e, t) {
                    void 0 === e && (e = p), void 0 === t && (t = !0), this._queue = void 0, this._strategy = void 0, this._stopped = void 0, this._inactive = void 0, this._queue = [], this._strategy = e, this._stopped = !t, this._inactive = !0
                }
                run(e) {
                    this._strategy.push(this._queue, e), this._inactive && this._run()
                }
                start() {
                    this._stopped = !1, setTimeout((() => {
                        this._run()
                    }))
                }
                stop() {
                    this._stopped = !0, this._inactive = !0
                }
                async _run() {
                    if (this._stopped) return void(this._inactive = !0);
                    const e = this._strategy.getCandidate(this._queue);
                    if (e) try {
                        const n = await e.execute();
                        try {
                            null == e || e.success(n)
                        } catch (t) {}
                        setTimeout((() => {
                            this._run()
                        }))
                    } catch (t) {
                        e.retry > 0 ? (e.retry--, this.run(e)) : null == e || e.error(t), setTimeout((() => {
                            this._run()
                        }))
                    } else this._inactive = !0
                }
            }
            new h(m);
            var f = n("Mgpg"),
                g = n("YEoC"),
                y = n("DI/x"),
                _ = n("PmZf"),
                E = n("YZti"),
                b = n("1UUk"),
                I = n("MRjZ"),
                v = n("0slR"),
                T = n("UJ0r"),
                O = n("teaq"),
                w = n("Abbu"),
                P = n("PhBv"),
                S = n("rkiK"),
                A = n("wH4e");
            const R = new Set(["Qos"]);
            var M;
            let N = i.ModuleContainer.injectable()(M = function(e, t) {
                return i.ModuleContainer.inject(T.b)(e, void 0, 0)
            }(M = function(e, t) {
                return i.ModuleContainer.inject(O.b)(e, void 0, 1)
            }(M = function(e, t) {
                return i.ModuleContainer.inject(v.a)(e, void 0, 2)
            }(M = function(e, t) {
                return i.ModuleContainer.inject(f.ZLoggerFactory)(e, void 0, 3)
            }(M = Reflect.metadata("design:type", Function)(M = Reflect.metadata("design:paramtypes", [void 0 === T.a ? Object : T.a, void 0 === O.b ? Object : O.b, void 0 === v.a ? Object : v.a, void 0 === f.ZLoggerFactory ? Object : f.ZLoggerFactory])(M = class extends P.a {
                constructor(e, t, n, r) {
                    super(), this.adapterManager = e, this.configManager = t, this.adapterBuilder = n, this.scheduler = void 0, this.pendingQueries = [], this.session = void 0, this.logger = void 0, this.idCounter = 0, this.scheduler = new h(p, !1), this.logger = r.createZLogger("db", ["host", "planner"]), this.adapterManager.addEventListener(_.a.UnexpectedError, (e => {
                        this.dispatchEvent(new _.d(e.error))
                    }))
                }
                start() {
                    this.scheduler.start();
                    const e = i.ModuleContainer.resolve(b.b),
                        t = e => {
                            this.session = e;
                            const t = this.pendingQueries;
                            this.pendingQueries = [], t.forEach((e => {
                                this.enqueue(e, {
                                    immediately: !1
                                })
                            }))
                        };
                    e.session && t(e.session), e.addEventListener(_.a.SessionChange, (e => {
                        t(e.session)
                    }))
                }
                stop() {
                    this.scheduler.stop(), this.logger.zsymb(6, 9601, 3e4, "Stop!")
                }
                do(e) {
                    const t = function(e) {
                        if (R.has(e.database)) return;
                        const t = S.e.start(S.b.query_resolution_time),
                            n = {
                                method: A.QueryUtils.getTypeName(e.type),
                                database: e.database,
                                table: e.table,
                                transaction: e.transaction
                            };
                        return t.pushInfo(n), t
                    }(e);
                    return new Promise(((t, n) => {
                        this.enqueue(Object(r.a)(Object(r.a)({}, e), {}, {
                            deferrer: {
                                resolve: t,
                                reject: n
                            }
                        }), {
                            immediately: w.a.isInTransaction(e)
                        })
                    })).finally((() => {
                        null == t || t.end()
                    }))
                }
                doImmediately(e) {
                    return new Promise(((t, n) => {
                        this.enqueue(Object(r.a)(Object(r.a)({}, e), {}, {
                            deferrer: {
                                resolve: t,
                                reject: n
                            }
                        }), {
                            immediately: !0
                        })
                    }))
                }
                enqueue(e, t) {
                    e.meta.step = 0, e.meta.id = this.idCounter++, this.scheduler.run({
                        immediately: t.immediately,
                        execute: () => {
                            try {
                                return this.execute(e)
                            } catch (t) {
                                if (0 !== e.retry) throw e.retry -= 1, t; {
                                    const n = this.createErrorForQuery(e, t);
                                    this.logger.zsymb(18, 9601, 30001, (() => [n])), this.dispatchEvent(new _.d(new y.i(n.message)))
                                }
                            }
                        },
                        retry: e.retry
                    })
                }
                trapQueryError(e) {
                    let t = null,
                        n = () => {};
                    this.shouldTrapTimeoutQuery(e) && (t = setTimeout((() => {
                        var t, n;
                        const r = (null === (t = e.params) || void 0 === t || null === (n = t.values) || void 0 === n ? void 0 : n.length) || void 0,
                            i = void 0 !== r ? [r] : [];
                        e.deferrer.reject(new y.t(i))
                    }), e.meta.timeout), e.meta.timer = t, n = () => {
                        clearTimeout(t)
                    });
                    const r = e.deferrer;
                    e.deferrer = {
                        resolve: e => {
                            n(), r.resolve(e)
                        },
                        reject: t => {
                            n();
                            const i = this.createErrorForQuery(e, t);
                            this.dispatchEvent(new _.b(i)), r.reject(i)
                        }
                    }
                }
                createErrorForQuery(e, t) {
                    const n = {
                            method: E.b.getTypeName(e.type),
                            database: e.database,
                            table: e.table,
                            step: e.meta.step,
                            partition: e.meta.partitionKey,
                            trans: e.transaction,
                            deadline: e.meta.timeout
                        },
                        r = Object(I.a)(n);
                    let i = null;
                    const o = e.meta.error.stack;
                    if (t)
                        if (t instanceof Error) {
                            const n = t.message + ` (${r})`;
                            t instanceof DOMException ? (i = new y.c(n, t.name, t.code), i.setStack(o)) : t instanceof y.e ? (i = t, i.message = n, i.setStack(o)) : (i = e.meta.error, i.message = n, i.name = t.name)
                        } else {
                            let e = t ? `${t}` : "Unknown reason";
                            e += ` (${r})`, i = new y.i(e), i.setStack(o)
                        }
                    else {
                        let e = `Unknown reason (${r})`;
                        i = new y.i(e), i.setStack(o)
                    }
                    return i
                }
                shouldTrapTimeoutQuery(e) {
                    return !1
                }
                execute(e) {
                    e.meta.step = 1, e.meta.dead = !1, e.meta.step = 2, !e.meta.databaseConfig && (this.computeDatabaseConfig(e), e.meta.dead) || (e.meta.step = 3, this.isReadyForExecute(e) && (e.meta.shouldNotTrapQuery || this.trapQueryError(e), e.meta.step = 4, !e.meta.databaseName && (this.computeDatabaseName(e), e.meta.dead) || (e.meta.step = 5, e.meta.step = 6, !e.meta.partitionConfig && (this.computePartitionConfig(e), e.meta.dead) || (e.meta.step = 7, !e.meta.tableConfig && (this.computeTableConfig(e), e.meta.dead) || (e.meta.step = 8, "string" != typeof e.meta.partitionKey && (this.computePartitionKey(e), e.meta.dead) || (e.meta.step = 9, !e.meta.executor && (this.computeDatabaseAdapter(e), e.meta.dead) || (e.meta.step = 10, e.meta.executor())))))))
                }
                computeDatabaseAdapter(e) {
                    const {
                        databaseName: t,
                        partitionConfig: n,
                        partitionKey: r,
                        databaseConfig: i,
                        tableConfig: o
                    } = e.meta;
                    let s = t;
                    if (!w.a.isPartitionlessQuery(e) && i.supportPartitionByField && o.supportPartitionByField) {
                        if ("" === r) return void this.rejectQuery(e, new y.q);
                        s = `${t}/${r}`
                    }
                    const a = this.adapterManager.getDatabaseAdapter(s, n, (() => (e.meta.shouldNotTrapQuery = !0, this.execute(e))));
                    a ? (e.meta.adapterName = a.type === g.a.IDB ? "idb" : "sqlite", e.meta.executor = () => {
                        e.meta.databaseName = s, a.execute(e)
                    }) : e.meta.dead = !0
                }
                replicate(e, t) {
                    this.do(Object(r.a)(Object(r.a)({}, e), {}, {
                        transaction: 0,
                        meta: Object(r.a)(Object(r.a)({}, e.meta), {}, {
                            databaseConfig: t,
                            error: new Error
                        }),
                        deferrer: void 0
                    }))
                }
                isReadyForExecute(e) {
                    return !(e.meta.databaseConfig.session && !this.session) || (this.pendingQueries.push(e), !1)
                }
                computeDatabaseConfig(e) {
                    const t = this.configManager.getDatabaseConfigs(e.database);
                    if (0 !== t.length) {
                        if (t.length > 1 && this.shouldReplicate(e))
                            for (let n = 1; n < t.length; n++) this.replicate(e, t[n]);
                        e.meta.databaseConfig = t[0]
                    } else this.rejectQuery(e, new y.m(e.database))
                }
                computeDatabaseName(e) {
                    let {
                        meta: t,
                        table: n
                    } = e;
                    const r = this.adapterBuilder.computeDatabaseName(t.databaseConfig, n, this.session);
                    t.databaseName = r
                }
                computePartitionConfig(e) {
                    const t = this.adapterBuilder.computePartitionConfig(e.meta.databaseConfig, e.table, this.session);
                    t ? e.meta.partitionConfig = t : this.rejectQuery(e, new y.p(e.table, this.session))
                }
                computeTableConfig(e) {
                    const t = this.adapterBuilder.computeTableConfig(e.meta.partitionConfig, e.table, e.database);
                    t ? e.meta.tableConfig = t : this.rejectQuery(e, new y.r(e.table))
                }
                computePartitionKey(e) {
                    const {
                        databaseConfig: t,
                        tableConfig: n
                    } = e.meta;
                    if (t.supportPartitionByField && n.supportPartitionByField) switch (e.type) {
                        case g.d.BeginTransaction:
                        case g.d.CommitTransaction:
                            return void(e.meta.partitionKey = "");
                        case g.d.Clear:
                            return;
                        case g.d.Insert:
                            return void this.computePartitionForInsertQuery(e);
                        case g.d.InsertMulti:
                            return void this.computePartitionForInsertMultiQuery(e);
                        case g.d.Get:
                        case g.d.GetAndUpdate:
                        case g.d.Update:
                        case g.d.Delete:
                            return void this.computePartitionForIndexedQuery(e);
                        case g.d.FindAndDelete:
                        case g.d.GetAllKey:
                        case g.d.GetAll:
                        case g.d.Count:
                            return void this.computePartitionForRangedQuery(e);
                        case g.d.DeleteMulti:
                        case g.d.GetMulti:
                            return void this.computePartitionForGetMultiAndDeleteMultiQuery(e);
                        case g.d.UpdateMulti:
                            return void this.computePartitionForUpdateMultiQuery(e)
                    } else e.meta.partitionKey = ""
                }
                computePartitionForInsertQuery(e) {
                    const t = this.adapterBuilder.computePartitionKeyFromEntityValue(e.meta.tableConfig, e.params.value);
                    void 0 !== t ? e.meta.partitionKey = `${t}` : this.rejectQuery(e, new y.q)
                }
                computePartitionForInsertMultiQuery(e) {
                    const t = {
                        groupByPartitions: {}
                    };
                    for (const r of e.params.values) {
                        const n = this.adapterBuilder.computePartitionKeyFromEntityValue(e.meta.tableConfig, r);
                        if (void 0 === n) return void this.rejectQuery(e, new y.q);
                        t.groupByPartitions[n] || (t.groupByPartitions[n] = []), t.groupByPartitions[n].push(r)
                    }
                    let n;
                    const i = Object.entries(t.groupByPartitions);
                    if (1 === i.length) n = i[0][0], void 0 !== n ? e.meta.partitionKey = n : this.rejectQuery(e, new y.q);
                    else {
                        e.meta.dead = !0;
                        const t = i.map((t => {
                            let [n, i] = t;
                            const o = n;
                            return this.doImmediately(Object(r.a)(Object(r.a)({}, e), {}, {
                                meta: Object(r.a)(Object(r.a)({}, e.meta), {}, {
                                    partitionKey: o,
                                    error: new Error
                                }),
                                params: Object(r.a)(Object(r.a)({}, e.params), {}, {
                                    values: i
                                }),
                                deferrer: void 0
                            }))
                        }));
                        Promise.all(t).then((t => e.deferrer.resolve(t.flat()))).catch(e.deferrer.reject)
                    }
                }
                computePartitionForIndexedQuery(e) {
                    const t = this.adapterBuilder.computePartitionKeyFromEntityKey(e.meta.tableConfig, e.params.key, e.params.index);
                    void 0 !== t ? e.meta.partitionKey = `${t}` : this.rejectQuery(e, new y.q)
                }
                computePartitionForRangedQuery(e) {
                    var t, n;
                    if (!e.params.range) {
                        const t = new y.s("Get all data in partitioned table");
                        return void this.rejectQuery(e, t)
                    }
                    let r = "";
                    r = e.type === g.d.FindAndDelete || e.type === g.d.Count ? "primary" : e.params.index;
                    const i = e.meta.tableConfig;
                    if (-1 === i.getIndexPartitionField(r)) {
                        if (i.usePartitionTable) {
                            const t = new y.s("Lookup partition from query range");
                            this.rejectQuery(e, t)
                        } else {
                            const t = new y.s("Get all data by index in partitioned table");
                            this.rejectQuery(e, t)
                        }
                        return
                    }
                    if (null === (t = e.params.range) || void 0 === t || !t.from || null === (n = e.params.range) || void 0 === n || !n.to) {
                        const t = new y.s("Get data with open boundary in partition table");
                        return void this.rejectQuery(e, t)
                    }
                    const o = e.params.range.from,
                        s = e.params.range.to,
                        a = this.adapterBuilder.computePartitionKeyFromEntityKey(e.meta.tableConfig, o, r);
                    if (a !== this.adapterBuilder.computePartitionKeyFromEntityKey(e.meta.tableConfig, s, r)) {
                        const t = new y.s("Get data from multiple partition");
                        return void this.rejectQuery(e, t)
                    }
                    let c = a;
                    void 0 !== c ? e.meta.partitionKey = `${c}` : this.rejectQuery(e, new y.q)
                }
                computePartitionForGetMultiAndDeleteMultiQuery(e) {
                    let t = "";
                    t = e.type === g.d.DeleteMulti ? "primary" : e.params.index;
                    const n = {};
                    for (const r of e.params.keys) {
                        const i = this.adapterBuilder.computePartitionKeyFromEntityKey(e.meta.tableConfig, r, t);
                        if (void 0 === i) return void this.rejectQuery(e, new y.q);
                        n[i] || (n[i] = []), n[i].push(r)
                    }
                    const i = Object.entries(n);
                    let o;
                    if (1 === i.length) o = i[0][0], void 0 !== o ? e.meta.partitionKey = `${o}` : this.rejectQuery(e, new y.q);
                    else {
                        e.meta.dead = !0;
                        const t = i.map((t => {
                            let [n, i] = t;
                            const o = n;
                            return e.type, g.d.GetMulti, this.doImmediately(Object(r.a)(Object(r.a)({}, e), {}, {
                                meta: Object(r.a)(Object(r.a)({}, e.meta), {}, {
                                    partitionKey: o,
                                    error: new Error
                                }),
                                params: Object(r.a)(Object(r.a)({}, e.params), {}, {
                                    keys: i
                                }),
                                deferrer: void 0
                            }))
                        }));
                        Promise.all(t).then((t => e.deferrer.resolve(t.flat()))).catch(e.deferrer.reject)
                    }
                }
                computePartitionForUpdateMultiQuery(e) {
                    const {
                        patches: t
                    } = e.params, n = {};
                    for (const r of t) {
                        const {
                            key: t
                        } = r, i = this.adapterBuilder.computePartitionKeyFromEntityKey(e.meta.tableConfig, t);
                        if (void 0 === i) return void this.rejectQuery(e, new y.q);
                        n[i] || (n[i] = []), n[i].push(r)
                    }
                    let i;
                    const o = Object.entries(n);
                    if (1 === o.length) i = o[0][0], void 0 !== i ? e.meta.partitionKey = i : this.rejectQuery(e, new y.q);
                    else {
                        const t = o.map((t => {
                            let [n, i] = t;
                            const o = n;
                            return this.doImmediately(Object(r.a)(Object(r.a)({}, e), {}, {
                                meta: Object(r.a)(Object(r.a)({}, e.meta), {}, {
                                    partitionKey: o,
                                    error: new Error
                                }),
                                params: Object(r.a)(Object(r.a)({}, e.params), {}, {
                                    patches: i
                                }),
                                deferrer: void 0
                            }))
                        }));
                        Promise.all(t).then((t => e.deferrer.resolve(t.flat()))).catch(e.deferrer.reject)
                    }
                }
                shouldReplicate(e) {
                    switch (e.type) {
                        case g.d.Clear:
                        case g.d.Delete:
                        case g.d.DeleteMulti:
                        case g.d.FindAndDelete:
                        case g.d.Insert:
                        case g.d.InsertMulti:
                        case g.d.Update:
                        case g.d.UpdateMulti:
                        case g.d.GetAndUpdate:
                            return !0;
                        default:
                            return !1
                    }
                }
                logQueryInfo(e) {
                    w.a.isBeginTransaction(e) ? this.logger.zsymb(12, 9601, 30003, (() => [E.b.getTypeName(e.type), {
                        database: e.meta.databaseName,
                        table: e.params.tables.join(","),
                        transaction: e.transaction,
                        adapter: e.meta.databaseConfig.typeName
                    }])) : this.logger.zsymb(12, 9601, 30004, (() => [E.b.getTypeName(e.type), {
                        database: e.meta.databaseName,
                        table: e.table,
                        transaction: e.transaction,
                        adapter: e.meta.databaseConfig.typeName
                    }]))
                }
                rejectQuery(e, t) {
                    e.meta.dead = !0, e.deferrer.reject(t)
                }
            }) || M) || M) || M) || M) || M) || M) || M;
            i.ModuleContainer.registerSingleton(P.b, N)
        },
        i15Q: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("KRcn");
            class i {
                constructor() {
                    this._session = null, this._processStart = void 0, this._enableConsole = void 0, this.isReady = () => !!this._session, this.getSession = () => {
                        if (!this._session) throw new Error("session is not ready");
                        return this._session
                    }, this.getProcessStartTime = () => this._processStart, this.setSession = e => {
                        this._session = e
                    }, this._processStart = Date.now(), this._session = {
                        build: "7f983275590aa900769c11bb937a0828c207dfa7",
                        zlgv: "L98HQdtV",
                        env: "prod",
                        buildType: "release",
                        pversion: n("kiQV").version,
                        process: Object(r.a)()
                    }, this._enableConsole = !1
                }
                enableConsole() {}
                disableConsole() {}
                isEnabledConsole() {
                    return this._enableConsole
                }
            }
        },
        iZzu: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, "SIDEBAR_CONTROLLER", (function() {
                return i
            })), n.d(t, "SidebarController", (function() {
                return o
            })), n.d(t, "SidebarTab", (function() {
                return s
            })), n.d(t, "LabelEvents", (function() {
                return a.d
            })), n.d(t, "LabelEvent", (function() {
                return a.c
            })), n.d(t, "LABEL_DATA_MANAGER", (function() {
                return a.a
            })), n.d(t, "LabelDataManager", (function() {
                return a.b
            })), n.d(t, "FilterType", (function() {
                return c.d
            })), n.d(t, "FilterSrcType", (function() {
                return c.c
            })), n.d(t, "CONV_LIST_CONTROLLER", (function() {
                return c.a
            })), n.d(t, "ConvListController", (function() {
                return c.b
            })), n.d(t, "SearchUIList", (function() {
                return d.c
            })), n.d(t, "SEARCH_CONTROLLER", (function() {
                return d.a
            })), n.d(t, "SearchController", (function() {
                return d.b
            })), n.d(t, "CONV_MENU_CONTROLLER", (function() {
                return u.a
            })), n.d(t, "ConvMenuController", (function() {
                return u.b
            }));
            var r = n("jDHv");
            const i = "sidebar-controller",
                o = Object(r.define)(i);
            let s;
            ! function(e) {
                e.MESSAGE_TAB = "message", e.CONTACT_TAB = "contact", e.PINNED_TAB = "pinned", e.MORE_TAB = "more", e.SHOP_TAB = "shop", e.NOTIFY_TAB = "noti", e.MP3_TAB = "mp3", e.MENTION_TAB = "mention", e.FILE_TAB = "file", e.STAR_TAB = "star", e.EVENT_TAB = "eventTab", e.TODO_TAB = "todo", e.ZAVI_TAB = "zavi", e.SETTING_SHORTCUT = "setting", e.SCREENCAP_SHORTCUT = "screencap", e.FILE_TRANSFER_SHORTCUT = "filetransfer", e.QUICK_MESSAGE_TAB = "quickMessageTab", e.BROADCAST_MESSAGE_TAB = "broadcastMessageTab", e.AUTO_REPLY_TAB = "autoReplyTab", e.BROADCAST_SHORTCUT = "broadcast", e.CATALOG_TAB = "catalogTab", e.CPU_PERF_TAB = "cpuPerfTab", e.BA_TAB = "baTab"
            }(s || (s = {}));
            var a = n("6Vk1"),
                c = n("rQsU"),
                d = n("kTC5"),
                u = n("vQ8b")
        },
        ibl3: function(e, t) {},
        igA5: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return _
            }));
            var r = n("jDHv"),
                i = n("Mgpg"),
                o = n("fsN4"),
                s = n("wudS");
            const a = "undefined" != typeof window && "Microsoft Internet Explorer" == (null === (c = window) || void 0 === c || null === (d = c.navigator) || void 0 === d ? void 0 : d.appName);
            var c, d;
            class u {
                static encrypt(e, t) {
                    if (!t) throw new Error("key is not set!");
                    let n = 0,
                        r = [];
                    if (a) {
                        let n = 0,
                            i = e.length;
                        for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                        n %= i;
                        for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                    } else
                        for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                    return r.join("")
                }
                static decrypt(e, t) {
                    if (!t) throw new Error("key is not set!");
                    let n = 0,
                        r = [];
                    if (a) {
                        let n = 0,
                            i = e.length;
                        for (let e = 0; e < t.length; e++) n += t.charCodeAt(e);
                        n %= i, n = i - n;
                        for (let t = 0; t < e.length; t++) r.push(String.fromCharCode(e.charCodeAt((t + n) % i)))
                    } else
                        for (let i = 0; i < e.length; i++) r.push(String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(n))), n++, n > t.length - 1 && (n = 0);
                    return r.join("")
                }
            }
            const l = "citk",
                p = "citv",
                m = "default_cache_map";
            var h, f, g = n("SWKE"),
                y = n("8/YW");
            let _ = Object(y.f)()(h = Reflect.metadata("design:type", Function)(h = Reflect.metadata("design:paramtypes", [])(((f = class e {
                constructor() {
                    this.userScopedPrefix = void 0, this.secretKey = void 0, this._decryptFn = void 0, this._encryptFn = void 0, this._canModifyData = void 0, this._disableCipher = void 0, this._cacheMaps = {}, this._flushAndSaveToStorage = void 0, this._logger = void 0, this.userScopedPrefix = null, this.secretKey = null, this._decryptFn = u.decrypt, this._encryptFn = u.encrypt, this._canModifyData = !0, this._disableCipher = !1, this._flushAndSaveToStorage = this._flushAndSaveToStorageReal.bind(this)
                }
                get logger() {
                    if (!this._logger) {
                        const e = r.ModuleContainer.resolve(i.ZLoggerFactory);
                        this._logger = e.createZLogger("localstorage", ["secure"])
                    }
                    return this._logger
                }
                static getInstance() {
                    return this.instance || (this.instance = new e), this.instance
                }
                onAuthenticating(t) {
                    const {
                        userId: n,
                        UIN: r
                    } = t.getSession();
                    e.getInstance().init(n, r)
                }
                setCanModifyDataFlag(e) {
                    this._canModifyData = e
                }
                isEncryptedValue(e) {
                    return e.startsWith("z_ecrp_")
                }
                disableCipher() {
                    this._disableCipher = !0
                }
                _warnIfKeyCannotBeModified(e) {
                    this._canModifyData
                }
                init(e, t) {
                    this.secretKey = t, this._initUserIDList(e);
                    try {
                        this._testCipher()
                    } catch (n) {}
                }
                hasAlreadyInitialized() {
                    return null !== this.secretKey && null !== this.userScopedPrefix
                }
                _initUserIDList(e) {
                    try {
                        this._validateUserIDList(), this.userScopedPrefix = `${Object(s.b)(e)}`
                    } catch (t) {}
                }
                _validateUserIDList() {}
                _testCipher() {
                    if (this.checkExistForCurrentUser(l)) {
                        if (this.getSecureItemForCurrentUser(l) !== p) throw new Error("SecureLocalStorage encryption and decryption produce incorrect results")
                    } else this.setSecureItemForCurrentUser(l, p)
                }
                async _recoverCipher() {
                    const e = ["z_recentp", "quest_cert", "z_recentin", "s_ph_if", "z_listroom", "z_c_d", "zv_cu", "auto-replies-state-v1", "introduced-ttl", "hide-fbadge", "g_token", "d_token", "list_recent_search", "list_recent_search_v2", "ttl-v1", "ttl-v1-saved", "fas", "feat-pro-count-auto-replies"],
                        t = t => !(!t.includes("list_recent_g_search") || !t.endsWith("v2")) || e.some((e => t.includes(e))),
                        n = g.a.getInstance();
                    n.cleanupLocalStorageMatchConditions(t);
                    await n.cleanupAsyncLocalStorageMatchConditions((e => "string" == typeof e && t(e))), this.setSecureItemForCurrentUser(l, p)
                }
                hasOwnProperty(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    let n = null;
                    return this.hasAlreadyInitialized() && (n = this.getKeyNameForCurrentUser(e)), Object.hasOwnProperty.call(this, e) || null !== window.localStorage.getItem(t) || null !== n && null !== window.localStorage.getItem(n) || null !== window.localStorage.getItem(e)
                }
                getKeyNameForSharedItem(e) {
                    return `sh_${e}`
                }
                getKeyNameForCurrentUser(e) {
                    if (null === this.userScopedPrefix) throw new Error("SecureLocalStorage instance hasn't been initialized yet!");
                    return `${this.userScopedPrefix}_${e}`
                }
                getItemPlain(e) {
                    return window.localStorage.getItem(e)
                }
                setItemPlain(e, t) {
                    this._warnIfKeyCannotBeModified(e), window.localStorage.setItem(e, t)
                }
                async getItemPlainAsync(e) {
                    const t = o.a.getInstance(),
                        {
                            val: n
                        } = await t.SecureLocalstorage.AsyncStore.get(e) || {
                            val: null
                        };
                    return n
                }
                async setItemPlainAsync(e, t) {
                    this._warnIfKeyCannotBeModified(e);
                    const n = o.a.getInstance();
                    await n.SecureLocalstorage.AsyncStore.insert({
                        key: e,
                        val: t
                    }, {
                        replace: !0
                    })
                }
                getItem(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    return window.localStorage.getItem(t)
                }
                setItem(e, t) {
                    const n = this.getKeyNameForSharedItem(e);
                    this._warnIfKeyCannotBeModified(n), window.localStorage.setItem(n, t)
                }
                async getItemAsync(e) {
                    const t = this.getKeyNameForSharedItem(e),
                        n = o.a.getInstance(),
                        {
                            val: r
                        } = await n.SecureLocalstorage.AsyncStore.get(t) || {
                            val: null
                        };
                    return r
                }
                async setItemAsync(e, t) {
                    const n = this.getKeyNameForSharedItem(e);
                    this._warnIfKeyCannotBeModified(n);
                    const r = o.a.getInstance();
                    await r.SecureLocalstorage.AsyncStore.insert({
                        key: n,
                        val: t
                    }, {
                        replace: !0
                    })
                }
                getItemForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    return window.localStorage.getItem(t)
                }
                setItemForCurrentUser(e, t) {
                    const n = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(n), window.localStorage.setItem(n, t)
                }
                async getItemForCurrentUserAsync(e) {
                    const t = this.getKeyNameForCurrentUser(e),
                        n = o.a.getInstance(),
                        {
                            val: r
                        } = await n.SecureLocalstorage.AsyncStore.get(t) || {
                            val: null
                        };
                    return r
                }
                async setItemForCurrentUserAsync(e, t) {
                    const n = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(n);
                    const r = o.a.getInstance();
                    await r.SecureLocalstorage.AsyncStore.insert({
                        key: n,
                        val: t
                    }, {
                        replace: !0
                    })
                }
                getSecureItemForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e),
                        n = window.localStorage.getItem(t);
                    if (null === n) return null;
                    return this._disableCipher && !this.isEncryptedValue(n) ? n : this.decryptValue(n)
                }
                setSecureItemForCurrentUser(e, t) {
                    const n = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(n);
                    const r = t;
                    if (null === this.secretKey) throw new Error("SecureLocalStorage instance hasn't been initialized yet!");
                    const i = this._disableCipher ? r : this.encryptValue(r);
                    window.localStorage.setItem(n, i)
                }
                async getSecureItemForCurrentUserAsync(e) {
                    const t = this.getKeyNameForCurrentUser(e),
                        n = o.a.getInstance(),
                        r = await n.SecureLocalstorage.AsyncStore.get(t);
                    if (!r) return null;
                    const {
                        val: i
                    } = r;
                    return this._disableCipher && !this.isEncryptedValue(i) ? i : this.decryptValue(i)
                }
                async setSecureItemForCurrentUserAsync(e, t) {
                    const n = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(n);
                    const r = t;
                    if (null === this.secretKey) throw new Error("SecureLocalStorage instance hasn't been initialized yet!");
                    const i = this._disableCipher ? r : this.encryptValue(r),
                        s = o.a.getInstance();
                    await s.SecureLocalstorage.AsyncStore.insert({
                        key: n,
                        val: i
                    }, {
                        replace: !0
                    })
                }
                removeItemPlain(e) {
                    this._warnIfKeyCannotBeModified(e), window.localStorage.removeItem(e)
                }
                removeItem(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    this._warnIfKeyCannotBeModified(t), window.localStorage.removeItem(t)
                }
                removeItemForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(t), window.localStorage.removeItem(t)
                }
                async removeItemPlainAsync(e) {
                    this._warnIfKeyCannotBeModified(e);
                    const t = o.a.getInstance();
                    await t.SecureLocalstorage.AsyncStore.delete(e)
                }
                async removeItemAsync(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    this._warnIfKeyCannotBeModified(t);
                    const n = o.a.getInstance();
                    await n.SecureLocalstorage.AsyncStore.delete(t)
                }
                async removeItemForCurrentUserAsync(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    this._warnIfKeyCannotBeModified(t);
                    const n = o.a.getInstance();
                    await n.SecureLocalstorage.AsyncStore.delete(t)
                }
                setItemForAllLoggedUsers(e, t) {
                    const n = Object(s.c)().length;
                    if (0 !== n)
                        for (let r = 0; r < n; r += 1) {
                            const n = `${r}_${e}`;
                            window.localStorage.setItem(n, t)
                        }
                }
                static forTestingOnly_getNewInstance() {
                    return new e
                }
                getInt(e, t) {
                    void 0 === t && (t = {});
                    const n = void 0 === t.defaultInt || isNaN(t.defaultInt) ? -1 : +t.defaultInt;
                    try {
                        const t = this.getKeyNameForSharedItem(e),
                            n = window.localStorage.getItem(t);
                        if (null != n) {
                            const e = +n;
                            if (!isNaN(e)) return e
                        }
                    } catch (r) {}
                    return n
                }
                getIntForCurrentUser(e, t) {
                    void 0 === t && (t = {});
                    const n = void 0 === t.defaultInt || isNaN(t.defaultInt) ? -1 : +t.defaultInt;
                    try {
                        const t = this.getKeyNameForCurrentUser(e);
                        let n = window.localStorage.getItem(t);
                        if (null != n) {
                            const e = +n;
                            if (!isNaN(e)) return e
                        }
                    } catch (r) {}
                    return n
                }
                setObject(e, t) {
                    try {
                        const n = this.getKeyNameForSharedItem(e);
                        this._warnIfKeyCannotBeModified(e), window.localStorage.setItem(n, JSON.stringify(t))
                    } catch (n) {}
                }
                setObjectForCurrentUser(e, t) {
                    try {
                        const n = this.getKeyNameForCurrentUser(e);
                        this._warnIfKeyCannotBeModified(n), window.localStorage.setItem(n, JSON.stringify(t))
                    } catch (n) {}
                }
                getObject(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    let n = window.localStorage.getItem(t);
                    return null === n ? null : (n = JSON.parse(n), n && "object" == typeof n ? n : null)
                }
                getObjectForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    let n = window.localStorage.getItem(t);
                    return null === n ? null : (n = JSON.parse(n), n && "object" == typeof n ? n : null)
                }
                getParsedItem(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    let n = window.localStorage.getItem(t);
                    if (n) try {
                        const e = JSON.parse(n);
                        null != e && (n = e)
                    } catch (r) {}
                    return n
                }
                getParsedItemForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    let n = window.localStorage.getItem(t);
                    if (n) try {
                        const e = JSON.parse(n);
                        null != e && (n = e)
                    } catch (r) {}
                    return n
                }
                forEachKeyName(e) {
                    void 0 === e && (e = (e, t) => {});
                    Object.keys(window.localStorage).forEach(e)
                }
                _getCacheMap(e) {
                    if (!this._cacheMaps[e]) {
                        let n = new Map,
                            r = window.localStorage.getItem(e);
                        if (r) try {
                            n = JSON.parse(r).reduce(((e, t) => {
                                const [n, r] = t;
                                return e.set(n, r), e
                            }), n)
                        } catch (t) {}
                        this._cacheMaps[e] = n
                    }
                    return this._cacheMaps[e]
                }
                _flushAndSaveToStorageReal(e) {
                    const t = this._getCacheMap(e),
                        n = [];
                    t.forEach(((e, t) => {
                        n.push([t, e])
                    })), window.localStorage.setItem(e, JSON.stringify(n))
                }
                addEntryToCacheMap(e, t, n) {
                    void 0 === n && (n = m);
                    const r = this.getKeyNameForSharedItem(n);
                    this._getCacheMap(r).set(e, t), this._flushAndSaveToStorage(r)
                }
                addEntryToCacheMapForCurrentUser(e, t, n) {
                    void 0 === n && (n = m);
                    const r = this.getKeyNameForCurrentUser(n);
                    this._getCacheMap(r).set(e, t), this._flushAndSaveToStorage(r)
                }
                deleteEntryFromCacheMap(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForSharedItem(t);
                    this._getCacheMap(n).delete(e), this._flushAndSaveToStorage(n)
                }
                deleteEntryFromCacheMapForCurrentUser(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForCurrentUser(t);
                    this._getCacheMap(n).delete(e), this._flushAndSaveToStorage(n)
                }
                getEntryOfCacheMap(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForSharedItem(t);
                    return this._getCacheMap(n).get(e) || null
                }
                getEntryOfCacheMapForCurrentUser(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForCurrentUser(t);
                    return this._getCacheMap(n).get(e) || null
                }
                forEachEntryOfCacheMap(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForSharedItem(t);
                    this._getCacheMap(n).forEach(e)
                }
                forEachEntryOfCacheMapForCurrentUser(e, t) {
                    void 0 === t && (t = m);
                    const n = this.getKeyNameForCurrentUser(t);
                    this._getCacheMap(n).forEach(e)
                }
                getCacheMapSize(e) {
                    void 0 === e && (e = m);
                    const t = this.getKeyNameForSharedItem(e);
                    return this._getCacheMap(t).size
                }
                getCacheMapSizeForCurrentUser(e) {
                    void 0 === e && (e = m);
                    const t = this.getKeyNameForCurrentUser(e);
                    return this._getCacheMap(t).size
                }
                hasCacheMap(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    return void 0 !== this._cacheMaps[t]
                }
                hasCacheMapForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    return void 0 !== this._cacheMaps[t]
                }
                checkExist(e) {
                    const t = this.getKeyNameForSharedItem(e);
                    return null !== window.localStorage.getItem(t)
                }
                checkExistForCurrentUser(e) {
                    const t = this.getKeyNameForCurrentUser(e);
                    return null !== window.localStorage.getItem(t)
                }
                isUserScopedKeyOfCurrentUser(e) {
                    return e.startsWith(`${this.userScopedPrefix}_`)
                }
                getKeySignatureOfUserScopedKeyOfCurrentUser(e) {
                    if (!this.isUserScopedKeyOfCurrentUser(e)) throw new Error(`${e} doesn't belong to the current user`);
                    const t = `^${this.userScopedPrefix}_`,
                        n = new RegExp(t, "g");
                    return e.replace(n, "")
                }
                encryptValue(e) {
                    if ("string" != typeof e) throw new Error("SecureLocalStorage cannot encrypt non string value");
                    if (null === this.secretKey) throw new Error("SecureLocalStorage instance hasn't been initialized yet!");
                    return `z_ecrp_${this._encryptFn(e,this.secretKey)}`
                }
                decryptValue(e) {
                    if ("string" != typeof e) throw new Error("SecureLocalStorage cannot decrypt non string value");
                    if (null === this.secretKey) throw new Error("SecureLocalStorage instance hasn't been initialized yet!");
                    return e = e.slice("z_ecrp_".length), this._decryptFn(e, this.secretKey)
                }
            }).instance = null, h = f)) || h) || h) || h
        },
        igRa: function(e, t, n) {
            "use strict";
            let r;
            n.d(t, "a", (function() {
                    return r
                })),
                function(e) {
                    e.FPS = "receive-fps", e.DROP_FPS = "drop-fps", e.TOGGLE_FPS_FALLING = "toggle-fps-falling-recorder"
                }(r || (r = {}))
        },
        ijAY: function(e, t, n) {
            "use strict";
            (function(e) {
                Object.defineProperty(e, "exports", {
                    enumerable: !0,
                    get: function() {
                        var e = {
                            modifiers: {
                                reset: [0, 0],
                                bold: [1, 22],
                                dim: [2, 22],
                                italic: [3, 23],
                                underline: [4, 24],
                                inverse: [7, 27],
                                hidden: [8, 28],
                                strikethrough: [9, 29]
                            },
                            colors: {
                                black: [30, 39],
                                red: [31, 39],
                                green: [32, 39],
                                yellow: [33, 39],
                                blue: [34, 39],
                                magenta: [35, 39],
                                cyan: [36, 39],
                                white: [37, 39],
                                gray: [90, 39]
                            },
                            bgColors: {
                                bgBlack: [40, 49],
                                bgRed: [41, 49],
                                bgGreen: [42, 49],
                                bgYellow: [43, 49],
                                bgBlue: [44, 49],
                                bgMagenta: [45, 49],
                                bgCyan: [46, 49],
                                bgWhite: [47, 49]
                            }
                        };
                        return e.colors.grey = e.colors.gray, Object.keys(e).forEach((function(t) {
                            var n = e[t];
                            Object.keys(n).forEach((function(t) {
                                var r = n[t];
                                e[t] = n[t] = {
                                    open: "[" + r[0] + "m",
                                    close: "[" + r[1] + "m"
                                }
                            })), Object.defineProperty(e, t, {
                                value: n,
                                enumerable: !1
                            })
                        })), e
                    }
                })
            }).call(this, n("SoEx")(e))
        },
        ipeT: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return l
            }));
            var r = n("VTBJ"),
                i = n("jDHv"),
                o = n("UK4g"),
                s = n("YEoC"),
                a = n("DI/x"),
                c = n("YZti"),
                d = n("MRjZ"),
                u = n("rvru");
            class l {
                constructor(e, t, n, r, i) {
                    void 0 === r && (r = 0), this.engine = e, this.database = t, this.tableConfig = n, this.transaction = r, this.databaseConfig = i, this.bindedIndex = void 0
                }
                get name() {
                    return this.tableConfig.name
                }
                queryBuilderReject(e, t) {
                    const n = {
                            method: c.b.getTypeName(t.type),
                            database: t.database,
                            table: t.table,
                            step: t.meta.step,
                            partition: t.meta.partitionKey,
                            trans: t.transaction,
                            deadline: t.meta.timeout
                        },
                        r = Object(d.a)(n);
                    e.message += ` (${r})`;
                    return i.ModuleContainer.resolve(u.a).sendDBErrorQos(e), Promise.reject(e)
                }
                index(e) {
                    if (e == this.bindedIndex) return this;
                    if (this.bindedIndex) {
                        const t = `Attempt to bind '${e}' to already-binded '${this.bindedIndex}' index`;
                        throw new a.w("index", t)
                    }
                    const t = new l(this.engine, this.database, this.tableConfig, this.transaction, this.databaseConfig);
                    return t.bindedIndex = e, t
                }
                clear() {
                    return this.engine.do({
                        trace: function() {},
                        type: s.d.Clear,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: s.c.BLOCKING,
                        retry: o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            error: new Error,
                            dead: !1,
                            step: -1
                        }
                    })
                }
                get(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.Get,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            key: e,
                            index: this.bindedIndex || t.index || "primary"
                        }
                    };
                    if (this.tableConfig.isNonFieldlikeEntity) return this.queryBuilderReject(new a.w("get", "This method cannot be performed on non-fieldlike table!"), n);
                    return this.engine.do(n)
                }
                getMulti(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.GetMulti,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            index: this.bindedIndex || t.index || "primary",
                            keys: e
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("getMulti", "This method cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)
                }
                getAll(e, t) {
                    void 0 === t && (t = {});
                    const n = p(t.limit),
                        r = {
                            trace: function() {},
                            type: s.d.GetAll,
                            database: this.database,
                            table: this.tableConfig.name,
                            transaction: this.transaction,
                            priority: t.priority || s.c.NON_BLOCKING,
                            retry: t.retry || o.i,
                            timing: {},
                            meta: {
                                databaseConfig: this.databaseConfig,
                                partitionKey: t.partition,
                                error: new Error,
                                timeout: o.k,
                                step: -1,
                                dead: !1
                            },
                            params: {
                                index: this.bindedIndex || t.index || "primary",
                                range: e,
                                limit: n,
                                direction: t.direction || s.b.NEXT,
                                filter: t.filter,
                                predicate: t.predicate,
                                aborted: t.aborted,
                                onValue: t.onValue,
                                onProgress: t.onProgress,
                                advance: t.advance,
                                stepCount: t.stepCount
                            }
                        };
                    return this.tableConfig.isNonFieldlikeEntity && e ? this.queryBuilderReject(new a.w("getAll", "'getAll()' with range cannot be performed on non-fieldlike table!"), r) : this.engine.do(r)
                }
                getAllKey(e, t) {
                    void 0 === t && (t = {});
                    const n = p(t.limit),
                        r = {
                            trace: function() {},
                            type: s.d.GetAllKey,
                            database: this.database,
                            table: this.tableConfig.name,
                            transaction: this.transaction,
                            priority: t.priority || s.c.NON_BLOCKING,
                            retry: t.retry || o.i,
                            timing: {},
                            meta: {
                                databaseConfig: this.databaseConfig,
                                partitionKey: t.partition,
                                error: new Error,
                                timeout: o.k,
                                step: -1,
                                dead: !1
                            },
                            params: {
                                index: this.bindedIndex || t.index || "primary",
                                range: e,
                                limit: n,
                                direction: t.direction || s.b.NEXT
                            }
                        };
                    return this.tableConfig.isNonFieldlikeEntity && e ? this.queryBuilderReject(new a.w("getAllKey", "'getAllKey()' with range cannot be performed on non-fieldlike table!"), r) : this.engine.do(r)
                }
                getAndUpdate(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.GetAndUpdate,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            index: this.bindedIndex || t.index || "primary",
                            key: e,
                            updater: e => e,
                            ignoreNotFound: !1 !== t.filterNotFound
                        }
                    };
                    return t.updater ? (n.params = Object(r.a)(Object(r.a)({}, n.params), {}, {
                        updater: t.updater
                    }), this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("getAndUpdate", "This method cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)) : this.queryBuilderReject(new a.l("'updater' option is required!"), n)
                }
                insert(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.Insert,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            replace: !1 !== t.replace,
                            value: e
                        }
                    };
                    if (Array.isArray(e)) return this.queryBuilderReject(new a.w("insert", "Receive an array as input! Please use 'insertMulti' instead!"), n);
                    return this.engine.do(n)
                }
                put(e, t) {
                    throw void 0 === t && (t = {}), new a.w("put", "This method is legacy! Please use 'insert' instead")
                }
                insertMulti(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.InsertMulti,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            replace: !1 !== t.replace,
                            values: e
                        }
                    };
                    return Array.isArray(e) ? 1 === e.length ? this.insert(e[0], t).then((e => ({
                        success: [e],
                        fail: []
                    }))).catch((() => ({
                        success: [],
                        fail: [e[0]]
                    }))) : this.engine.do(n) : this.queryBuilderReject(new a.w("insertMulti", "Receive a non-array value as input! Please use 'insert' instead!"), n)
                }
                update(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.Update,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            index: "primary",
                            key: e,
                            attributes: [],
                            value: {},
                            ignoreNotFound: !0 === t.ignoreNotFound
                        }
                    };
                    return t.value && t.attributes ? (n.params = Object(r.a)(Object(r.a)({}, n.params), {}, {
                        attributes: t.attributes,
                        value: t.value
                    }), this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("update", "This method cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)) : this.queryBuilderReject(new a.l(`'${t.value?"attributes":"value"}' option is required!`), n)
                }
                updateMulti(e) {
                    void 0 === e && (e = {});
                    const t = {
                        trace: function() {},
                        type: s.d.UpdateMulti,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: e.priority || s.c.NON_BLOCKING,
                        retry: e.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: e.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            patches: e.patches || [],
                            ignoreNotFound: !0 === e.ignoreNotFound
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("updateMulti", "This method cannot be performed on non-fieldlike table!"), t) : this.engine.do(t)
                }
                delete(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.Delete,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            key: e,
                            index: "primary"
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("delete", "This method cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)
                }
                remove(e, t) {
                    throw void 0 === t && (t = {}), new a.w("remove", "This method is legacy. Please use 'delete' instead!")
                }
                deleteMulti(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.DeleteMulti,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            keys: e
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity ? this.queryBuilderReject(new a.w("deleteMulti", "This method cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)
                }
                findAndDelete(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.FindAndDelete,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            range: e,
                            filter: t.filter
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity && e ? this.queryBuilderReject(new a.w("findAndDelete", "'findAndDelete()' with range cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)
                }
                count(e, t) {
                    void 0 === t && (t = {});
                    const n = {
                        trace: function() {},
                        type: s.d.Count,
                        database: this.database,
                        table: this.tableConfig.name,
                        transaction: this.transaction,
                        priority: t.priority || s.c.NON_BLOCKING,
                        retry: t.retry || o.i,
                        timing: {},
                        meta: {
                            databaseConfig: this.databaseConfig,
                            partitionKey: t.partition,
                            error: new Error,
                            timeout: o.k,
                            step: -1,
                            dead: !1
                        },
                        params: {
                            index: this.bindedIndex || t.index || "primary",
                            range: e
                        }
                    };
                    return this.tableConfig.isNonFieldlikeEntity && e ? this.queryBuilderReject(new a.w("count", "'count()' with range cannot be performed on non-fieldlike table!"), n) : this.engine.do(n)
                }
                get isNonFieldlikeEntity() {
                    return this.tableConfig.isNonFieldlikeEntity
                }
                getIndexConfig(e) {
                    return this.tableConfig.getIndex(e)
                }
            }

            function p(e) {
                let t = e || o.h;
                return t > o.h && (t = o.h), t
            }
        },
        j6JD: function(e, t, n) {
            "use strict";
            (function(e) {
                function r(e, t) {
                    "string" == typeof e && (e = parseInt(e));
                    const n = new Date(e),
                        r = n.getDate(),
                        o = n.getMonth() + 1,
                        s = (n.getFullYear(), n.getHours()),
                        a = n.getMinutes(),
                        c = n.getSeconds();
                    return null != t && t.dayOnly ? `${r}.${o}` : null != t && t.timeOnly ? `${i(s,2)}:${i(a,2)}:${i(c,2)}` : `${r}.${o} ${i(s,2)}:${i(a,2)}:${i(c,2)}`
                }

                function i(e, t) {
                    const n = e.toString();
                    return n.length < t ? "0".repeat(t - n.length) + n : n
                }
                n.d(t, "a", (function() {
                    return r
                }))
            }).call(this, n("Q40w").Buffer)
        },
        jDHv: function(e, t, n) {
            "use strict";
            n.r(t), n.d(t, "define", (function() {
                return i
            })), n.d(t, "Container", (function() {
                return o
            })), n.d(t, "ModuleContainer", (function() {
                return s
            })), n.d(t, "autoInjectable", (function() {
                return a
            })), n.d(t, "injectable", (function() {
                return c
            })), n.d(t, "inject", (function() {
                return d
            })), n.d(t, "singleton", (function() {
                return u
            }));
            var r = n("S8fy");
            n("h6tn");

            function i(e) {
                return {
                    service: e,
                    token: e
                }
            }
            class o {
                constructor() {
                    this.inject = e => r.c(e.token), this.injectToken = e => r.c(e), this.singleton = r.f, this.injectable = r.d, this.register = (e, t) => {
                        r.b.register(e.token, {
                            useClass: t
                        }), this.hookAfferResolution(e)
                    }, this.registerValue = (e, t) => {
                        r.b.register(e.token, {
                            useValue: t
                        }), this.hookAfferResolution(e)
                    }, this.registerSingleton = (e, t) => {
                        r.b.registerSingleton(t), r.b.register(e.token, {
                            useFactory: e => e.resolve(t)
                        }), this.hookAfferResolution(e)
                    }, this.registerFactory = (e, t) => {
                        r.b.register(e.token, {
                            useFactory: t
                        }), this.hookAfferResolution(e)
                    }, this.resolve = e => r.b.resolve(e.token), this.resolveToken = e => r.b.resolve(e), this.resolveAll = e => r.b.resolveAll(e.token), this.resolveIfExist = e => {
                        try {
                            return r.b.resolve(e.token)
                        } catch (t) {
                            return
                        }
                    }
                }
                hookAfferResolution(e) {}
            }
            const s = new o,
                a = r.a,
                c = r.d,
                d = e => r.c(e.token);

            function u(e) {
                return function(t) {
                    e ? s.registerSingleton(e, t) : s.singleton()(t)
                }
            }
        },
        jGDt: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("zlog-session")
        },
        jIg3: function(e, t, n) {
            "use strict";
            var r = n("1UUk");
            n.d(t, "a", (function() {
                return r.a
            })), n.d(t, "b", (function() {
                return r.b
            }))
        },
        jO9C: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.pad.Iso97971 = {
                pad: function(e, t) {
                    e.concat(r.lib.WordArray.create([2147483648], 1)), r.pad.ZeroPadding.pad(e, t)
                },
                unpad: function(e) {
                    r.pad.ZeroPadding.unpad(e), e.sigBytes--
                }
            }, r.pad.Iso97971)
        },
        jvA1: function(e, t, n) {
            "use strict";
            n("x9oK"), n("UJ0r"), n("3wcW"), n("X2RP")
        },
        "k+1r": function(e, t, n) {
            var r = n("QkVE");
            e.exports = function(e) {
                var t = r(this, e).delete(e);
                return this.size -= t ? 1 : 0, t
            }
        },
        k6Bk: function(e, t) {},
        kFM4: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            const r = {
                RunMode: n("YEoC").e.Unknown
            };

            function i(e, t) {
                r[e] = t
            }
        },
        kTC5: function(e, t, n) {
            "use strict";
            n.d(t, "c", (function() {
                return i
            })), n.d(t, "a", (function() {
                return o
            })), n.d(t, "b", (function() {
                return s
            }));
            var r = n("jDHv");
            let i;
            ! function(e) {
                e[e.RECENT_SEARCH = 0] = "RECENT_SEARCH", e[e.SEARCH_RESULT = 1] = "SEARCH_RESULT"
            }(i || (i = {}));
            const o = "search-controller",
                s = Object(r.define)(o)
        },
        kiQV: function(e) {
            e.exports = JSON.parse('{"name":"Zalo","homepage":"./index.html","version":"23.4.1","description":"Zalo - Nhắn gửi yêu thương","engines":{"npm":">=3"},"lint-staged":{"*.{js}":["node ./tools/prettier-include/index.js","eslint --quiet"],"*.{jsx,tsx,ts,scss,md,json,html,yml}":["node ./tools/prettier-include/index.js"]},"pre-commit":"check","main":"bootstrap.js","scripts":{"check":"lint-staged","preinstall":"node tools/nodeVersionCheck.js && git submodule init && git submodule update","postinstall":"npm run update-bundle-files-list && git config core.hooksPath .githooks","setup":"node tools/setup/setupMessage.js && npm install && node tools/setup/setup.js","remove-demo":"babel-node tools/removeDemo.js","start":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:web","start-zaloapp":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' WEB_DOMAIN=zaloapp zpc-cli run dev:web","open:src":"cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:web","open:dist":"cross-env BABEL_ENV=web babel-node tools/distServer.js","update-about":"babel-node tools/updateAbout.js","distwname":"babel-node tools/dist-with-name.js","send-zlog":"node ./tools/zlog/collect-zlog-templates.js","send-zlog-web":"node ./tools/zlog/collect-zlog-templates-web.js","init-zlog-vers":"node ./tools/init-zlog-vers.js","prep":"rimraf ./node_modules/.cache ./zlog-dist && npm run sass && npm run lang","update-call-hash":"babel-node tools/update-call-hash.js","update-zavi-hash":"babel-node tools/update-zavi-hash.js","lint":"esw src --color --parser babel-eslint","lint-strict":"eslint main/*.js","m-lint":"eslint src/utils/meta-info-msg/*.js src/database/base-db.js","lint:watch":"npm run lint -- --watch","clean-dist":"npm run remove-dist && mkdir dist","remove-dist":"rimraf ./dist","prebuild":"npm run clean-dist && npm run sass && npm run lang","prebuild-pc":"npm run lint-strict && rimraf ./pc-dist && mkdir pc-dist && npm run sass && npm run lang","build-dev":"cross-env WEB_ENV=dev npm run build","build-prod":"cross-env WEB_ENV=prod npm run build","build-zaloapp-prod":"cross-env WEB_ENV=prod WEB_DOMAIN=zaloapp npm run build","build-zalome-prod":"cross-env WEB_ENV=prod WEB_DOMAIN=zalome npm run build","build:local":"npm run init-zlog-vers && npm run cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' BUILD_TYPE=release zpc-cli run compile:web","build":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' BUILD_TYPE=release node ./tools/zpc-cli.js run compile:web","compile:main":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run compile:main","build-pc":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run compile:renderer","build-pc-appX":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run compile:renderer:appx","test:cover":"babel-node node_modules/isparta/bin/isparta cover --root src --report html node_modules/mocha/bin/_mocha -- --require ./tools/testSetup.js \\"src/**/*.spec.js\\" --reporter progress","test:cover:travis":"babel-node node_modules/isparta/bin/isparta cover --root src --report lcovonly _mocha -- --require ./tools/testSetup.js \\"src/**/*.spec.js\\" && cat ./coverage/lcov.info | node_modules/coveralls/bin/coveralls.js","test:watch":"npm run test -- --watch","open:cover":"npm run test:cover && open coverage/index.html","test:electron":"electron ./test/main/download.js","test":"for f in $(find src -name *.spec.js); do NODE_PATH=./src mocha tools/testSetup.js \\"$f\\" --reporter progress; done;","wintest":"for %f in (src/utils/*.spec.js) do mocha tools/testSetup.js \\"src/utils/%f\\" done;","jest:test":"cross-env NODE_PATH=./src __PLATFORM__=WEB NODE_ENV=development jest --forceExit","jest:emoji":"cross-env NODE_PATH=./src __PLATFORM__=WEB jest test/core/parse-emoji.test.js --forceExit","jest:conversation":"cross-env NODE_PATH=./src __PLATFORM__=WEB jest --watch --testPathPattern=src/logic/conversation --forceExit","jest:log:test":"cross-env NODE_PATH=./src jest --runInBand --forceExit","jest:update":"cross-env NODE_PATH=./src jest -u","test:single":"cross-env NODE_PATH=./src mocha tools/testSetup.js src/utils/message.spec.js","test:file":"node ./test/file/test.js","test:ibparser":"cross-env NODE_PATH=./src mocha tools/testSetup.js  src/utils/inputbox-parser.spec.js","test:compare":"cross-env NODE_PATH=./src mocha tools/testSetup.js  src/utils/third-party/compare.spec.js","test:zstructures":"cross-env NODE_PATH=./src mocha tools/testSetup.js  src/utils/third-party/zstructures.spec.js","test:common":"cross-env NODE_PATH=./src mocha tools/testSetup.js src/utils/common.spec.js","test:schema":"cross-env NODE_PATH=./src jest --config= database/zdb/row-items/schema/data-validator.test.js --forceExit --detectOpenHandles","presass":"mkdirp src/static/css && mkdirp pc/static/fonts/zalo && ncp src/static/fonts/zalo/ pc/static/fonts/zalo/ && mkdirp pc/static/fonts/main  && ncp src/static/fonts/main/ pc/static/fonts/main/ ","sass":"sass src/static/scss/layout.scss src/static/css/layout.css && sass pc/static/scss/login.scss pc/static/css/login.css  && sass pc/static/scss/photo.scss pc/static/css/photo.css  && sass pc/static/scss/videocall.scss pc/static/css/videocall.css && sass src/static/scss/base/color-v1.scss src/static/css/color-v1.css && sass src/static/scss/base/darkmode.scss src/static/css/darkmode.css && sass src/static/scss/base/color-vtest.scss src/static/css/color-vtest.css","preelectron-start-dev":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:main","electron-start-dev":"npm run init-zlog-vers && cross-env PC=1 BABEL_ENV=pc NODE_ENV=development electron .","predebug-main":"npm run init-zlog-vers && npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:main","debug-main":"npm run init-zlog-vers && cross-env PC=1 BABEL_ENV=pc NODE_ENV=development electron . --inspect=9230","pc-compile":"cross-env FORCE_COLOR=1 PC=1 BABEL_ENV=pc NODE_ENV=development npm run electron-start-dev","pc-compile-2":"cross-env PC=1 BABEL_ENV=pc CLONE=1 NODE_ENV=development npm run electron-start-dev","v1-start-dev":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:renderer","pc-start-dev":"npm run init-zlog-vers && cross-env NODE_OPTIONS=\'--max-old-space-size=8192\' zpc-cli run dev:renderer","start-pc":"npm run init-zlog-vers && npm-run-all -p pc-compile pc-start-dev","prepack":"npm run build-pc && npm run compile:main","prepack:win32":"npm run build-pc && npm run compile:main","prepack:winstaller":"npm run build-pc && npm run signtool && npm run compile:main","prewinstaller":"git submodule init && git submodule update","pack":"electron-builder --dir --config electron-builder.config.js","pack:win32":"cross-env BUILD_TYPE=release npm run pack:winstaller && node ./tools/afterpack.js ia32 && babel-node tools/genPartialUpdate.js ia32 -- ","pack:winstaller:no-build":"cross-env BUILD_TYPE=release ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true electron-builder --dir --ia32 --config electron-builder.config.js","pack:winstaller":"electron-builder --dir --ia32 --config electron-builder.config.js","postpack":"babel-node tools/genPartialUpdate.js","postpack:win32":"babel-node tools/genPartialUpdate.js ia32","predodist":"npm run build-pc && npm run signtool && npm run compile:main","predodist:win64":"npm run predodist","predodist:win32":"npm run predodist","predodist:mac":"node ./tools/predodistmac.js && npm run predodist","dodist":"electron-builder --config electron-builder.config.js","predodist:dir":"npm run build-pc && npm run signtool && npm run compile:main","dodist:mac":"electron-builder --mac --config electron-builder.config.js","dodist:dir":"electron-builder --dir --mac --config electron-builder.config.js","dodist:win":"electron-builder --win --config electron-builder.config.js","dodist:win32":"electron-builder --ia32 --config electron-builder.config.js","dodist:win64":"electron-builder --arch x64 --config electron-builder.config.js","pack:installer":"node ./tools/prebuild.js && npm run pack:winstaller && node ./tools/afterpack.js ia32 && electron-builder --prepackaged ./dist/win-ia32-unpacked/ --ia32 --config electron-builder.config.js && babel-node tools/genPartialUpdate.js ia32 -- ","pack:full":"node ./tools/prebuild.js && npm run pack:winstaller && node ./tools/afterpack.js ia32 && electron-builder --prepackaged ./dist/win-ia32-unpacked/ --ia32 --config electron-builder.config.js && babel-node tools/diffModule.js","dist:win32":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true NODE_OPTIONS=\'--max-old-space-size=4096\' BUILD_ENV=test npm run pack:installer","dist:win32release":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true NODE_OPTIONS=\'--max-old-space-size=4096\' BUILD_TYPE=release BUILD_ENV=test NEED_SIGN=1 npm run pack:installer","dist:win32fullpack":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true NODE_OPTIONS=\'--max-old-space-size=8096\' BUILD_TYPE=release BUILD_ENV=production NEED_SIGN=1 npm run pack:full","postpack:full":"","uploadsourcemapwin":"cross-env ZLOG_TYPE=PC sentry-cli releases files Zalo%npm_package_version% upload-sourcemaps pc-dist/ --url-prefix app:///pc-dist/ && sentry-cli releases files Zalo%npm_package_version% upload-sourcemaps main-dist/ --url-prefix app:///main-dist/ && npm run send-zlog","uploadsourcemapmac":"cross-env ZLOG_TYPE=PC sentry-cli releases files Zalo$npm_package_version upload-sourcemaps pc-dist/ --url-prefix app:///pc-dist/ && sentry-cli releases files Zalo$npm_package_version upload-sourcemaps main-dist/ --url-prefix app:///main-dist/ && npm run send-zlog","uploadsourcemapweb":"cross-env ZLOG_TYPE=WEB sentry-cli releases files Zalo$npm_package_version upload-sourcemaps dist/ --url-prefix ~/ && rm -r ./dist/sourcemaps && npm run send-zlog-web","dist:win32nobuild":"electron-builder --prepackaged ./dist/win-ia32-unpacked/ --ia32 --config electron-builder.config.js&& babel-node tools/genPartialUpdate.js ia32 -- ","dist:win":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true npm run dodist:win","dist:win64":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true npm run dodist:win64","dist:appX":"(npm run dodist:appX || true) && babel-node tools/rename-appx-64.js &&  npm run dodist:appX32","dist:mac":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true BUILD_ENV=test npm run dodist:mac","dist:macrelease":"cross-env NODE_OPTIONS=\'--max-old-space-size=4096\' ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true BUILD_TYPE=release NEED_SIGN=1 npm run dodist:mac","dist:macnobuild":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true electron-builder --mac --config electron-builder.config.js","dist":"cross-env NODE_OPTIONS=\'--max-old-space-size=2048\' ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true npm run dodist","predist:appX":"npm run build-pc-appX && npm run signtool && npm run compile:main","dodist:appX":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true electron-builder --win AppX --config electron-builder.config.js","dodist:appX32":"cross-env ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES=true electron-builder --win AppX --ia32  --config electron-builder.config.js","zip-pc":"babel-node tools/zipResource.js","db:clear":"babel-node tools/clearDb.js","icon:gen":"gulp icon","icon:check":"babel-node icon/checkIconsCli.js","icon":"babel-node icon/buildIcons.js && babel-node icon/createSVGFont.js && npm run sass","icon:full":"npm run icon:check && npm run icon && npm run sass ","lang":"mkdirp src/static/lang &&  cd ./InitLang && node ./run.js","signtool":"cross-env BABEL_ENV=node babel-node tools/sign-tool-win.js","install-native":"electron-builder install-app-deps","install-native-32":"electron-builder install-app-deps --arch=ia32","pack-module":"babel-node tools/genPartialUpdate.js ia32 -- ","update-bundle-files-list":"node ./tools/get-node-modules-glob.js","upload-native-symbol":"sentry-cli upload-dif -o vng -p zalopc --wait ./.symbols"},"author":{"name":"VNG Corp.","email":"feddback@zalo.me","url":"https://zalo.me/"},"license":"MIT","dependencies":{"@babel/plugin-transform-runtime":"7.11.0","@babel/preset-env":"7.11.0","@babel/preset-react":"7.10.4","@babel/runtime-corejs3":"7.11.2","@google-cloud/secret-manager":"4.0.0","@google-cloud/storage":"6.1.0","@reduxjs/toolkit":"1.5.1","@sentry/electron":"1.1.0","@sentry/react":"6.2.4","@tensorflow/tfjs":"0.15.3","@types/generic-pool":"3.1.9","adm-zip":"0.4.13","ajv":"5.2.2","archiver":"2.0.3","auto-launch":"^5.0.1","babel-plugin-module-resolver":"4.0.0","babel-plugin-transform-zlog":"1.17.1","big-integer":"1.6.23","bloom-filters":"1.3.8","broadcast-channel":"~4.10.0","cborg":"1.9.5","change-case":"4.1.2","chart.js":"2.7.2","check-disk-space":"2.1.0","clsx":"1.0.4","codemirror":"^5.59.0","core-js":"3.6.5","cron":"2.1.0","crypto-js":"3.1.8","decompress":"4.2.0","dompurify":"2.3.6","dropbox":"2.5.9","electron-log":"4.2.2","electron-store":"6.0.1","electron-updater":"4.0.0","es6-promise":"3.2.1","fast-memoize":"^2.5.2","file-saver":"1.3.3","file-type":"10.11.0","flatted":"3.2.5","fs-extra":"6.0.1","generic-pool":"3.7.2","glob":"7.1.2","google-libphonenumber":"3.1.15","immer":"7.0.5","jpeg-js":"0.4.1","js-yaml":"^3.8.4","jszip":"3.10.1","libphonenumber-js":"1.6.6","lodash.debounce":"4.0.8","lodash.toarray":"4.4.0","lottie-web":"^5.1.7","lowdb":"2.1.0","lz-string":"1.4.4","mediatr-ts":"0.3.0","microm":"0.2.4","mkdirp":"^0.5.1","moment":"^2.29.1","nanoid":"3.3.3","network":"0.5.0","node-fetch":"2.6.0","node-stream-zip":"1.8.0","node-wifi":"2.0.13","p-defer":"4.0.0","p-tap":"4.0.0","pako":"2.0.3","pdfjs-dist":"2.5.207","percentile":"1.6.0","progress-stream":"1.2.0","prop-types":"15.5.10","protobufjs":"6.11.2","quick-lru":"6.0.2","react":"16.14.0","react-codemirror2":"^7.2.1","react-custom-scrollbars":"^4.2.1","react-datetime":"file:native/zdate-time-picker","react-dom":"16.14.0","react-draggable":"^4.4.3","react-error-overlay":"6.0.7","react-input-range":"^1.3.0","react-intersection-observer":"8.25.2","react-measure":"2.0.2","react-motion":"0.5.2","react-redux":"7.2.4","react-refresh":"0.8.3","react-resizable":"^1.11.0","react-router-redux":"^4.0.8","react-simple-timefield":"3.2.5","react-transition-group":"4.4.1","react-virtualized":"9.9.0","recoil":"0.1.3","recompose":"0.30.0","redux":"4.0.5","redux-batched-subscribe":"0.1.6","redux-thunk":"2.3.0","reflect-metadata":"0.1.13","request":"2.88.0","reselect":"4.0.0","resize-observer-polyfill":"1.5.1","sift":"16.0.0","source-map-support":"0.5.19","spark-md5":"3.0.0","stackblur-canvas":"1.4.0","systeminformation":"5.6.12","tar-fs":"2.0.0","tmp":"0.0.31","tough-cookie":"^2.3.2","tsyringe":"4.6.0","unused-filename":"0.1.0","uuid":"3.1.0","workerpool":"6.1.0","xstate":"4.23.1"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","@babel/eslint-parser":"7.12.1","@babel/node":"^7.0.0","@babel/plugin-proposal-class-properties":"7.12.1","@babel/preset-typescript":"7.12.7","@babel/register":"^7.0.0","@sentry/cli":"1.51.1","@types/async":"3.2.3","@types/codemirror":"0.0.98","@types/core-js":"2.5.4","@types/dompurify":"2.3.3","@types/gulp":"4.0.6","@types/jest":"26.0.23","@types/lodash.debounce":"4.0.6","@types/lodash.toarray":"4.4.6","@types/node":"17.0.35","@types/react":"^16.8.25","@types/react-custom-scrollbars":"4.0.8","@types/react-dom":"17.0.9","@types/react-resizable":"1.7.3","@types/react-transition-group":"4.4.0","@types/react-virtualized":"9.21.12","@types/rimraf":"3.0.2","@types/sqlite3":"3.1.8","@types/workerpool":"6.1.0","@typescript-eslint/parser":"4.22.0","babel-core":"^7.0.0-bridge.0","babel-eslint":"^9.0.0","babel-jest":"^23.4.2","babel-plugin-encrypt-src":"^1.0.3","capitalize":"2.0.4","chai":"3.5.0","chalk":"1.1.3","connect":"3.6.6","consola":"2.15.0","coveralls":"2.11.12","cross-env":"^2.0.0-beta","debug":"4.1.1","devtron":"1.4.0","electron":"7.3.2","electron-builder":"20.44.4","electron-devtools-installer":"3.1.1","electron-download":"4.1.1","electron-notarize":"0.2.1","electron-publish":"19.53.3","enzyme":"3.3.0","eslint":"5.4.0","eslint-import-resolver-babel-module":"5.1.0","eslint-import-resolver-webpack":"0.6.0","eslint-plugin-babel":"3.3.0","eslint-plugin-import":"2.16.0","eslint-plugin-jest":"21.22.0","eslint-plugin-jsx-a11y":"2.1.0","eslint-plugin-react":"7.11.1","eslint-plugin-react-hooks":"2.4.0","eslint-watch":"2.1.14","faker":"5.5.3","globby":"11.0.1","gulp":"4.0.2","gulp-consolidate":"0.2.0","gulp-iconfont":"11.0.0","isparta":"4.0.0","jest":"23.6.0","jsftp":"1.5.5","lint-staged":"10.5.4","md5":"2.2.1","md5-file":"4.0.0","micromatch":"4.0.2","mocha":"4.1.0","ncp":"^2.0.0","node-abi":"^2.0.2","node-pre-gyp":"^0.6.37","node-sass":"4.12.0","nodemon":"1.11.0","npm":"6.14.2","npm-run-all":"2.3.0","open":"0.0.5","pre-commit":"1.2.2","prettier":"2.4.1","prompt":"1.0.0","react-hook-form":"7.31.3","react-hook-form-auto":"1.3.13","react-test-renderer":"16.5.1","recoilize":"2.0.1","redux-logger":"3.0.6","redux-perf-middleware":"1.1.0","regenerator-runtime":"0.13.7","replace":"0.3.0","rimraf":"2.5.4","serve-static":"1.13.2","shelving-mock-indexeddb":"1.0.8","sinon":"1.17.5","sinon-chai":"2.8.0","terser-webpack-plugin-legacy":"1.2.3","ts-jest":"26.5.6","ts-node":"8.10.2","typescript":"3.9.6","uglify-es":"3.3.7","uglifyjs-webpack-plugin":"1.1.6","utility-types":"3.10.0","walkdir":"0.0.12","webpack":"3.10.0","webpack-chain":"6.5.1","webpack-dev-middleware":"^2.0.4","webpack-hot-middleware":"^2.21.0","webpack-md5-hash":"0.0.5","webpack-strip":"0.1.0","webpack-virtual-modules":"0.4.3","yargs":"15.4.1"},"externals":[]}')
        },
        kjmW: function(e, t) {
            var n;
            n = function() {
                return this
            }();
            try {
                n = n || new Function("return this")()
            } catch (r) {
                "object" == typeof window && (n = window)
            }
            e.exports = n
        },
        lPiR: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function(e) {
                var t = r,
                    n = t.lib,
                    i = n.WordArray,
                    o = n.Hasher,
                    s = t.algo,
                    a = [],
                    c = [];
                ! function() {
                    function t(t) {
                        for (var n = e.sqrt(t), r = 2; r <= n; r++)
                            if (!(t % r)) return !1;
                        return !0
                    }

                    function n(e) {
                        return 4294967296 * (e - (0 | e)) | 0
                    }
                    for (var r = 2, i = 0; i < 64;) t(r) && (i < 8 && (a[i] = n(e.pow(r, .5))), c[i] = n(e.pow(r, 1 / 3)), i++), r++
                }();
                var d = [],
                    u = s.SHA256 = o.extend({
                        _doReset: function() {
                            this._hash = new i.init(a.slice(0))
                        },
                        _doProcessBlock: function(e, t) {
                            for (var n = this._hash.words, r = n[0], i = n[1], o = n[2], s = n[3], a = n[4], u = n[5], l = n[6], p = n[7], m = 0; m < 64; m++) {
                                if (m < 16) d[m] = 0 | e[t + m];
                                else {
                                    var h = d[m - 15],
                                        f = (h << 25 | h >>> 7) ^ (h << 14 | h >>> 18) ^ h >>> 3,
                                        g = d[m - 2],
                                        y = (g << 15 | g >>> 17) ^ (g << 13 | g >>> 19) ^ g >>> 10;
                                    d[m] = f + d[m - 7] + y + d[m - 16]
                                }
                                var _ = r & i ^ r & o ^ i & o,
                                    E = (r << 30 | r >>> 2) ^ (r << 19 | r >>> 13) ^ (r << 10 | r >>> 22),
                                    b = p + ((a << 26 | a >>> 6) ^ (a << 21 | a >>> 11) ^ (a << 7 | a >>> 25)) + (a & u ^ ~a & l) + c[m] + d[m];
                                p = l, l = u, u = a, a = s + b | 0, s = o, o = i, i = r, r = b + (E + _) | 0
                            }
                            n[0] = n[0] + r | 0, n[1] = n[1] + i | 0, n[2] = n[2] + o | 0, n[3] = n[3] + s | 0, n[4] = n[4] + a | 0, n[5] = n[5] + u | 0, n[6] = n[6] + l | 0, n[7] = n[7] + p | 0
                        },
                        _doFinalize: function() {
                            var t = this._data,
                                n = t.words,
                                r = 8 * this._nDataBytes,
                                i = 8 * t.sigBytes;
                            return n[i >>> 5] |= 128 << 24 - i % 32, n[14 + (i + 64 >>> 9 << 4)] = e.floor(r / 4294967296), n[15 + (i + 64 >>> 9 << 4)] = r, t.sigBytes = 4 * n.length, this._process(), this._hash
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });
                t.SHA256 = o._createHelper(u), t.HmacSHA256 = o._createHmacHelper(u)
            }(Math), r.SHA256)
        },
        lSCD: function(e, t, n) {
            var r = n("NykK"),
                i = n("GoyQ");
            e.exports = function(e) {
                if (!i(e)) return !1;
                var t = r(e);
                return "[object Function]" == t || "[object GeneratorFunction]" == t || "[object AsyncFunction]" == t || "[object Proxy]" == t
            }
        },
        ljhN: function(e, t) {
            e.exports = function(e, t) {
                return e === t || e != e && t != t
            }
        },
        mNvP: function(e, t, n) {
            (function(e, t) {
                var n;
                ! function(n) {
                    ! function(r) {
                        var i = "object" == typeof t ? t : "object" == typeof self ? self : "object" == typeof this ? this : Function("return this;")(),
                            o = s(n);

                        function s(e, t) {
                            return function(n, r) {
                                "function" != typeof e[n] && Object.defineProperty(e, n, {
                                    configurable: !0,
                                    writable: !0,
                                    value: r
                                }), t && t(n, r)
                            }
                        }
                        void 0 === i.Reflect ? i.Reflect = n : o = s(i.Reflect, o),
                            function(t) {
                                var n = Object.prototype.hasOwnProperty,
                                    r = "function" == typeof Symbol,
                                    i = r && void 0 !== Symbol.toPrimitive ? Symbol.toPrimitive : "@@toPrimitive",
                                    o = r && void 0 !== Symbol.iterator ? Symbol.iterator : "@@iterator",
                                    s = "function" == typeof Object.create,
                                    a = {
                                        __proto__: []
                                    }
                                instanceof Array, c = !s && !a, d = {
                                    create: s ? function() {
                                        return ie(Object.create(null))
                                    } : a ? function() {
                                        return ie({
                                            __proto__: null
                                        })
                                    } : function() {
                                        return ie({})
                                    },
                                    has: c ? function(e, t) {
                                        return n.call(e, t)
                                    } : function(e, t) {
                                        return t in e
                                    },
                                    get: c ? function(e, t) {
                                        return n.call(e, t) ? e[t] : void 0
                                    } : function(e, t) {
                                        return e[t]
                                    }
                                }, u = Object.getPrototypeOf(Function), l = "object" == typeof e && e.env && "true" === e.env.REFLECT_METADATA_USE_MAP_POLYFILL, p = l || "function" != typeof Map || "function" != typeof Map.prototype.entries ? te() : Map, m = l || "function" != typeof Set || "function" != typeof Set.prototype.entries ? ne() : Set, h = new(l || "function" != typeof WeakMap ? re() : WeakMap);

                                function f(e, t, n, r) {
                                    if (x(n)) {
                                        if (!K(e)) throw new TypeError;
                                        if (!V(t)) throw new TypeError;
                                        return w(e, t)
                                    }
                                    if (!K(e)) throw new TypeError;
                                    if (!j(t)) throw new TypeError;
                                    if (!j(r) && !x(r) && !k(r)) throw new TypeError;
                                    return k(r) && (r = void 0), P(e, t, n = z(n), r)
                                }

                                function g(e, t) {
                                    function n(n, r) {
                                        if (!j(n)) throw new TypeError;
                                        if (!x(r) && !Y(r)) throw new TypeError;
                                        C(e, t, n, r)
                                    }
                                    return n
                                }

                                function y(e, t, n, r) {
                                    if (!j(n)) throw new TypeError;
                                    return x(r) || (r = z(r)), C(e, t, n, r)
                                }

                                function _(e, t, n) {
                                    if (!j(t)) throw new TypeError;
                                    return x(n) || (n = z(n)), A(e, t, n)
                                }

                                function E(e, t, n) {
                                    if (!j(t)) throw new TypeError;
                                    return x(n) || (n = z(n)), R(e, t, n)
                                }

                                function b(e, t, n) {
                                    if (!j(t)) throw new TypeError;
                                    return x(n) || (n = z(n)), M(e, t, n)
                                }

                                function I(e, t, n) {
                                    if (!j(t)) throw new TypeError;
                                    return x(n) || (n = z(n)), N(e, t, n)
                                }

                                function v(e, t) {
                                    if (!j(e)) throw new TypeError;
                                    return x(t) || (t = z(t)), D(e, t)
                                }

                                function T(e, t) {
                                    if (!j(e)) throw new TypeError;
                                    return x(t) || (t = z(t)), L(e, t)
                                }

                                function O(e, t, n) {
                                    if (!j(t)) throw new TypeError;
                                    x(n) || (n = z(n));
                                    var r = S(t, n, !1);
                                    if (x(r)) return !1;
                                    if (!r.delete(e)) return !1;
                                    if (r.size > 0) return !0;
                                    var i = h.get(t);
                                    return i.delete(n), i.size > 0 || h.delete(t), !0
                                }

                                function w(e, t) {
                                    for (var n = e.length - 1; n >= 0; --n) {
                                        var r = (0, e[n])(t);
                                        if (!x(r) && !k(r)) {
                                            if (!V(r)) throw new TypeError;
                                            t = r
                                        }
                                    }
                                    return t
                                }

                                function P(e, t, n, r) {
                                    for (var i = e.length - 1; i >= 0; --i) {
                                        var o = (0, e[i])(t, n, r);
                                        if (!x(o) && !k(o)) {
                                            if (!j(o)) throw new TypeError;
                                            r = o
                                        }
                                    }
                                    return r
                                }

                                function S(e, t, n) {
                                    var r = h.get(e);
                                    if (x(r)) {
                                        if (!n) return;
                                        r = new p, h.set(e, r)
                                    }
                                    var i = r.get(t);
                                    if (x(i)) {
                                        if (!n) return;
                                        i = new p, r.set(t, i)
                                    }
                                    return i
                                }

                                function A(e, t, n) {
                                    if (R(e, t, n)) return !0;
                                    var r = ee(t);
                                    return !k(r) && A(e, r, n)
                                }

                                function R(e, t, n) {
                                    var r = S(t, n, !1);
                                    return !x(r) && q(r.has(e))
                                }

                                function M(e, t, n) {
                                    if (R(e, t, n)) return N(e, t, n);
                                    var r = ee(t);
                                    return k(r) ? void 0 : M(e, r, n)
                                }

                                function N(e, t, n) {
                                    var r = S(t, n, !1);
                                    if (!x(r)) return r.get(e)
                                }

                                function C(e, t, n, r) {
                                    S(n, r, !0).set(e, t)
                                }

                                function D(e, t) {
                                    var n = L(e, t),
                                        r = ee(e);
                                    if (null === r) return n;
                                    var i = D(r, t);
                                    if (i.length <= 0) return n;
                                    if (n.length <= 0) return i;
                                    for (var o = new m, s = [], a = 0, c = n; a < c.length; a++) {
                                        var d = c[a];
                                        o.has(d) || (o.add(d), s.push(d))
                                    }
                                    for (var u = 0, l = i; u < l.length; u++) {
                                        d = l[u];
                                        o.has(d) || (o.add(d), s.push(d))
                                    }
                                    return s
                                }

                                function L(e, t) {
                                    var n = [],
                                        r = S(e, t, !1);
                                    if (x(r)) return n;
                                    for (var i = Q(r.keys()), o = 0;;) {
                                        var s = Z(i);
                                        if (!s) return n.length = o, n;
                                        var a = X(s);
                                        try {
                                            n[o] = a
                                        } catch (c) {
                                            try {
                                                J(i)
                                            } finally {
                                                throw c
                                            }
                                        }
                                        o++
                                    }
                                }

                                function U(e) {
                                    if (null === e) return 1;
                                    switch (typeof e) {
                                        case "undefined":
                                            return 0;
                                        case "boolean":
                                            return 2;
                                        case "string":
                                            return 3;
                                        case "symbol":
                                            return 4;
                                        case "number":
                                            return 5;
                                        case "object":
                                            return null === e ? 1 : 6;
                                        default:
                                            return 6
                                    }
                                }

                                function x(e) {
                                    return void 0 === e
                                }

                                function k(e) {
                                    return null === e
                                }

                                function B(e) {
                                    return "symbol" == typeof e
                                }

                                function j(e) {
                                    return "object" == typeof e ? null !== e : "function" == typeof e
                                }

                                function F(e, t) {
                                    switch (U(e)) {
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                            return e
                                    }
                                    var n = 3 === t ? "string" : 5 === t ? "number" : "default",
                                        r = $(e, i);
                                    if (void 0 !== r) {
                                        var o = r.call(e, n);
                                        if (j(o)) throw new TypeError;
                                        return o
                                    }
                                    return G(e, "default" === n ? "number" : n)
                                }

                                function G(e, t) {
                                    if ("string" === t) {
                                        var n = e.toString;
                                        if (W(n))
                                            if (!j(i = n.call(e))) return i;
                                        if (W(r = e.valueOf))
                                            if (!j(i = r.call(e))) return i
                                    } else {
                                        var r;
                                        if (W(r = e.valueOf))
                                            if (!j(i = r.call(e))) return i;
                                        var i, o = e.toString;
                                        if (W(o))
                                            if (!j(i = o.call(e))) return i
                                    }
                                    throw new TypeError
                                }

                                function q(e) {
                                    return !!e
                                }

                                function H(e) {
                                    return "" + e
                                }

                                function z(e) {
                                    var t = F(e, 3);
                                    return B(t) ? t : H(t)
                                }

                                function K(e) {
                                    return Array.isArray ? Array.isArray(e) : e instanceof Object ? e instanceof Array : "[object Array]" === Object.prototype.toString.call(e)
                                }

                                function W(e) {
                                    return "function" == typeof e
                                }

                                function V(e) {
                                    return "function" == typeof e
                                }

                                function Y(e) {
                                    switch (U(e)) {
                                        case 3:
                                        case 4:
                                            return !0;
                                        default:
                                            return !1
                                    }
                                }

                                function $(e, t) {
                                    var n = e[t];
                                    if (null != n) {
                                        if (!W(n)) throw new TypeError;
                                        return n
                                    }
                                }

                                function Q(e) {
                                    var t = $(e, o);
                                    if (!W(t)) throw new TypeError;
                                    var n = t.call(e);
                                    if (!j(n)) throw new TypeError;
                                    return n
                                }

                                function X(e) {
                                    return e.value
                                }

                                function Z(e) {
                                    var t = e.next();
                                    return !t.done && t
                                }

                                function J(e) {
                                    var t = e.return;
                                    t && t.call(e)
                                }

                                function ee(e) {
                                    var t = Object.getPrototypeOf(e);
                                    if ("function" != typeof e || e === u) return t;
                                    if (t !== u) return t;
                                    var n = e.prototype,
                                        r = n && Object.getPrototypeOf(n);
                                    if (null == r || r === Object.prototype) return t;
                                    var i = r.constructor;
                                    return "function" != typeof i || i === e ? t : i
                                }

                                function te() {
                                    var e = {},
                                        t = [],
                                        n = function() {
                                            function e(e, t, n) {
                                                this._index = 0, this._keys = e, this._values = t, this._selector = n
                                            }
                                            return e.prototype["@@iterator"] = function() {
                                                return this
                                            }, e.prototype[o] = function() {
                                                return this
                                            }, e.prototype.next = function() {
                                                var e = this._index;
                                                if (e >= 0 && e < this._keys.length) {
                                                    var n = this._selector(this._keys[e], this._values[e]);
                                                    return e + 1 >= this._keys.length ? (this._index = -1, this._keys = t, this._values = t) : this._index++, {
                                                        value: n,
                                                        done: !1
                                                    }
                                                }
                                                return {
                                                    value: void 0,
                                                    done: !0
                                                }
                                            }, e.prototype.throw = function(e) {
                                                throw this._index >= 0 && (this._index = -1, this._keys = t, this._values = t), e
                                            }, e.prototype.return = function(e) {
                                                return this._index >= 0 && (this._index = -1, this._keys = t, this._values = t), {
                                                    value: e,
                                                    done: !0
                                                }
                                            }, e
                                        }();
                                    return function() {
                                        function t() {
                                            this._keys = [], this._values = [], this._cacheKey = e, this._cacheIndex = -2
                                        }
                                        return Object.defineProperty(t.prototype, "size", {
                                            get: function() {
                                                return this._keys.length
                                            },
                                            enumerable: !0,
                                            configurable: !0
                                        }), t.prototype.has = function(e) {
                                            return this._find(e, !1) >= 0
                                        }, t.prototype.get = function(e) {
                                            var t = this._find(e, !1);
                                            return t >= 0 ? this._values[t] : void 0
                                        }, t.prototype.set = function(e, t) {
                                            var n = this._find(e, !0);
                                            return this._values[n] = t, this
                                        }, t.prototype.delete = function(t) {
                                            var n = this._find(t, !1);
                                            if (n >= 0) {
                                                for (var r = this._keys.length, i = n + 1; i < r; i++) this._keys[i - 1] = this._keys[i], this._values[i - 1] = this._values[i];
                                                return this._keys.length--, this._values.length--, t === this._cacheKey && (this._cacheKey = e, this._cacheIndex = -2), !0
                                            }
                                            return !1
                                        }, t.prototype.clear = function() {
                                            this._keys.length = 0, this._values.length = 0, this._cacheKey = e, this._cacheIndex = -2
                                        }, t.prototype.keys = function() {
                                            return new n(this._keys, this._values, r)
                                        }, t.prototype.values = function() {
                                            return new n(this._keys, this._values, i)
                                        }, t.prototype.entries = function() {
                                            return new n(this._keys, this._values, s)
                                        }, t.prototype["@@iterator"] = function() {
                                            return this.entries()
                                        }, t.prototype[o] = function() {
                                            return this.entries()
                                        }, t.prototype._find = function(e, t) {
                                            return this._cacheKey !== e && (this._cacheIndex = this._keys.indexOf(this._cacheKey = e)), this._cacheIndex < 0 && t && (this._cacheIndex = this._keys.length, this._keys.push(e), this._values.push(void 0)), this._cacheIndex
                                        }, t
                                    }();

                                    function r(e, t) {
                                        return e
                                    }

                                    function i(e, t) {
                                        return t
                                    }

                                    function s(e, t) {
                                        return [e, t]
                                    }
                                }

                                function ne() {
                                    return function() {
                                        function e() {
                                            this._map = new p
                                        }
                                        return Object.defineProperty(e.prototype, "size", {
                                            get: function() {
                                                return this._map.size
                                            },
                                            enumerable: !0,
                                            configurable: !0
                                        }), e.prototype.has = function(e) {
                                            return this._map.has(e)
                                        }, e.prototype.add = function(e) {
                                            return this._map.set(e, e), this
                                        }, e.prototype.delete = function(e) {
                                            return this._map.delete(e)
                                        }, e.prototype.clear = function() {
                                            this._map.clear()
                                        }, e.prototype.keys = function() {
                                            return this._map.keys()
                                        }, e.prototype.values = function() {
                                            return this._map.values()
                                        }, e.prototype.entries = function() {
                                            return this._map.entries()
                                        }, e.prototype["@@iterator"] = function() {
                                            return this.keys()
                                        }, e.prototype[o] = function() {
                                            return this.keys()
                                        }, e
                                    }()
                                }

                                function re() {
                                    var e = 16,
                                        t = d.create(),
                                        r = i();
                                    return function() {
                                        function e() {
                                            this._key = i()
                                        }
                                        return e.prototype.has = function(e) {
                                            var t = o(e, !1);
                                            return void 0 !== t && d.has(t, this._key)
                                        }, e.prototype.get = function(e) {
                                            var t = o(e, !1);
                                            return void 0 !== t ? d.get(t, this._key) : void 0
                                        }, e.prototype.set = function(e, t) {
                                            return o(e, !0)[this._key] = t, this
                                        }, e.prototype.delete = function(e) {
                                            var t = o(e, !1);
                                            return void 0 !== t && delete t[this._key]
                                        }, e.prototype.clear = function() {
                                            this._key = i()
                                        }, e
                                    }();

                                    function i() {
                                        var e;
                                        do {
                                            e = "@@WeakMap@@" + c()
                                        } while (d.has(t, e));
                                        return t[e] = !0, e
                                    }

                                    function o(e, t) {
                                        if (!n.call(e, r)) {
                                            if (!t) return;
                                            Object.defineProperty(e, r, {
                                                value: d.create()
                                            })
                                        }
                                        return e[r]
                                    }

                                    function s(e, t) {
                                        for (var n = 0; n < t; ++n) e[n] = 255 * Math.random() | 0;
                                        return e
                                    }

                                    function a(e) {
                                        return "function" == typeof Uint8Array ? "undefined" != typeof crypto ? crypto.getRandomValues(new Uint8Array(e)) : "undefined" != typeof msCrypto ? msCrypto.getRandomValues(new Uint8Array(e)) : s(new Uint8Array(e), e) : s(new Array(e), e)
                                    }

                                    function c() {
                                        var t = a(e);
                                        t[6] = 79 & t[6] | 64, t[8] = 191 & t[8] | 128;
                                        for (var n = "", r = 0; r < e; ++r) {
                                            var i = t[r];
                                            4 !== r && 6 !== r && 8 !== r || (n += "-"), i < 16 && (n += "0"), n += i.toString(16).toLowerCase()
                                        }
                                        return n
                                    }
                                }

                                function ie(e) {
                                    return e.__ = void 0, delete e.__, e
                                }
                                t("decorate", f), t("metadata", g), t("defineMetadata", y), t("hasMetadata", _), t("hasOwnMetadata", E), t("getMetadata", b), t("getOwnMetadata", I), t("getMetadataKeys", v), t("getOwnMetadataKeys", T), t("deleteMetadata", O)
                            }(o)
                    }()
                }(n || (n = {}))
            }).call(this, n("ckNr"), n("kjmW"))
        },
        mg0b: function(e, t) {
            t.read = function(e, t, n, r, i) {
                var o, s, a = 8 * i - r - 1,
                    c = (1 << a) - 1,
                    d = c >> 1,
                    u = -7,
                    l = n ? i - 1 : 0,
                    p = n ? -1 : 1,
                    m = e[t + l];
                for (l += p, o = m & (1 << -u) - 1, m >>= -u, u += a; u > 0; o = 256 * o + e[t + l], l += p, u -= 8);
                for (s = o & (1 << -u) - 1, o >>= -u, u += r; u > 0; s = 256 * s + e[t + l], l += p, u -= 8);
                if (0 === o) o = 1 - d;
                else {
                    if (o === c) return s ? NaN : 1 / 0 * (m ? -1 : 1);
                    s += Math.pow(2, r), o -= d
                }
                return (m ? -1 : 1) * s * Math.pow(2, o - r)
            }, t.write = function(e, t, n, r, i, o) {
                var s, a, c, d = 8 * o - i - 1,
                    u = (1 << d) - 1,
                    l = u >> 1,
                    p = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                    m = r ? 0 : o - 1,
                    h = r ? 1 : -1,
                    f = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (a = isNaN(t) ? 1 : 0, s = u) : (s = Math.floor(Math.log(t) / Math.LN2), t * (c = Math.pow(2, -s)) < 1 && (s--, c *= 2), (t += s + l >= 1 ? p / c : p * Math.pow(2, 1 - l)) * c >= 2 && (s++, c /= 2), s + l >= u ? (a = 0, s = u) : s + l >= 1 ? (a = (t * c - 1) * Math.pow(2, i), s += l) : (a = t * Math.pow(2, l - 1) * Math.pow(2, i), s = 0)); i >= 8; e[n + m] = 255 & a, m += h, a /= 256, i -= 8);
                for (s = s << i | a, d += i; d > 0; e[n + m] = 255 & s, m += h, s /= 256, d -= 8);
                e[n + m - h] |= 128 * f
            }
        },
        mrSG: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return i
            })), n.d(t, "a", (function() {
                return o
            })), n.d(t, "d", (function() {
                return s
            })), n.d(t, "f", (function() {
                return a
            })), n.d(t, "c", (function() {
                return c
            })), n.d(t, "e", (function() {
                return d
            }));
            var r = function(e, t) {
                return r = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n])
                }, r(e, t)
            };

            function i(e, t) {
                function n() {
                    this.constructor = e
                }
                r(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
            }
            var o = function() {
                return o = Object.assign || function(e) {
                    for (var t, n = 1, r = arguments.length; n < r; n++)
                        for (var i in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }, o.apply(this, arguments)
            };

            function s(e, t) {
                var n = {};
                for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols) {
                    var i = 0;
                    for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]])
                }
                return n
            }

            function a(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    n = t && e[t],
                    r = 0;
                if (n) return n.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && r >= e.length && (e = void 0), {
                            value: e && e[r++],
                            done: !e
                        }
                    }
                };
                throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function c(e, t) {
                var n = "function" == typeof Symbol && e[Symbol.iterator];
                if (!n) return e;
                var r, i, o = n.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(r = o.next()).done;) s.push(r.value)
                } catch (a) {
                    i = {
                        error: a
                    }
                } finally {
                    try {
                        r && !r.done && (n = o.return) && n.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function d() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(c(arguments[t]));
                return e
            }
        },
        mwIZ: function(e, t, n) {
            var r = n("ZWtO");
            e.exports = function(e, t, n) {
                var i = null == e ? void 0 : r(e, t);
                return void 0 === i ? n : i
            }
        },
        nUpV: function(e, t, n) {
            "use strict";
            var r = n("jDHv"),
                i = n("YEoC"),
                o = (n("bSii"), n("UJ0r")),
                s = n("teaq");
            const a = i.a.IDB;
            var c, d = n("d/or");
            let u = r.ModuleContainer.injectable()(c = Reflect.metadata("design:type", Function)(c = Reflect.metadata("design:paramtypes", [])(c = class e {
                constructor() {
                    this._preferAdapters = void 0, this._settings = void 0, this._preferAdapters = [], this._settings = new Map
                }
                get preferAdapters() {
                    return this._preferAdapters
                }
                set preferAdapters(e) {
                    this._preferAdapters = e, this._settings.clear(), this.save();
                    r.ModuleContainer.resolve(s.b).clearCache()
                }
                async load() {
                    r.ModuleContainer.resolve(o.b);
                    throw new Error("'zdb_setting' localStorage key is no longer in-use! Please remove it usage!")
                }
                async save() {
                    e.deserializePreferAdapter(this._preferAdapters), e.deserializeDatabaseSettings(this._settings);
                    throw new Error("'zdb_setting' localStorage key is no longer in-use! Please remove it usage!")
                }
                getPreferredAdapter(e) {
                    var t;
                    return null === (t = this._settings.get(e)) || void 0 === t ? void 0 : t.preferAdapter
                }
                setPreferAdapter(e, t) {
                    let n = this._settings.get(e);
                    n ? n.preferAdapter = t : n = {
                        currentAdapter: t,
                        preferAdapter: t
                    }, this._settings.set(e, n), this.save()
                }
                getCurrentAdapterType(e) {
                    let t = this._settings.get(e);
                    return t || (t = {
                        currentAdapter: a
                    }, this._settings.set(e, t)), t.currentAdapter
                }
                setCurrentAdapter(e, t) {
                    let n = this._settings.get(e);
                    n ? n.currentAdapter = t : n = {
                        currentAdapter: t,
                        preferAdapter: t
                    }, this._settings.set(e, n)
                }
                getDatabaseState(e) {
                    return this._settings.get(e)
                }
                static deserializePreferAdapter(e) {
                    return e.map((e => e === i.a.IDB ? "IDB" : "SQLite"))
                }
                static serializePreferAdapter(e) {
                    return e.adapter.map((e => "IDB" === e ? i.a.IDB : i.a.SQLite))
                }
                static deserializeDatabaseSettings(e) {
                    return Array.from(e.entries())
                }
                static serializeDatabaseSettings(e) {
                    return new Map(e.databases)
                }
            }) || c) || c) || c;
            r.ModuleContainer.registerSingleton(d.a, u)
        },
        ncfp: function(e, t, n) {
            "use strict";
            var r;
            ! function(e) {
                e[e.PENDING = 0] = "PENDING", e[e.YES = 1] = "YES", e[e.NO = 2] = "NO"
            }(r || (r = {})), t.a = r
        },
        nmnc: function(e, t, n) {
            var r = n("Kz5y").Symbol;
            e.exports = r
        },
        nu5z: function(e, t, n) {
            "use strict";
            e.exports = function() {
                return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g
            }
        },
        oOVA: function(e, t, n) {
            var r = n("Bvq2"),
                i = /#|\.prototype\./,
                o = function(e, t) {
                    var n = a[s(e)];
                    return n == d || n != c && ("function" == typeof t ? r(t) : !!t)
                },
                s = o.normalize = function(e) {
                    return String(e).replace(i, ".").toLowerCase()
                },
                a = o.data = {},
                c = o.NATIVE = "N",
                d = o.POLYFILL = "P";
            e.exports = o
        },
        oRsZ: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "avatar",
                    name: "Avatar",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        url: {
                            name: "url",
                            type: s.g.string
                        },
                        blob: {
                            name: "blob",
                            type: s.g.blob
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "ava_history",
                    name: "AvaHistory",
                    fields: {
                        submit_dttm: {
                            name: "submit_dttm",
                            type: s.g.integer
                        },
                        avaBlob: {
                            name: "avaBlob",
                            type: s.g.blob
                        },
                        orient: {
                            name: "orient",
                            type: s.g.json
                        },
                        size: {
                            name: "size",
                            type: s.g.json
                        },
                        fileName: {
                            name: "fileName",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "submit_dttm"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p)),
                g = {
                    tableName: "board_suggest",
                    name: "BoardSuggest",
                    fields: {
                        groupId: {
                            name: "groupId",
                            type: s.g.string
                        },
                        actionId: {
                            name: "actionId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "groupId"
                            }, {
                                type: "raw",
                                field: "actionId"
                            }],
                            unique: !0
                        }
                    }
                },
                y = new i.d(g),
                _ = new i.d(Object(r.a)({}, g)),
                E = new i.d(Object(r.a)({}, g)),
                b = {
                    tableName: "cloud_segment",
                    name: "CloudSegment",
                    fields: {
                        cloudFirstSmsLocalId: {
                            name: "cloudFirstSmsLocalId",
                            type: s.g.string,
                            nullable: !0
                        },
                        cloudSegmentCheck: {
                            name: "cloudSegmentCheck",
                            type: s.g.json,
                            default: []
                        },
                        conversationId: {
                            name: "conversationId",
                            type: s.g.string
                        },
                        hasMore: {
                            name: "hasMore",
                            type: s.g.integer,
                            default: 1
                        },
                        lastCloudVerifiedDttm: {
                            name: "lastCloudVerifiedDttm",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastDeletedMsgID: {
                            name: "lastDeletedMsgID",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastGetMaxRecentTs: {
                            name: "lastGetMaxRecentTs",
                            type: s.g.integer,
                            nullable: !0
                        },
                        maxCloudMsgId: {
                            name: "maxCloudMsgId",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "conversationId"
                            }],
                            unique: !0
                        }
                    }
                },
                I = new i.d(b),
                v = new i.d(Object(r.a)({}, b)),
                T = new i.d(Object(r.a)({}, b));
            var O = n("4W2c");
            const w = {
                    tableName: "conversation",
                    name: "Conversation",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        localType: {
                            name: "localType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        outside: {
                            name: "outside",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isGroup: {
                            name: "isGroup",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        firstSmsLocalId: {
                            name: "firstSmsLocalId",
                            type: s.g.string,
                            nullable: !0
                        },
                        respondedByMe: {
                            name: "respondedByMe",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        numMsg: {
                            name: "numMsg",
                            type: s.g.integer,
                            nullable: !0
                        },
                        infoCheckSearch: {
                            name: "infoCheckSearch",
                            type: s.g.json,
                            nullable: !0
                        },
                        syncFromMobile: {
                            name: "syncFromMobile",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        lastActionId: {
                            name: "lastActionId",
                            type: s.g.string,
                            nullable: !0
                        },
                        lastSmsLocalId: {
                            name: "lastSmsLocalId",
                            type: s.g.string,
                            nullable: !0
                        },
                        topOut: {
                            name: "topOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        topOutImprTimeOut: {
                            name: "topOutImprTimeOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        topOutTimeOut: {
                            name: "topOutTimeOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        pinned: {
                            name: "pinned",
                            type: s.g.integer,
                            nullable: !0
                        },
                        label: {
                            name: "label",
                            type: s.g.integer,
                            nullable: !0
                        },
                        preLastSmsLocalId: {
                            name: "preLastSmsLocalId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                P = new i.d(w),
                S = new i.d(Object(r.a)(Object(r.a)({}, w), {}, {
                    transforms: [new O.a(["previewMessage"])]
                })),
                A = new i.d(Object(r.a)({}, w)),
                R = {
                    tableName: "download_retry",
                    name: "DownloadRetry",
                    fields: {
                        url: {
                            name: "url",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "url"
                            }],
                            unique: !0
                        }
                    }
                },
                M = new i.d(R),
                N = new i.d(Object(r.a)({}, R)),
                C = new i.d(Object(r.a)({}, R)),
                D = {
                    tableName: "file",
                    name: "File",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.integer
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        type: {
                            name: "type",
                            type: s.g.string,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        id: {
                            name: "id",
                            type: s.g.integer,
                            nullable: !0
                        },
                        updateTime: {
                            name: "updateTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        localPath: {
                            name: "localPath",
                            type: s.g.string,
                            nullable: !0
                        },
                        downloadError: {
                            name: "downloadError",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        folderPath: {
                            name: "folderPath",
                            type: s.g.string,
                            nullable: !0
                        },
                        dimension: {
                            name: "dimension",
                            type: s.g.json,
                            nullable: !0
                        },
                        previewThumb: {
                            name: "previewThumb",
                            nullable: !0,
                            type: s.g.string
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer
                        },
                        isExpired: {
                            name: "isExpired",
                            nullable: !0,
                            type: s.g.boolean
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        sendDttm: {
                            name: "sendDttm",
                            fields: [{
                                type: "raw",
                                field: "sendDttm"
                            }],
                            unique: !1
                        },
                        userId_sendDttm_msgId: {
                            name: "userId_sendDttm_msgId",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }, {
                                type: "length",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !1
                        }
                    }
                },
                L = new i.d(D),
                U = new i.d(Object(r.a)({}, D)),
                x = new i.d(Object(r.a)({}, D)),
                k = {
                    tableName: "friend",
                    name: "Friend",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        username: {
                            name: "username",
                            type: s.g.string,
                            nullable: !0
                        },
                        displayName: {
                            name: "displayName",
                            type: s.g.string
                        },
                        zaloName: {
                            name: "zaloName",
                            type: s.g.string
                        },
                        avatar: {
                            name: "avatar",
                            type: s.g.string
                        },
                        bgavatar: {
                            name: "bgavatar",
                            type: s.g.string,
                            nullable: !0
                        },
                        cover: {
                            name: "cover",
                            type: s.g.string,
                            nullable: !0
                        },
                        gender: {
                            name: "gender",
                            type: s.g.integer,
                            nullable: !0
                        },
                        dob: {
                            name: "dob",
                            type: s.g.integer,
                            nullable: !0
                        },
                        sdob: {
                            name: "sdob",
                            type: s.g.string,
                            nullable: !0
                        },
                        status: {
                            name: "status",
                            type: s.g.string,
                            nullable: !0
                        },
                        phoneNumber: {
                            name: "phoneNumber",
                            type: s.g.string,
                            nullable: !0
                        },
                        isFr: {
                            name: "isFr",
                            type: s.g.integer
                        },
                        isBlocked: {
                            name: "isBlocked",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        lastActionTime: {
                            name: "lastActionTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastUpdateTime: {
                            name: "lastUpdateTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isActive: {
                            name: "isActive",
                            type: s.g.integer,
                            nullable: !0
                        },
                        key: {
                            name: "key",
                            type: s.g.integer,
                            nullable: !0
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        isActivePC: {
                            name: "isActivePC",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isActiveWeb: {
                            name: "isActiveWeb",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isValid: {
                            name: "isValid",
                            type: s.g.integer,
                            nullable: !0
                        },
                        userKey: {
                            name: "userKey",
                            type: s.g.string,
                            nullable: !0
                        },
                        accountStatus: {
                            name: "accountStatus",
                            type: s.g.integer,
                            nullable: !0
                        },
                        oaInfo: {
                            name: "oaInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        user_mode: {
                            name: "user_mode",
                            type: s.g.integer,
                            nullable: !0
                        },
                        globalId: {
                            name: "globalId",
                            type: s.g.string,
                            nullable: !0
                        },
                        lastOnlineTime: {
                            name: "lastOnlineTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        _lastRequestTime: {
                            name: "_lastRequestTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        bizInfo: {
                            name: "bizInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        globalNoiseId: {
                            name: "globalNoiseId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                B = new i.d(k),
                j = new i.d(Object(r.a)({}, k)),
                F = new i.d(Object(r.a)({}, k)),
                G = {
                    tableName: "friends_info",
                    name: "FriendsInfo",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        username: {
                            name: "username",
                            type: s.g.string,
                            nullable: !0
                        },
                        displayName: {
                            name: "displayName",
                            type: s.g.string
                        },
                        zaloName: {
                            name: "zaloName",
                            type: s.g.string
                        },
                        avatar: {
                            name: "avatar",
                            type: s.g.string
                        },
                        bgavatar: {
                            name: "bgavatar",
                            type: s.g.string
                        },
                        cover: {
                            name: "cover",
                            type: s.g.string
                        },
                        gender: {
                            name: "gender",
                            type: s.g.integer
                        },
                        dob: {
                            name: "dob",
                            type: s.g.integer
                        },
                        sdob: {
                            name: "sdob",
                            type: s.g.string
                        },
                        status: {
                            name: "status",
                            type: s.g.string,
                            nullable: !0
                        },
                        phoneNumber: {
                            name: "phoneNumber",
                            type: s.g.string
                        },
                        isFr: {
                            name: "isFr",
                            type: s.g.integer
                        },
                        isBlocked: {
                            name: "isBlocked",
                            type: s.g.boolean
                        },
                        lastActionTime: {
                            name: "lastActionTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastUpdateTime: {
                            name: "lastUpdateTime",
                            type: s.g.integer
                        },
                        isActive: {
                            name: "isActive",
                            type: s.g.integer
                        },
                        key: {
                            name: "key",
                            type: s.g.integer
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        isActivePC: {
                            name: "isActivePC",
                            type: s.g.integer
                        },
                        isActiveWeb: {
                            name: "isActiveWeb",
                            type: s.g.integer
                        },
                        isValid: {
                            name: "isValid",
                            type: s.g.integer
                        },
                        userKey: {
                            name: "userKey",
                            type: s.g.string
                        },
                        accountStatus: {
                            name: "accountStatus",
                            type: s.g.integer
                        },
                        oaInfo: {
                            name: "oaInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        user_mode: {
                            name: "user_mode",
                            type: s.g.integer
                        },
                        globalId: {
                            name: "globalId",
                            type: s.g.string,
                            nullable: !0
                        },
                        lastOnlineTime: {
                            name: "lastOnlineTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestFetchTime: {
                            name: "friendRequestFetchTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestRead: {
                            name: "friendRequestRead",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        _lastRequestTime: {
                            name: "_lastRequestTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestMsg: {
                            name: "friendRequestMsg",
                            type: s.g.string,
                            nullable: !0
                        },
                        friendRequestSource: {
                            name: "friendRequestSource",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestType: {
                            name: "friendRequestType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestSrc: {
                            name: "friendRequestSrc",
                            type: s.g.integer,
                            nullable: !0
                        },
                        friendRequestSortOrder: {
                            name: "friendRequestSortOrder",
                            type: s.g.integer,
                            nullable: !0
                        },
                        userRank: {
                            name: "userRank",
                            type: s.g.string,
                            nullable: !0
                        },
                        bizPkg: {
                            name: "bizPkg",
                            type: s.g.json,
                            nullable: !0
                        },
                        bizInfo: {
                            name: "bizInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        globalNoiseId: {
                            name: "globalNoiseId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                q = new i.d(G),
                H = new i.d(Object(r.a)({}, G)),
                z = new i.d(Object(r.a)({}, G)),
                K = {
                    tableName: "group",
                    name: "Group",
                    fields: {
                        desc: {
                            name: "desc",
                            type: s.g.string
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        creatorId: {
                            name: "creatorId",
                            type: s.g.string
                        },
                        totalMember: {
                            name: "totalMember",
                            type: s.g.integer
                        },
                        topMember: {
                            name: "topMember",
                            type: s.g.json
                        },
                        topic: {
                            name: "topic",
                            type: s.g.json,
                            nullable: !0
                        },
                        visibility: {
                            name: "visibility",
                            type: s.g.integer
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        isGroup: {
                            name: "isGroup",
                            type: s.g.boolean
                        },
                        displayName: {
                            name: "displayName",
                            type: s.g.string
                        },
                        avatar: {
                            name: "avatar",
                            type: s.g.string
                        },
                        bgavatar: {
                            name: "bgavatar",
                            type: s.g.string
                        },
                        authorId: {
                            name: "authorId",
                            type: s.g.string,
                            nullable: !0
                        },
                        lastUpdate: {
                            name: "lastUpdate",
                            type: s.g.integer,
                            nullable: !0
                        },
                        defaultAvatar: {
                            name: "defaultAvatar",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        memberIds: {
                            name: "memberIds",
                            type: s.g.json,
                            nullable: !0
                        },
                        e2ee: {
                            name: "e2ee",
                            type: s.g.integer,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.string,
                            nullable: !0
                        },
                        subType: {
                            name: "subType",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                W = new i.d(K),
                V = new i.d(Object(r.a)({}, K)),
                Y = new i.d(Object(r.a)({}, K)),
                $ = {
                    tableName: "group_info",
                    name: "GroupInfo",
                    fields: {
                        memberIds: {
                            name: "memberIds",
                            type: s.g.json
                        },
                        maxMember: {
                            name: "maxMember",
                            type: s.g.integer
                        },
                        setting: {
                            name: "setting",
                            type: s.g.json
                        },
                        lastUpdate: {
                            name: "lastUpdate",
                            type: s.g.integer
                        },
                        topMember: {
                            name: "topMember",
                            type: s.g.json
                        },
                        pendingApproveHintShow: {
                            name: "pendingApproveHintShow",
                            type: s.g.integer,
                            nullable: !0
                        },
                        pendingApproveUsers: {
                            name: "pendingApproveUsers",
                            type: s.g.json,
                            nullable: !0
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        pendingApprove: {
                            name: "pendingApprove",
                            type: s.g.integer,
                            nullable: !0
                        },
                        adminIds: {
                            name: "adminIds",
                            type: s.g.json,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                Q = new i.d($),
                X = new i.d(Object(r.a)({}, $)),
                Z = new i.d(Object(r.a)({}, $)),
                J = {
                    tableName: "group_topics",
                    name: "GroupTopics",
                    fields: {
                        conversationId: {
                            name: "conversationId",
                            type: s.g.string
                        },
                        topics: {
                            name: "topics",
                            type: s.g.json
                        },
                        boardVersion: {
                            name: "boardVersion",
                            type: s.g.integer
                        },
                        lastFetch: {
                            name: "lastFetch",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "conversationId"
                            }],
                            unique: !0
                        }
                    }
                },
                ee = new i.d(J),
                te = new i.d(Object(r.a)({}, J)),
                ne = new i.d(Object(r.a)({}, J)),
                re = {
                    tableName: "image",
                    name: "Image",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.integer
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        subType: {
                            name: "subType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        type: {
                            name: "type",
                            type: s.g.string,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        localPath: {
                            name: "localPath",
                            type: s.g.string,
                            nullable: !0
                        },
                        id: {
                            name: "id",
                            type: s.g.integer,
                            nullable: !0
                        },
                        previewThumb: {
                            name: "previewThumb",
                            type: s.g.string,
                            nullable: !0
                        },
                        updateTime: {
                            name: "updateTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer
                        },
                        width: {
                            name: "width",
                            type: s.g.integer,
                            nullable: !0
                        },
                        height: {
                            name: "height",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isExpired: {
                            name: "isExpired",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        isExpiredAll: {
                            name: "isExpiredAll",
                            type: s.g.boolean,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        userId_sendDttm_msgId: {
                            name: "userId_sendDttm_msgId",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }, {
                                type: "length",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !1
                        }
                    }
                },
                ie = new i.d(re),
                oe = new i.d(Object(r.a)({}, re)),
                se = new i.d(Object(r.a)({}, re)),
                ae = {
                    tableName: "label",
                    name: "Label",
                    fields: {
                        color: {
                            name: "color",
                            type: s.g.string
                        },
                        createTime: {
                            name: "createTime",
                            type: s.g.integer
                        },
                        emoji: {
                            name: "emoji",
                            type: s.g.string
                        },
                        id: {
                            name: "id",
                            type: s.g.integer
                        },
                        conversations: {
                            name: "conversations",
                            type: s.g.json
                        },
                        offset: {
                            name: "offset",
                            type: s.g.integer
                        },
                        text: {
                            name: "text",
                            type: s.g.string
                        },
                        totalImage: {
                            name: "totalImage",
                            type: s.g.integer,
                            nullable: !0
                        },
                        textKey: {
                            name: "textKey",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                ce = new i.d(ae),
                de = new i.d(Object(r.a)({}, ae)),
                ue = new i.d(Object(r.a)({}, ae)),
                le = {
                    tableName: "link",
                    name: "Link",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.integer
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        type: {
                            name: "type",
                            type: s.g.string,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        id: {
                            name: "id",
                            type: s.g.integer,
                            nullable: !0
                        },
                        updateTime: {
                            name: "updateTime",
                            type: s.g.integer,
                            nullable: !0
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer
                        },
                        previewThumb: {
                            name: "previewThumb",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        userId_sendDttm_msgId: {
                            name: "userId_sendDttm_msgId",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }, {
                                type: "length",
                                field: "msgId"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !1
                        }
                    }
                },
                pe = new i.d(le),
                me = new i.d(Object(r.a)({}, le)),
                he = new i.d(Object(r.a)({}, le)),
                fe = {
                    tableName: "mention",
                    name: "Mention",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.integer
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        }
                    }
                },
                ge = new i.d(fe),
                ye = new i.d(Object(r.a)({}, fe)),
                _e = new i.d(Object(r.a)({}, fe));
            let Ee;
            ! function(e) {
                e[e.UNKNOWN = -1] = "UNKNOWN", e[e.POLL = 1] = "POLL", e[e.SYNC_MOBILE_MESSAGE = 2] = "SYNC_MOBILE_MESSAGE", e[e.CLOUD = 3] = "CLOUD", e[e.LOCAL = 5] = "LOCAL", e[e.SYNC_MOBILE_DB = 7] = "SYNC_MOBILE_DB", e[e.GET_PREVIEW = 8] = "GET_PREVIEW", e[e.CLOUD_FIRST = 9] = "CLOUD_FIRST", e[e.SOCKET = 10] = "SOCKET", e[e.MISS_MSG = 11] = "MISS_MSG", e[e.CLOUD_LOADER = 12] = "CLOUD_LOADER"
            }(Ee || (Ee = {}));
            const be = {
                    tableName: "message",
                    name: "Message",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        msgType: {
                            name: "msgType",
                            type: s.g.integer
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        isExpired: {
                            name: "isExpired",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        isExpiredAll: {
                            name: "isExpiredAll",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        updateMemberIds: {
                            name: "updateMemberIds",
                            type: s.g.json,
                            nullable: !0
                        },
                        act: {
                            name: "act",
                            type: s.g.string,
                            nullable: !0
                        },
                        action: {
                            name: "action",
                            type: s.g.string,
                            nullable: !0
                        },
                        eventInfo: {
                            name: "eventInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        zglobalMsgId: {
                            name: "zglobalMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        src: {
                            name: "src",
                            type: s.g.integer,
                            nullable: !0
                        },
                        actionId: {
                            name: "actionId",
                            type: s.g.string,
                            nullable: !0
                        },
                        status: {
                            name: "status",
                            type: s.g.integer,
                            nullable: !0
                        },
                        notify: {
                            name: "notify",
                            type: s.g.string,
                            nullable: !0
                        },
                        mentions: {
                            name: "mentions",
                            type: s.g.json,
                            nullable: !0
                        },
                        quote: {
                            name: "quote",
                            type: s.g.json,
                            nullable: !0
                        },
                        serverTime: {
                            name: "serverTime",
                            type: s.g.string,
                            nullable: !0
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        dName: {
                            name: "dName",
                            type: s.g.string,
                            nullable: !0
                        },
                        localDttm: {
                            name: "localDttm",
                            type: s.g.integer,
                            nullable: !0
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer,
                            nullable: !0
                        },
                        st: {
                            name: "st",
                            type: s.g.integer,
                            nullable: !0
                        },
                        at: {
                            name: "at",
                            type: s.g.integer,
                            nullable: !0
                        },
                        cmd: {
                            name: "cmd",
                            type: s.g.integer,
                            nullable: !0
                        },
                        originMsgType: {
                            name: "originMsgType",
                            type: s.g.string,
                            nullable: !0
                        },
                        subState: {
                            name: "subState",
                            type: s.g.integer,
                            nullable: !0
                        },
                        e2eeStatus: {
                            name: "e2eeStatus",
                            type: s.g.integer,
                            nullable: !0
                        },
                        sequenseId: {
                            name: "sequenseId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        isLocalMsgId: {
                            name: "isLocalMsgId",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        properties: {
                            name: "properties",
                            type: s.g.json,
                            nullable: !0
                        },
                        originTs: {
                            name: "originTs",
                            type: s.g.string,
                            nullable: !0
                        },
                        subType: {
                            name: "subType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        localPath: {
                            name: "localPath",
                            type: s.g.string,
                            nullable: !0
                        },
                        folderPath: {
                            name: "folderPath",
                            type: s.g.string,
                            nullable: !0
                        },
                        root: {
                            name: "root",
                            type: s.g.integer,
                            nullable: !0
                        },
                        syncFromMobile: {
                            name: "syncFromMobile",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        topOut: {
                            name: "topOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        topOutTimeOut: {
                            name: "topOutTimeOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        topOutImprTimeOut: {
                            name: "topOutImprTimeOut",
                            type: s.g.string,
                            nullable: !0
                        },
                        previewThumb: {
                            name: "previewThumb",
                            type: s.g.string,
                            nullable: !0
                        },
                        refMessageId: {
                            name: "refMessageId",
                            type: s.g.string,
                            nullable: !0
                        },
                        urgency: {
                            name: "urgency",
                            type: s.g.integer,
                            nullable: !0
                        },
                        dimension: {
                            name: "dimension",
                            type: s.g.json,
                            nullable: !0
                        },
                        extra: {
                            name: "extra",
                            type: s.g.json,
                            nullable: !0
                        },
                        _friendRequestData: {
                            name: "_friendRequestData",
                            type: s.g.json,
                            nullable: !0
                        },
                        content: {
                            name: "content",
                            type: s.g.string,
                            nullable: !0
                        },
                        isErrorInfo: {
                            name: "isErrorInfo",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        hasReact: {
                            name: "hasReact",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        uidSenderDel: {
                            name: "uidSenderDel",
                            type: s.g.string,
                            nullable: !0
                        },
                        footer: {
                            name: "footer",
                            type: s.g.json,
                            nullable: !0
                        },
                        sendErrorCode: {
                            name: "sendErrorCode",
                            type: s.g.integer,
                            nullable: !0
                        },
                        __isUpdateMessage: {
                            name: "__isUpdateMessage",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        __updateData: {
                            name: "__updateData",
                            type: s.g.json,
                            nullable: !0
                        },
                        width: {
                            name: "width",
                            type: s.g.integer,
                            nullable: !0
                        },
                        height: {
                            name: "height",
                            type: s.g.integer,
                            nullable: !0
                        },
                        zipKey: {
                            name: "zipKey",
                            type: s.g.string,
                            nullable: !0
                        },
                        resend: {
                            name: "resend",
                            type: s.g.json,
                            nullable: !0
                        },
                        cancelled: {
                            name: "cancelled",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        z_parsedTokens: {
                            name: "z_parsedTokens",
                            type: s.g.json,
                            nullable: !0
                        },
                        isLastMsg: {
                            name: "isLastMsg",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        isSelected: {
                            name: "isSelected",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        textArguments: {
                            name: "textArguments",
                            type: s.g.json,
                            nullable: !0
                        },
                        msgText: {
                            name: "msgText",
                            type: s.g.string,
                            nullable: !0
                        },
                        actionText: {
                            name: "actionText",
                            type: s.g.string,
                            nullable: !0
                        },
                        platformType: {
                            name: "platformType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        oldMsgId: {
                            name: "oldMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        vOrient: {
                            name: "vOrient",
                            type: s.g.integer,
                            nullable: !0
                        },
                        fileSize: {
                            name: "fileSize",
                            type: s.g.integer,
                            nullable: !0
                        },
                        upSrc: {
                            name: "upSrc",
                            type: s.g.integer,
                            nullable: !0
                        },
                        reader: {
                            name: "reader",
                            type: s.g.integer,
                            nullable: !0
                        },
                        sequenceId: {
                            name: "sequenceId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        staredDttm: {
                            name: "staredDttm",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        userId_sendDttm_msgId: {
                            name: "userId_sendDttm_msgId",
                            fields: [{
                                type: "raw",
                                field: "toUid"
                            }, {
                                type: "raw",
                                field: "sendDttm"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        cliMsgIdIndex: {
                            name: "cliMsgIdIndex",
                            table: !0,
                            fields: [{
                                type: "raw",
                                field: "cliMsgId"
                            }],
                            unique: !1
                        },
                        status_sendDttm: {
                            name: "status_sendDttm",
                            table: !0,
                            fields: [{
                                type: "raw",
                                field: "status"
                            }, {
                                type: "raw",
                                field: "sendDttm"
                            }],
                            unique: !1
                        }
                    }
                },
                Ie = new i.d(be),
                ve = new i.d(Object(r.a)(Object(r.a)({}, be), {}, {
                    transforms: [new O.a(["message"])]
                })),
                Te = new i.d(Object(r.a)(Object(r.a)({}, be), {}, {
                    partitionField: "toUid"
                })),
                Oe = {
                    tableName: "notifications",
                    name: "Notifications",
                    fields: {
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        uid: {
                            name: "uid",
                            type: s.g.string
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "ts"
                            }],
                            unique: !0
                        }
                    }
                },
                we = new i.d(Oe),
                Pe = new i.d(Object(r.a)({}, Oe)),
                Se = new i.d(Object(r.a)({}, Oe)),
                Ae = {
                    tableName: "poll",
                    name: "Poll",
                    fields: {
                        group_id: {
                            name: "group_id",
                            type: s.g.string,
                            nullable: !0
                        },
                        updater: {
                            name: "updater",
                            type: s.g.string,
                            nullable: !0
                        },
                        creator: {
                            name: "creator",
                            type: s.g.string
                        },
                        question: {
                            name: "question",
                            type: s.g.string
                        },
                        options: {
                            name: "options",
                            type: s.g.json
                        },
                        joined: {
                            name: "joined",
                            type: s.g.boolean
                        },
                        closed: {
                            name: "closed",
                            type: s.g.boolean
                        },
                        poll_id: {
                            name: "poll_id",
                            type: s.g.integer
                        },
                        allow_multi_choices: {
                            name: "allow_multi_choices",
                            type: s.g.boolean
                        },
                        allow_add_new_option: {
                            name: "allow_add_new_option",
                            type: s.g.boolean
                        },
                        is_anonymous: {
                            name: "is_anonymous",
                            type: s.g.boolean
                        },
                        poll_type: {
                            name: "poll_type",
                            type: s.g.integer
                        },
                        created_time: {
                            name: "created_time",
                            type: s.g.integer
                        },
                        updated_time: {
                            name: "updated_time",
                            type: s.g.integer
                        },
                        expired_time: {
                            name: "expired_time",
                            type: s.g.integer
                        },
                        is_hide_vote_preview: {
                            name: "is_hide_vote_preview",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        poll_version: {
                            name: "poll_version",
                            type: s.g.integer,
                            nullable: !0
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        id: {
                            name: "id",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "poll_id"
                            }],
                            unique: !0
                        }
                    }
                },
                Re = new i.d(Ae),
                Me = new i.d(Object(r.a)({}, Ae)),
                Ne = new i.d(Object(r.a)({}, Ae)),
                Ce = {
                    tableName: "star_message",
                    name: "StarMessage",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        staredDttm: {
                            name: "staredDttm",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        staredDttm: {
                            name: "staredDttm",
                            fields: [{
                                type: "raw",
                                field: "staredDttm"
                            }],
                            unique: !1
                        }
                    }
                },
                De = new i.d(Ce),
                Le = new i.d(Object(r.a)({}, Ce)),
                Ue = new i.d(Object(r.a)({}, Ce)),
                xe = {
                    tableName: "sticker",
                    name: "Sticker",
                    fields: {
                        id: {
                            name: "id",
                            type: s.g.integer
                        },
                        cateId: {
                            name: "cateId",
                            type: s.g.integer
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        text: {
                            name: "text",
                            type: s.g.string
                        },
                        uri: {
                            name: "uri",
                            type: s.g.string
                        },
                        fkey: {
                            name: "fkey",
                            type: s.g.integer
                        },
                        status: {
                            name: "status",
                            type: s.g.integer
                        },
                        stickerUrl: {
                            name: "stickerUrl",
                            type: s.g.string
                        },
                        stickerSpriteUrl: {
                            name: "stickerSpriteUrl",
                            type: s.g.string
                        },
                        stickerWebpUrl: {
                            name: "stickerWebpUrl",
                            type: s.g.string,
                            nullable: !0
                        },
                        totalFrames: {
                            name: "totalFrames",
                            type: s.g.integer
                        },
                        duration: {
                            name: "duration",
                            type: s.g.integer
                        },
                        effectId: {
                            name: "effectId",
                            type: s.g.integer
                        },
                        checksum: {
                            name: "checksum",
                            type: s.g.string,
                            nullable: !0
                        },
                        ext: {
                            name: "ext",
                            type: s.g.integer,
                            nullable: !0
                        },
                        source: {
                            name: "source",
                            type: s.g.integer,
                            nullable: !0
                        },
                        fss: {
                            name: "fss",
                            type: s.g.string,
                            nullable: !0
                        },
                        fssInfo: {
                            name: "fssInfo",
                            type: s.g.string,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.integer,
                            nullable: !0
                        },
                        extInfo: {
                            name: "extInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        fetchTs: {
                            name: "fetchTs",
                            type: s.g.integer
                        },
                        updateState: {
                            name: "updateState",
                            type: s.g.integer,
                            nullable: !0
                        },
                        recentItemType: {
                            name: "recentItemType",
                            type: s.g.string,
                            nullable: !0
                        },
                        recentItemId: {
                            name: "recentItemId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "cateId"
                            }, {
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                ke = new i.d(xe),
                Be = new i.d(Object(r.a)({}, xe)),
                je = new i.d(Object(r.a)({}, xe)),
                Fe = {
                    tableName: "todo",
                    name: "Todo",
                    fields: {
                        id: {
                            name: "id",
                            type: s.g.string
                        },
                        creator: {
                            name: "creator",
                            type: s.g.string
                        },
                        updateTime: {
                            name: "updateTime",
                            type: s.g.integer
                        },
                        createTime: {
                            name: "createTime",
                            type: s.g.integer
                        },
                        assignees: {
                            name: "assignees",
                            type: s.g.json
                        },
                        dueDate: {
                            name: "dueDate",
                            type: s.g.integer
                        },
                        content: {
                            name: "content",
                            type: s.g.string
                        },
                        description: {
                            name: "description",
                            type: s.g.string
                        },
                        extra: {
                            name: "extra",
                            type: s.g.json
                        },
                        dateDefaultType: {
                            name: "dateDefaultType",
                            type: s.g.integer
                        },
                        status: {
                            name: "status",
                            type: s.g.integer
                        },
                        watchers: {
                            name: "watchers",
                            type: s.g.json
                        },
                        personalBoardType: {
                            name: "personalBoardType",
                            type: s.g.integer
                        },
                        dingTimes: {
                            name: "dingTimes",
                            type: s.g.integer
                        },
                        schedule: {
                            name: "schedule",
                            type: s.g.json,
                            nullable: !0
                        },
                        attach: {
                            name: "attach",
                            type: s.g.json
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                Ge = new i.d(Fe),
                qe = new i.d(Object(r.a)({}, Fe)),
                He = new i.d(Object(r.a)({}, Fe)),
                ze = {
                    tableName: "topic_v2",
                    name: "Topic",
                    fields: {
                        editorId: {
                            name: "editorId",
                            type: s.g.string,
                            nullable: !0
                        },
                        emoji: {
                            name: "emoji",
                            type: s.g.string
                        },
                        color: {
                            name: "color",
                            type: s.g.integer
                        },
                        groupId: {
                            name: "groupId",
                            type: s.g.string
                        },
                        creatorId: {
                            name: "creatorId",
                            type: s.g.string,
                            nullable: !0
                        },
                        editTime: {
                            name: "editTime",
                            type: s.g.integer
                        },
                        eventType: {
                            name: "eventType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        responseMem: {
                            name: "responseMem",
                            type: s.g.json,
                            nullable: !0
                        },
                        params: {
                            name: "params",
                            type: s.g.json
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        duration: {
                            name: "duration",
                            type: s.g.integer,
                            nullable: !0
                        },
                        repeatData: {
                            name: "repeatData",
                            type: s.g.json,
                            nullable: !0
                        },
                        createTime: {
                            name: "createTime",
                            type: s.g.integer
                        },
                        repeat: {
                            name: "repeat",
                            type: s.g.integer
                        },
                        startTime: {
                            name: "startTime",
                            type: s.g.integer
                        },
                        id: {
                            name: "id",
                            type: s.g.string
                        },
                        action: {
                            name: "action",
                            type: s.g.integer,
                            nullable: !0
                        },
                        listRespMem: {
                            name: "listRespMem",
                            type: s.g.json,
                            nullable: !0
                        },
                        creatorUid: {
                            name: "creatorUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        editorUid: {
                            name: "editorUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        repeatInfo: {
                            name: "repeatInfo",
                            type: s.g.json,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "groupId"
                            }, {
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                Ke = new i.d(ze),
                We = new i.d(Object(r.a)({}, ze)),
                Ve = new i.d(Object(r.a)({}, ze)),
                Ye = {
                    tableName: "ttlmsg",
                    name: "TTLMessage",
                    fields: {
                        globalDelMsgId: {
                            name: "globalDelMsgId",
                            type: s.g.string
                        },
                        ts: {
                            name: "ts",
                            type: s.g.string
                        },
                        expired: {
                            name: "expired",
                            type: s.g.integer
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        conversationId: {
                            name: "conversationId",
                            type: s.g.string
                        },
                        clientDelMsgId: {
                            name: "clientDelMsgId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "globalDelMsgId"
                            }],
                            unique: !0
                        },
                        expired: {
                            name: "expired",
                            fields: [{
                                type: "raw",
                                field: "expired"
                            }],
                            unique: !1
                        }
                    }
                },
                $e = new i.d(Ye),
                Qe = new i.d(Object(r.a)({}, Ye)),
                Xe = new i.d(Object(r.a)({}, Ye)),
                Ze = {
                    tableName: "e2ee_meta",
                    name: "E2eeMeta",
                    fields: {
                        identifier: {
                            name: "identifier",
                            type: s.g.string
                        },
                        devices: {
                            name: "devices",
                            type: s.g.json
                        },
                        errorInitAll: {
                            name: "errorInitAll",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        waiting: {
                            name: "waiting",
                            type: s.g.boolean,
                            nullable: !0
                        },
                        upgrading: {
                            name: "upgrading",
                            type: s.g.boolean,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "identifier"
                            }],
                            unique: !0
                        }
                    }
                },
                Je = new i.d(Ze),
                et = new i.d(Object(r.a)({}, Ze)),
                tt = new i.d(Object(r.a)({}, Ze)),
                nt = {
                    tableName: "e2ee_prekey",
                    name: "E2eePrekey",
                    fields: {
                        keyId: {
                            name: "keyId",
                            type: s.g.integer
                        },
                        keyPair: {
                            name: "keyPair",
                            type: s.g.json
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer,
                            nullable: !0
                        },
                        regId: {
                            name: "regId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "keyId"
                            }],
                            unique: !0
                        },
                        regId: {
                            name: "regId",
                            fields: [{
                                type: "raw",
                                field: "regId"
                            }],
                            unique: !1
                        }
                    }
                },
                rt = new i.d(nt),
                it = new i.d(Object(r.a)(Object(r.a)({}, nt), {}, {
                    migrations: {
                        55: {
                            version: 55,
                            scripts: [{
                                type: "add-column",
                                params: {
                                    columns: ["ts", "regId", "version"]
                                }
                            }, {
                                type: "create-index",
                                params: {
                                    indexName: "regId"
                                }
                            }]
                        }
                    }
                })),
                ot = new i.d(Object(r.a)({}, nt)),
                st = {
                    tableName: "e2ee_identity",
                    name: "E2eeIdentity",
                    fields: {
                        keyId: {
                            name: "keyId",
                            type: s.g.string
                        },
                        keyPair: {
                            name: "keyPair",
                            type: s.g.json
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer,
                            nullable: !0
                        },
                        regId: {
                            name: "regId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "keyId"
                            }],
                            unique: !0
                        }
                    }
                },
                at = new i.d(st),
                ct = new i.d(Object(r.a)(Object(r.a)({}, st), {}, {
                    migrations: {
                        55: {
                            version: 55,
                            scripts: [{
                                type: "create-table"
                            }]
                        }
                    }
                })),
                dt = new i.d(Object(r.a)({}, st)),
                ut = {
                    tableName: "e2ee_signed_prekey",
                    name: "E2eeSignedPrekey",
                    fields: {
                        keyId: {
                            name: "keyId",
                            type: s.g.integer
                        },
                        keyPair: {
                            name: "keyPair",
                            type: s.g.json
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer,
                            nullable: !0
                        },
                        regId: {
                            name: "regId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.integer,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "keyId"
                            }],
                            unique: !0
                        }
                    }
                },
                lt = new i.d(ut),
                pt = new i.d(Object(r.a)(Object(r.a)({}, ut), {}, {
                    migrations: {
                        55: {
                            version: 55,
                            scripts: [{
                                type: "create-table"
                            }]
                        }
                    }
                })),
                mt = new i.d(Object(r.a)({}, ut)),
                ht = {
                    tableName: "e2ee_group",
                    name: "E2eeGroup",
                    fields: {
                        id: {
                            name: "id",
                            type: s.g.string
                        },
                        sessions: {
                            name: "sessions",
                            type: s.g.json,
                            nullable: !0
                        },
                        sessionsInfo: {
                            name: "sessionsInfo",
                            type: s.g.json,
                            nullable: !0
                        },
                        enabledGroups: {
                            name: "enabledGroups",
                            type: s.g.json,
                            nullable: !0
                        },
                        refetchedUsers: {
                            name: "refetchedUsers",
                            type: s.g.json,
                            nullable: !0
                        },
                        rqdReinitGroups: {
                            name: "rqdReinitGroups",
                            type: s.g.json,
                            nullable: !0
                        },
                        rqdResetKey: {
                            name: "rqdResetKey",
                            type: s.g.json,
                            nullable: !0
                        },
                        staleUsers: {
                            name: "staleUsers",
                            type: s.g.json,
                            nullable: !0
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer,
                            nullable: !0
                        },
                        cipherId: {
                            name: "cipherId",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                ft = new i.d(ht),
                gt = new i.d(Object(r.a)(Object(r.a)({}, ht), {}, {
                    migrations: {
                        55: {
                            version: 55,
                            scripts: [{
                                type: "create-table"
                            }, {
                                type: "add-column",
                                params: {
                                    columns: ["cipherId", "rqdResetKey"]
                                }
                            }]
                        }
                    }
                })),
                yt = new i.d(Object(r.a)({}, ht)),
                _t = {
                    tableName: "e2ee_session",
                    name: "E2eeSession",
                    fields: {
                        identifier: {
                            name: "identifier",
                            type: s.g.string
                        },
                        record: {
                            name: "record",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "identifier"
                            }],
                            unique: !0
                        }
                    }
                },
                Et = new i.d(_t),
                bt = new i.d(Object(r.a)({}, _t)),
                It = new i.d(Object(r.a)({}, _t)),
                vt = {
                    tableName: "e2ee_hash",
                    name: "E2eeHash",
                    fields: {
                        sha256: {
                            name: "sha256",
                            type: s.g.string
                        },
                        ts: {
                            name: "ts",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "sha256"
                            }],
                            unique: !0
                        }
                    }
                },
                Tt = new i.d(vt),
                Ot = new i.d(Object(r.a)(Object(r.a)({}, vt), {}, {
                    migrations: {
                        53: {
                            version: 53,
                            scripts: [{
                                type: "create-table"
                            }]
                        }
                    }
                })),
                wt = new i.d(Object(r.a)({}, vt)),
                Pt = {
                    tableName: "quick_message",
                    name: "QuickMessage",
                    fields: {
                        id: {
                            name: "id",
                            type: s.g.integer
                        },
                        keyword: {
                            name: "keyword",
                            type: s.g.string
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        createdTime: {
                            name: "createdTime",
                            type: s.g.integer
                        },
                        lastModified: {
                            name: "lastModified",
                            type: s.g.integer
                        },
                        message: {
                            name: "message",
                            type: s.g.string
                        },
                        media: {
                            name: "media",
                            type: s.g.json,
                            nullable: !0
                        },
                        version: {
                            name: "version",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                St = new i.d(Pt),
                At = new i.d(Object(r.a)(Object(r.a)({}, Pt), {}, {
                    transforms: [new O.a(["message"])]
                })),
                Rt = new i.d(Object(r.a)({}, Pt)),
                Mt = {
                    tableName: "global_noiseid",
                    name: "GlobalNoiseid",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        globalId: {
                            name: "globalId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "globalId"
                            }],
                            unique: !0
                        }
                    }
                },
                Nt = new i.d(Mt),
                Ct = new i.d(Object(r.a)({}, Mt)),
                Dt = new i.d(Object(r.a)({}, Mt)),
                Lt = {
                    tableName: "uploaded_file_thumb",
                    name: "UploadFileThumb",
                    fields: {
                        checksum: {
                            name: "checksum",
                            type: s.g.string
                        },
                        url: {
                            name: "url",
                            type: s.g.string
                        },
                        dimension: {
                            name: "dimension",
                            type: s.g.json
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "checksum"
                            }],
                            unique: !0
                        }
                    }
                },
                Ut = new i.d(Lt),
                xt = new i.d(Object(r.a)({}, Lt)),
                kt = new i.d(Object(r.a)({}, Lt)),
                Bt = {
                    tableName: "group_notice",
                    name: "GroupNotice",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        color: {
                            name: "color",
                            type: s.g.integer
                        },
                        emoji: {
                            name: "emoji",
                            type: s.g.string,
                            nullable: !0
                        },
                        startTime: {
                            name: "startTime",
                            type: s.g.integer
                        },
                        duration: {
                            name: "duration",
                            type: s.g.integer
                        },
                        params: {
                            name: "params",
                            type: s.g.json
                        },
                        id: {
                            name: "id",
                            type: s.g.string
                        },
                        creatorId: {
                            name: "creatorId",
                            type: s.g.string
                        },
                        createTime: {
                            name: "createTime",
                            type: s.g.integer
                        },
                        editorId: {
                            name: "editorId",
                            type: s.g.string
                        },
                        editTime: {
                            name: "editTime",
                            type: s.g.integer
                        },
                        repeat: {
                            name: "repeat",
                            type: s.g.integer
                        },
                        action: {
                            name: "action",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "userId"
                            }],
                            unique: !0
                        }
                    }
                },
                jt = new i.d(Bt),
                Ft = new i.d(Object(r.a)({}, Bt)),
                Gt = new i.d(Object(r.a)({}, Bt)),
                qt = {
                    tableName: "product_db",
                    name: "ProductDb",
                    fields: {
                        price: {
                            name: "price",
                            type: s.g.string
                        },
                        description: {
                            name: "description",
                            type: s.g.string
                        },
                        product_id: {
                            name: "product_id",
                            type: s.g.string
                        },
                        product_name: {
                            name: "product_name",
                            type: s.g.string
                        },
                        currency_unit: {
                            name: "currency_unit",
                            type: s.g.string
                        },
                        product_photos: {
                            name: "product_photos",
                            type: s.g.json
                        },
                        create_time: {
                            name: "create_time",
                            type: s.g.integer
                        },
                        catalog_id: {
                            name: "catalog_id",
                            type: s.g.string
                        },
                        owner_id: {
                            name: "owner_id",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "product_id"
                            }],
                            unique: !0
                        }
                    }
                },
                Ht = new i.d(qt),
                zt = new i.d(Object(r.a)({}, qt)),
                Kt = new i.d(Object(r.a)({}, qt)),
                Wt = {
                    tableName: "catalog_db",
                    name: "CatalogDb",
                    fields: {
                        ownerId: {
                            name: "ownerId",
                            type: s.g.string
                        },
                        isDefault: {
                            name: "isDefault",
                            type: s.g.boolean
                        },
                        created_time: {
                            name: "created_time",
                            type: s.g.integer
                        },
                        catalog_id: {
                            name: "catalog_id",
                            type: s.g.string
                        },
                        catalog_name: {
                            name: "catalog_name",
                            type: s.g.string
                        },
                        version_catalog: {
                            name: "version_catalog",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "catalog_id"
                            }],
                            unique: !0
                        }
                    }
                },
                Vt = new i.d(Wt),
                Yt = new i.d(Object(r.a)({}, Wt)),
                $t = new i.d(Object(r.a)({}, Wt)),
                Qt = {
                    tableName: "preview_message",
                    name: "PreviewMsg",
                    fields: {
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        dName: {
                            name: "dName",
                            type: s.g.string
                        },
                        message: {
                            name: "message",
                            type: s.g.json
                        },
                        messageType: {
                            name: "messageType",
                            type: s.g.json
                        },
                        messageTime: {
                            name: "messageTime",
                            type: s.g.string
                        },
                        isGroup: {
                            name: "isGroup",
                            type: s.g.boolean
                        },
                        fromUid: {
                            name: "fromUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        toUid: {
                            name: "toUid",
                            type: s.g.string,
                            nullable: !0
                        },
                        urgencyLevel: {
                            name: "urgencyLevel",
                            type: s.g.integer,
                            nullable: !0
                        },
                        properties: {
                            name: "properties",
                            type: s.g.json,
                            nullable: !0
                        },
                        mentions: {
                            name: "mentions",
                            type: s.g.json,
                            nullable: !0
                        },
                        ttl: {
                            name: "ttl",
                            type: s.g.integer,
                            nullable: !0
                        },
                        cliMsgId: {
                            name: "cliMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        actionId: {
                            name: "actionId",
                            type: s.g.string,
                            nullable: !0
                        },
                        status: {
                            name: "status",
                            type: s.g.integer
                        },
                        substate: {
                            name: "substate",
                            type: s.g.integer,
                            nullable: !0
                        },
                        computedMessage: {
                            name: "computedMessage",
                            type: s.g.string,
                            nullable: !0
                        },
                        computedIcon: {
                            name: "computedIcon",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "convId"
                            }],
                            unique: !0
                        },
                        userId_sendDttm_msgId: {
                            name: "messageTime",
                            fields: [{
                                type: "raw",
                                field: "messageTime"
                            }],
                            unique: !1
                        }
                    }
                },
                Xt = new i.d(Qt),
                Zt = new i.d(Object(r.a)(Object(r.a)({}, Qt), {}, {
                    transforms: [new O.a(["message"])],
                    migrations: {
                        52: {
                            version: 52,
                            scripts: [{
                                type: "create-table"
                            }]
                        }
                    }
                })),
                Jt = new i.d(Object(r.a)({}, Qt)),
                en = {
                    tableName: "unread_conv",
                    name: "UnreadConv",
                    fields: {
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        smsUnreadCount: {
                            name: "smsUnreadCount",
                            type: s.g.integer
                        },
                        smsUnreadNotCount: {
                            name: "smsUnreadNotCount",
                            type: s.g.integer
                        },
                        mentionUnreadCount: {
                            name: "mentionUnreadCount",
                            type: s.g.integer
                        },
                        strangerUnreadCount: {
                            name: "strangerUnreadCount",
                            type: s.g.integer
                        },
                        lastProcessMsgId: {
                            name: "lastProcessMsgId",
                            type: s.g.string
                        },
                        lastSeenReactId: {
                            name: "lastSeenReactId",
                            type: s.g.string
                        },
                        unreadMark: {
                            name: "unreadMark",
                            type: s.g.json,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "convId"
                            }],
                            unique: !0
                        },
                        userId_sendDttm_msgId: {
                            name: "lastProcessMsgId",
                            fields: [{
                                type: "raw",
                                field: "lastProcessMsgId"
                            }],
                            unique: !1
                        }
                    }
                },
                tn = {
                    Avatar: d,
                    AvaHistory: m,
                    BoardSuggest: y,
                    CloudSegment: I,
                    Conversation: P,
                    DownloadRetry: M,
                    File: L,
                    Friend: B,
                    FriendsInfo: q,
                    Group: W,
                    GroupInfo: Q,
                    GroupTopics: ee,
                    Image: ie,
                    Label: ce,
                    Link: pe,
                    Mention: ge,
                    Message: Ie,
                    Notifications: we,
                    Poll: Re,
                    StarMessage: De,
                    Sticker: ke,
                    Todo: Ge,
                    Topic: Ke,
                    TTLMessage: $e,
                    E2eeMeta: Je,
                    E2eePrekey: rt,
                    E2eeSession: Et,
                    E2eeIdentity: at,
                    E2eeSignedPrekey: lt,
                    E2eeGroup: ft,
                    E2eeHash: Tt,
                    QuickMessage: St,
                    GlobalNoiseid: Nt,
                    UploadFileThumb: Ut,
                    GroupNotice: jt,
                    ProductDb: Ht,
                    CatalogDb: Vt,
                    PreviewMsg: Xt,
                    UnreadConv: new i.d(en)
                },
                nn = {
                    Avatar: u,
                    AvaHistory: h,
                    BoardSuggest: _,
                    CloudSegment: v,
                    Conversation: S,
                    DownloadRetry: N,
                    File: U,
                    Friend: j,
                    FriendsInfo: H,
                    Group: V,
                    GroupInfo: X,
                    GroupTopics: te,
                    Image: oe,
                    Label: de,
                    Link: me,
                    Mention: ye,
                    Message: ve,
                    Notifications: Pe,
                    Poll: Me,
                    StarMessage: Le,
                    Sticker: Be,
                    Todo: qe,
                    Topic: We,
                    TTLMessage: Qe,
                    E2eeMeta: et,
                    E2eePrekey: it,
                    E2eeSession: bt,
                    E2eeIdentity: ct,
                    E2eeSignedPrekey: pt,
                    E2eeGroup: gt,
                    E2eeHash: Ot,
                    QuickMessage: At,
                    GlobalNoiseid: Ct,
                    UploadFileThumb: xt,
                    GroupNotice: Ft,
                    ProductDb: zt,
                    CatalogDb: Yt,
                    PreviewMsg: Zt,
                    UnreadConv: new i.d(Object(r.a)(Object(r.a)({}, en), {}, {
                        migrations: {
                            52: {
                                version: 52,
                                scripts: [{
                                    type: "create-table"
                                }]
                            }
                        }
                    }))
                },
                rn = {
                    Avatar: l,
                    AvaHistory: f,
                    BoardSuggest: E,
                    CloudSegment: T,
                    Conversation: A,
                    DownloadRetry: C,
                    File: x,
                    Friend: F,
                    FriendsInfo: z,
                    Group: Y,
                    GroupInfo: Z,
                    GroupTopics: ne,
                    Image: se,
                    Label: ue,
                    Link: he,
                    Mention: _e,
                    Message: Te,
                    Notifications: Se,
                    Poll: Ne,
                    StarMessage: Ue,
                    Sticker: je,
                    Todo: He,
                    Topic: Ve,
                    TTLMessage: Xe,
                    E2eeMeta: tt,
                    E2eePrekey: ot,
                    E2eeSession: It,
                    E2eeIdentity: dt,
                    E2eeSignedPrekey: mt,
                    E2eeGroup: yt,
                    E2eeHash: wt,
                    QuickMessage: Rt,
                    GlobalNoiseid: Dt,
                    UploadFileThumb: kt,
                    GroupNotice: Gt,
                    ProductDb: Kt,
                    CatalogDb: $t,
                    PreviewMsg: Jt,
                    UnreadConv: new i.d(Object(r.a)({}, en))
                },
                on = {
                    name: "Core",
                    session: !0
                },
                sn = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("Core"), o.a.byTable()],
                    partitionsMap: Object(a.a)(rn)
                },
                an = {
                    partitionNamingStrategy: [o.a.const("zdb"), o.a.byUser()],
                    partitionsMap: Object(a.b)(nn)
                },
                cn = Object(r.a)(Object(r.a)(Object(r.a)({}, on), sn), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                dn = Object(r.a)(Object(r.a)(Object(r.a)({}, on), an), {}, {
                    version: 55,
                    milestoneVersion: 51,
                    type: s.a.IDB
                });
            let un = null,
                ln = null;
            t.a = {
                basicSchema: tn,
                get useSqlite() {
                    return null === un && (un = new i.a(cn)), un
                },
                get useIdb() {
                    return null === ln && (ln = new i.a(dn)), ln
                }
            }
        },
        oRuE: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.pad.Iso10126 = {
                pad: function(e, t) {
                    var n = 4 * t,
                        i = n - e.sigBytes % n;
                    e.concat(r.lib.WordArray.random(i - 1)).concat(r.lib.WordArray.create([i << 24], 1))
                },
                unpad: function(e) {
                    var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= t
                }
            }, r.pad.Iso10126)
        },
        ohhZ: function(e, t, n) {},
        oxjq: function(e, t, n) {
            "use strict";
            var r = /[|\\{}()[\]^$+*?.]/g;
            e.exports = function(e) {
                if ("string" != typeof e) throw new TypeError("Expected a string");
                return e.replace(r, "\\$&")
            }
        },
        pA7S: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("ETIr"), n("cv67"), n("K3mO"), n("OLod"), function() {
                var e = r,
                    t = e.lib,
                    n = t.WordArray,
                    i = t.BlockCipher,
                    o = e.algo,
                    s = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
                    a = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
                    c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
                    d = [{
                        0: 8421888,
                        268435456: 32768,
                        536870912: 8421378,
                        805306368: 2,
                        1073741824: 512,
                        1342177280: 8421890,
                        1610612736: 8389122,
                        1879048192: 8388608,
                        2147483648: 514,
                        2415919104: 8389120,
                        2684354560: 33280,
                        2952790016: 8421376,
                        3221225472: 32770,
                        3489660928: 8388610,
                        3758096384: 0,
                        4026531840: 33282,
                        134217728: 0,
                        402653184: 8421890,
                        671088640: 33282,
                        939524096: 32768,
                        1207959552: 8421888,
                        1476395008: 512,
                        1744830464: 8421378,
                        2013265920: 2,
                        2281701376: 8389120,
                        2550136832: 33280,
                        2818572288: 8421376,
                        3087007744: 8389122,
                        3355443200: 8388610,
                        3623878656: 32770,
                        3892314112: 514,
                        4160749568: 8388608,
                        1: 32768,
                        268435457: 2,
                        536870913: 8421888,
                        805306369: 8388608,
                        1073741825: 8421378,
                        1342177281: 33280,
                        1610612737: 512,
                        1879048193: 8389122,
                        2147483649: 8421890,
                        2415919105: 8421376,
                        2684354561: 8388610,
                        2952790017: 33282,
                        3221225473: 514,
                        3489660929: 8389120,
                        3758096385: 32770,
                        4026531841: 0,
                        134217729: 8421890,
                        402653185: 8421376,
                        671088641: 8388608,
                        939524097: 512,
                        1207959553: 32768,
                        1476395009: 8388610,
                        1744830465: 2,
                        2013265921: 33282,
                        2281701377: 32770,
                        2550136833: 8389122,
                        2818572289: 514,
                        3087007745: 8421888,
                        3355443201: 8389120,
                        3623878657: 0,
                        3892314113: 33280,
                        4160749569: 8421378
                    }, {
                        0: 1074282512,
                        16777216: 16384,
                        33554432: 524288,
                        50331648: 1074266128,
                        67108864: 1073741840,
                        83886080: 1074282496,
                        100663296: 1073758208,
                        117440512: 16,
                        134217728: 540672,
                        150994944: 1073758224,
                        167772160: 1073741824,
                        184549376: 540688,
                        201326592: 524304,
                        218103808: 0,
                        234881024: 16400,
                        251658240: 1074266112,
                        8388608: 1073758208,
                        25165824: 540688,
                        41943040: 16,
                        58720256: 1073758224,
                        75497472: 1074282512,
                        92274688: 1073741824,
                        109051904: 524288,
                        125829120: 1074266128,
                        142606336: 524304,
                        159383552: 0,
                        176160768: 16384,
                        192937984: 1074266112,
                        209715200: 1073741840,
                        226492416: 540672,
                        243269632: 1074282496,
                        260046848: 16400,
                        268435456: 0,
                        285212672: 1074266128,
                        301989888: 1073758224,
                        318767104: 1074282496,
                        335544320: 1074266112,
                        352321536: 16,
                        369098752: 540688,
                        385875968: 16384,
                        402653184: 16400,
                        419430400: 524288,
                        436207616: 524304,
                        452984832: 1073741840,
                        469762048: 540672,
                        486539264: 1073758208,
                        503316480: 1073741824,
                        520093696: 1074282512,
                        276824064: 540688,
                        293601280: 524288,
                        310378496: 1074266112,
                        327155712: 16384,
                        343932928: 1073758208,
                        360710144: 1074282512,
                        377487360: 16,
                        394264576: 1073741824,
                        411041792: 1074282496,
                        427819008: 1073741840,
                        444596224: 1073758224,
                        461373440: 524304,
                        478150656: 0,
                        494927872: 16400,
                        511705088: 1074266128,
                        528482304: 540672
                    }, {
                        0: 260,
                        1048576: 0,
                        2097152: 67109120,
                        3145728: 65796,
                        4194304: 65540,
                        5242880: 67108868,
                        6291456: 67174660,
                        7340032: 67174400,
                        8388608: 67108864,
                        9437184: 67174656,
                        10485760: 65792,
                        11534336: 67174404,
                        12582912: 67109124,
                        13631488: 65536,
                        14680064: 4,
                        15728640: 256,
                        524288: 67174656,
                        1572864: 67174404,
                        2621440: 0,
                        3670016: 67109120,
                        4718592: 67108868,
                        5767168: 65536,
                        6815744: 65540,
                        7864320: 260,
                        8912896: 4,
                        9961472: 256,
                        11010048: 67174400,
                        12058624: 65796,
                        13107200: 65792,
                        14155776: 67109124,
                        15204352: 67174660,
                        16252928: 67108864,
                        16777216: 67174656,
                        17825792: 65540,
                        18874368: 65536,
                        19922944: 67109120,
                        20971520: 256,
                        22020096: 67174660,
                        23068672: 67108868,
                        24117248: 0,
                        25165824: 67109124,
                        26214400: 67108864,
                        27262976: 4,
                        28311552: 65792,
                        29360128: 67174400,
                        30408704: 260,
                        31457280: 65796,
                        32505856: 67174404,
                        17301504: 67108864,
                        18350080: 260,
                        19398656: 67174656,
                        20447232: 0,
                        21495808: 65540,
                        22544384: 67109120,
                        23592960: 256,
                        24641536: 67174404,
                        25690112: 65536,
                        26738688: 67174660,
                        27787264: 65796,
                        28835840: 67108868,
                        29884416: 67109124,
                        30932992: 67174400,
                        31981568: 4,
                        33030144: 65792
                    }, {
                        0: 2151682048,
                        65536: 2147487808,
                        131072: 4198464,
                        196608: 2151677952,
                        262144: 0,
                        327680: 4198400,
                        393216: 2147483712,
                        458752: 4194368,
                        524288: 2147483648,
                        589824: 4194304,
                        655360: 64,
                        720896: 2147487744,
                        786432: 2151678016,
                        851968: 4160,
                        917504: 4096,
                        983040: 2151682112,
                        32768: 2147487808,
                        98304: 64,
                        163840: 2151678016,
                        229376: 2147487744,
                        294912: 4198400,
                        360448: 2151682112,
                        425984: 0,
                        491520: 2151677952,
                        557056: 4096,
                        622592: 2151682048,
                        688128: 4194304,
                        753664: 4160,
                        819200: 2147483648,
                        884736: 4194368,
                        950272: 4198464,
                        1015808: 2147483712,
                        1048576: 4194368,
                        1114112: 4198400,
                        1179648: 2147483712,
                        1245184: 0,
                        1310720: 4160,
                        1376256: 2151678016,
                        1441792: 2151682048,
                        1507328: 2147487808,
                        1572864: 2151682112,
                        1638400: 2147483648,
                        1703936: 2151677952,
                        1769472: 4198464,
                        1835008: 2147487744,
                        1900544: 4194304,
                        1966080: 64,
                        2031616: 4096,
                        1081344: 2151677952,
                        1146880: 2151682112,
                        1212416: 0,
                        1277952: 4198400,
                        1343488: 4194368,
                        1409024: 2147483648,
                        1474560: 2147487808,
                        1540096: 64,
                        1605632: 2147483712,
                        1671168: 4096,
                        1736704: 2147487744,
                        1802240: 2151678016,
                        1867776: 4160,
                        1933312: 2151682048,
                        1998848: 4194304,
                        2064384: 4198464
                    }, {
                        0: 128,
                        4096: 17039360,
                        8192: 262144,
                        12288: 536870912,
                        16384: 537133184,
                        20480: 16777344,
                        24576: 553648256,
                        28672: 262272,
                        32768: 16777216,
                        36864: 537133056,
                        40960: 536871040,
                        45056: 553910400,
                        49152: 553910272,
                        53248: 0,
                        57344: 17039488,
                        61440: 553648128,
                        2048: 17039488,
                        6144: 553648256,
                        10240: 128,
                        14336: 17039360,
                        18432: 262144,
                        22528: 537133184,
                        26624: 553910272,
                        30720: 536870912,
                        34816: 537133056,
                        38912: 0,
                        43008: 553910400,
                        47104: 16777344,
                        51200: 536871040,
                        55296: 553648128,
                        59392: 16777216,
                        63488: 262272,
                        65536: 262144,
                        69632: 128,
                        73728: 536870912,
                        77824: 553648256,
                        81920: 16777344,
                        86016: 553910272,
                        90112: 537133184,
                        94208: 16777216,
                        98304: 553910400,
                        102400: 553648128,
                        106496: 17039360,
                        110592: 537133056,
                        114688: 262272,
                        118784: 536871040,
                        122880: 0,
                        126976: 17039488,
                        67584: 553648256,
                        71680: 16777216,
                        75776: 17039360,
                        79872: 537133184,
                        83968: 536870912,
                        88064: 17039488,
                        92160: 128,
                        96256: 553910272,
                        100352: 262272,
                        104448: 553910400,
                        108544: 0,
                        112640: 553648128,
                        116736: 16777344,
                        120832: 262144,
                        124928: 537133056,
                        129024: 536871040
                    }, {
                        0: 268435464,
                        256: 8192,
                        512: 270532608,
                        768: 270540808,
                        1024: 268443648,
                        1280: 2097152,
                        1536: 2097160,
                        1792: 268435456,
                        2048: 0,
                        2304: 268443656,
                        2560: 2105344,
                        2816: 8,
                        3072: 270532616,
                        3328: 2105352,
                        3584: 8200,
                        3840: 270540800,
                        128: 270532608,
                        384: 270540808,
                        640: 8,
                        896: 2097152,
                        1152: 2105352,
                        1408: 268435464,
                        1664: 268443648,
                        1920: 8200,
                        2176: 2097160,
                        2432: 8192,
                        2688: 268443656,
                        2944: 270532616,
                        3200: 0,
                        3456: 270540800,
                        3712: 2105344,
                        3968: 268435456,
                        4096: 268443648,
                        4352: 270532616,
                        4608: 270540808,
                        4864: 8200,
                        5120: 2097152,
                        5376: 268435456,
                        5632: 268435464,
                        5888: 2105344,
                        6144: 2105352,
                        6400: 0,
                        6656: 8,
                        6912: 270532608,
                        7168: 8192,
                        7424: 268443656,
                        7680: 270540800,
                        7936: 2097160,
                        4224: 8,
                        4480: 2105344,
                        4736: 2097152,
                        4992: 268435464,
                        5248: 268443648,
                        5504: 8200,
                        5760: 270540808,
                        6016: 270532608,
                        6272: 270540800,
                        6528: 270532616,
                        6784: 8192,
                        7040: 2105352,
                        7296: 2097160,
                        7552: 0,
                        7808: 268435456,
                        8064: 268443656
                    }, {
                        0: 1048576,
                        16: 33555457,
                        32: 1024,
                        48: 1049601,
                        64: 34604033,
                        80: 0,
                        96: 1,
                        112: 34603009,
                        128: 33555456,
                        144: 1048577,
                        160: 33554433,
                        176: 34604032,
                        192: 34603008,
                        208: 1025,
                        224: 1049600,
                        240: 33554432,
                        8: 34603009,
                        24: 0,
                        40: 33555457,
                        56: 34604032,
                        72: 1048576,
                        88: 33554433,
                        104: 33554432,
                        120: 1025,
                        136: 1049601,
                        152: 33555456,
                        168: 34603008,
                        184: 1048577,
                        200: 1024,
                        216: 34604033,
                        232: 1,
                        248: 1049600,
                        256: 33554432,
                        272: 1048576,
                        288: 33555457,
                        304: 34603009,
                        320: 1048577,
                        336: 33555456,
                        352: 34604032,
                        368: 1049601,
                        384: 1025,
                        400: 34604033,
                        416: 1049600,
                        432: 1,
                        448: 0,
                        464: 34603008,
                        480: 33554433,
                        496: 1024,
                        264: 1049600,
                        280: 33555457,
                        296: 34603009,
                        312: 1,
                        328: 33554432,
                        344: 1048576,
                        360: 1025,
                        376: 34604032,
                        392: 33554433,
                        408: 34603008,
                        424: 0,
                        440: 34604033,
                        456: 1049601,
                        472: 1024,
                        488: 33555456,
                        504: 1048577
                    }, {
                        0: 134219808,
                        1: 131072,
                        2: 134217728,
                        3: 32,
                        4: 131104,
                        5: 134350880,
                        6: 134350848,
                        7: 2048,
                        8: 134348800,
                        9: 134219776,
                        10: 133120,
                        11: 134348832,
                        12: 2080,
                        13: 0,
                        14: 134217760,
                        15: 133152,
                        2147483648: 2048,
                        2147483649: 134350880,
                        2147483650: 134219808,
                        2147483651: 134217728,
                        2147483652: 134348800,
                        2147483653: 133120,
                        2147483654: 133152,
                        2147483655: 32,
                        2147483656: 134217760,
                        2147483657: 2080,
                        2147483658: 131104,
                        2147483659: 134350848,
                        2147483660: 0,
                        2147483661: 134348832,
                        2147483662: 134219776,
                        2147483663: 131072,
                        16: 133152,
                        17: 134350848,
                        18: 32,
                        19: 2048,
                        20: 134219776,
                        21: 134217760,
                        22: 134348832,
                        23: 131072,
                        24: 0,
                        25: 131104,
                        26: 134348800,
                        27: 134219808,
                        28: 134350880,
                        29: 133120,
                        30: 2080,
                        31: 134217728,
                        2147483664: 131072,
                        2147483665: 2048,
                        2147483666: 134348832,
                        2147483667: 133152,
                        2147483668: 32,
                        2147483669: 134348800,
                        2147483670: 134217728,
                        2147483671: 134219808,
                        2147483672: 134350880,
                        2147483673: 134217760,
                        2147483674: 134219776,
                        2147483675: 0,
                        2147483676: 133120,
                        2147483677: 2080,
                        2147483678: 131104,
                        2147483679: 134350848
                    }],
                    u = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
                    l = o.DES = i.extend({
                        _doReset: function() {
                            for (var e = this._key.words, t = [], n = 0; n < 56; n++) {
                                var r = s[n] - 1;
                                t[n] = e[r >>> 5] >>> 31 - r % 32 & 1
                            }
                            for (var i = this._subKeys = [], o = 0; o < 16; o++) {
                                var d = i[o] = [],
                                    u = c[o];
                                for (n = 0; n < 24; n++) d[n / 6 | 0] |= t[(a[n] - 1 + u) % 28] << 31 - n % 6, d[4 + (n / 6 | 0)] |= t[28 + (a[n + 24] - 1 + u) % 28] << 31 - n % 6;
                                for (d[0] = d[0] << 1 | d[0] >>> 31, n = 1; n < 7; n++) d[n] = d[n] >>> 4 * (n - 1) + 3;
                                d[7] = d[7] << 5 | d[7] >>> 27
                            }
                            var l = this._invSubKeys = [];
                            for (n = 0; n < 16; n++) l[n] = i[15 - n]
                        },
                        encryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._subKeys)
                        },
                        decryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._invSubKeys)
                        },
                        _doCryptBlock: function(e, t, n) {
                            this._lBlock = e[t], this._rBlock = e[t + 1], p.call(this, 4, 252645135), p.call(this, 16, 65535), m.call(this, 2, 858993459), m.call(this, 8, 16711935), p.call(this, 1, 1431655765);
                            for (var r = 0; r < 16; r++) {
                                for (var i = n[r], o = this._lBlock, s = this._rBlock, a = 0, c = 0; c < 8; c++) a |= d[c][((s ^ i[c]) & u[c]) >>> 0];
                                this._lBlock = s, this._rBlock = o ^ a
                            }
                            var l = this._lBlock;
                            this._lBlock = this._rBlock, this._rBlock = l, p.call(this, 1, 1431655765), m.call(this, 8, 16711935), m.call(this, 2, 858993459), p.call(this, 16, 65535), p.call(this, 4, 252645135), e[t] = this._lBlock, e[t + 1] = this._rBlock
                        },
                        keySize: 2,
                        ivSize: 2,
                        blockSize: 2
                    });

                function p(e, t) {
                    var n = (this._lBlock >>> e ^ this._rBlock) & t;
                    this._rBlock ^= n, this._lBlock ^= n << e
                }

                function m(e, t) {
                    var n = (this._rBlock >>> e ^ this._lBlock) & t;
                    this._lBlock ^= n, this._rBlock ^= n << e
                }
                e.DES = i._createHelper(l);
                var h = o.TripleDES = i.extend({
                    _doReset: function() {
                        var e = this._key.words;
                        this._des1 = l.createEncryptor(n.create(e.slice(0, 2))), this._des2 = l.createEncryptor(n.create(e.slice(2, 4))), this._des3 = l.createEncryptor(n.create(e.slice(4, 6)))
                    },
                    encryptBlock: function(e, t) {
                        this._des1.encryptBlock(e, t), this._des2.decryptBlock(e, t), this._des3.encryptBlock(e, t)
                    },
                    decryptBlock: function(e, t) {
                        this._des3.decryptBlock(e, t), this._des2.encryptBlock(e, t), this._des1.decryptBlock(e, t)
                    },
                    keySize: 6,
                    ivSize: 2,
                    blockSize: 2
                });
                e.TripleDES = i._createHelper(h)
            }(), r.TripleDES)
        },
        pAGP: function(e, t, n) {
            "use strict";
            n("jvA1");
            var r = n("qcQX");
            n.d(t, "TableConfig", (function() {
                return r.b
            }));
            n("TTNl"), n("qAG0"), n("Ro2z"), n("Cede"), n("Ugdv"), n("ADPh"), n("JMlY"), n("Abi4")
        },
        pCEo: function(e, t, n) {
            var r = n("Y4yM"),
                i = n("GHVm");
            e.exports = function(e) {
                return r(i(e))
            }
        },
        pMzR: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("rCOr"),
                o = n("uS0h"),
                s = n("PvD+");

            function a(e, t, n, o) {
                i.assertEnoughData(e, t, n + o);
                const a = s.slice(e, t + n, t + n + o);
                return new r.Token(r.Type.bytes, a, n + o)
            }

            function c(e) {
                return void 0 === e.encodedBytes && (e.encodedBytes = e.type === r.Type.string ? s.fromString(e.value) : e.value), e.encodedBytes
            }

            function d(e, t) {
                const n = c(t);
                o.encodeUintValue(e, t.type.majorEncoded, n.length), e.push(n)
            }

            function u(e, t) {
                return e.length < t.length ? -1 : e.length > t.length ? 1 : s.compare(e, t)
            }
            d.encodedSize = function(e) {
                const t = c(e);
                return o.encodeUintValue.encodedSize(t.length) + t.length
            }, d.compareTokens = function(e, t) {
                return u(c(e), c(t))
            }, t.compareBytes = u, t.decodeBytes16 = function(e, t, n, r) {
                return a(e, t, 3, o.readUint16(e, t + 1, r))
            }, t.decodeBytes32 = function(e, t, n, r) {
                return a(e, t, 5, o.readUint32(e, t + 1, r))
            }, t.decodeBytes64 = function(e, t, n, r) {
                const s = o.readUint64(e, t + 1, r);
                if ("bigint" == typeof s) throw new Error(`${i.decodeErrPrefix} 64-bit integer bytes lengths not supported`);
                return a(e, t, 9, s)
            }, t.decodeBytes8 = function(e, t, n, r) {
                return a(e, t, 2, o.readUint8(e, t + 1, r))
            }, t.decodeBytesCompact = function(e, t, n, r) {
                return a(e, t, 1, n)
            }, t.encodeBytes = d
        },
        pP8i: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv"),
                c = n("wH4e"),
                d = n("pAGP"),
                u = n("fsQs");
            const l = {
                    tableName: "pages",
                    name: "Pages",
                    fields: {
                        id: {
                            name: "id",
                            type: c.ValidDataType.integer
                        },
                        mtime: {
                            name: "mtime",
                            type: c.ValidDataType.integer
                        },
                        data: {
                            name: "data",
                            type: c.ValidDataType.blob,
                            nullable: !0
                        },
                        curoffs: {
                            name: "curoffs",
                            type: c.ValidDataType.integer,
                            default: 0
                        },
                        max: {
                            name: "max",
                            type: c.ValidDataType.integer,
                            default: 250 * u.h
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                p = new d.TableConfig(l),
                m = new d.TableConfig(Object(r.a)({}, l)),
                h = new d.TableConfig(Object(r.a)({}, l)),
                f = {
                    tableName: "metas",
                    name: "Metas",
                    fields: {
                        id: {
                            name: "id",
                            type: c.ValidDataType.integer
                        },
                        current: {
                            name: "current",
                            type: c.ValidDataType.integer,
                            default: 0
                        },
                        startups: {
                            name: "startups",
                            type: c.ValidDataType.json,
                            default: [],
                            nullable: !0
                        },
                        currentPage: {
                            name: "currentPage",
                            type: c.ValidDataType.integer,
                            default: 0
                        },
                        ss: {
                            name: "ss",
                            type: c.ValidDataType.integer,
                            default: -1
                        },
                        ss_ln: {
                            name: "ss_ln",
                            type: c.ValidDataType.integer,
                            default: -1
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "id"
                            }],
                            unique: !0
                        }
                    }
                },
                g = new d.TableConfig(f),
                y = new d.TableConfig(Object(r.a)({}, f)),
                _ = new d.TableConfig(Object(r.a)({}, f)),
                E = {
                    tableName: "modules",
                    name: "Modules",
                    fields: {
                        id: {
                            name: "id",
                            type: c.ValidDataType.integer
                        },
                        hash: {
                            name: "hash",
                            type: c.ValidDataType.string
                        },
                        encver: {
                            name: "encver",
                            type: c.ValidDataType.integer,
                            default: u.o
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "hash"
                            }],
                            unique: !0
                        }
                    }
                },
                b = {
                    Pages: p,
                    Metas: g,
                    Modules: new d.TableConfig(E)
                },
                I = {
                    Pages: m,
                    Metas: y,
                    Modules: new d.TableConfig(Object(r.a)({}, E))
                },
                v = {
                    Pages: h,
                    Metas: _,
                    Modules: new d.TableConfig(Object(r.a)({}, E))
                },
                T = {
                    name: "ZLog",
                    session: !1
                },
                O = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.const("ZLog"), o.a.byTable()],
                    partitionsMap: Object(a.a)(v)
                },
                w = {
                    partitionNamingStrategy: [o.a.const("zdb_log")],
                    partitionsMap: Object(a.b)(I)
                },
                P = Object(r.a)(Object(r.a)(Object(r.a)({}, T), O), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                S = Object(r.a)(Object(r.a)(Object(r.a)({}, T), w), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.IDB
                });
            let A = null,
                R = null;
            t.a = {
                basicSchema: b,
                get useSqlite() {
                    return null === A && (A = new i.a(P)), A
                },
                get useIdb() {
                    return null === R && (R = new i.a(S)), R
                }
            }
        },
        pRxM: function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "effect_res",
                    name: "EffectRes",
                    fields: {
                        icon: {
                            name: "icon",
                            type: s.g.string
                        },
                        iconBlob: {
                            name: "iconBlob",
                            type: s.g.blob
                        },
                        genDate: {
                            name: "genDate",
                            type: s.g.integer
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "icon"
                            }],
                            unique: !0
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "live_emoji",
                    name: "LiveEmoji",
                    fields: {
                        rType: {
                            name: "rType",
                            type: s.g.integer
                        },
                        rIcon: {
                            name: "rIcon",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "rType"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p)),
                g = {
                    tableName: "reaction",
                    name: "Reaction",
                    fields: {
                        idTo: {
                            name: "idTo",
                            type: s.g.string
                        },
                        msgType: {
                            name: "msgType",
                            type: s.g.string
                        },
                        rClientMsgId: {
                            name: "rClientMsgId",
                            type: s.g.integer
                        },
                        rMsgId: {
                            name: "rMsgId",
                            type: s.g.string
                        },
                        rMsgType: {
                            name: "rMsgType",
                            type: s.g.integer,
                            nullable: !0
                        },
                        currentIcon: {
                            name: "currentIcon",
                            type: s.g.integer
                        },
                        reactions: {
                            name: "reactions",
                            type: s.g.json,
                            nullable: !0
                        },
                        lastSender: {
                            name: "lastSender",
                            type: s.g.string,
                            nullable: !0
                        },
                        lastUpdate: {
                            name: "lastUpdate",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastReceiveReactId: {
                            name: "lastReceiveReactId",
                            type: s.g.integer,
                            nullable: !0
                        },
                        lastReactIcon: {
                            name: "lastReactIcon",
                            type: s.g.integer,
                            nullable: !0
                        },
                        ts: {
                            name: "ts",
                            type: s.g.string,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "rMsgId"
                            }],
                            unique: !0
                        }
                    }
                },
                y = new i.d(g),
                _ = new i.d(Object(r.a)({}, g)),
                E = new i.d(Object(r.a)({}, g)),
                b = {
                    tableName: "unread_react",
                    name: "UnreadReact",
                    fields: {
                        userId: {
                            name: "userId",
                            type: s.g.string
                        },
                        conversationId: {
                            name: "conversationId",
                            type: s.g.string
                        },
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        reactIcon: {
                            name: "reactIcon",
                            type: s.g.string
                        },
                        reactionId: {
                            name: "reactionId",
                            type: s.g.string
                        },
                        reactionCliId: {
                            name: "reactionCliId",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "conversationId"
                            }],
                            unique: !0
                        }
                    }
                },
                I = {
                    EffectRes: d,
                    LiveEmoji: m,
                    Reaction: y,
                    UnreadReact: new i.d(b)
                },
                v = {
                    EffectRes: u,
                    LiveEmoji: h,
                    Reaction: _,
                    UnreadReact: new i.d(Object(r.a)({}, b))
                },
                T = {
                    EffectRes: l,
                    LiveEmoji: f,
                    Reaction: E,
                    UnreadReact: new i.d(Object(r.a)({}, b))
                },
                O = {
                    name: "Reaction",
                    session: !0
                },
                w = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("Reaction"), o.a.byTable()],
                    partitionsMap: Object(a.a)(T)
                },
                P = {
                    partitionNamingStrategy: [o.a.const("r_db"), o.a.byUser()],
                    partitionsMap: Object(a.b)(v)
                },
                S = Object(r.a)(Object(r.a)(Object(r.a)({}, O), w), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                A = Object(r.a)(Object(r.a)(Object(r.a)({}, O), P), {}, {
                    version: 4,
                    milestoneVersion: 4,
                    type: s.a.IDB
                });
            let R = null,
                M = null;
            t.a = {
                basicSchema: I,
                get useSqlite() {
                    return null === R && (R = new i.a(S)), R
                },
                get useIdb() {
                    return null === M && (M = new i.a(A)), M
                }
            }
        },
        pSRY: function(e, t, n) {
            var r = n("QkVE");
            e.exports = function(e) {
                return r(this, e).has(e)
            }
        },
        pevS: function(e, t, n) {
            "use strict";
            var r = n("OsYe"),
                i = n("RLqH").f,
                o = n("oOVA"),
                s = n("dktu"),
                a = n("ZBQp"),
                c = n("AnMC"),
                d = n("eOcF"),
                u = function(e) {
                    var t = function(t, n, r) {
                        if (this instanceof e) {
                            switch (arguments.length) {
                                case 0:
                                    return new e;
                                case 1:
                                    return new e(t);
                                case 2:
                                    return new e(t, n)
                            }
                            return new e(t, n, r)
                        }
                        return e.apply(this, arguments)
                    };
                    return t.prototype = e.prototype, t
                };
            e.exports = function(e, t) {
                var n, l, p, m, h, f, g, y, _ = e.target,
                    E = e.global,
                    b = e.stat,
                    I = e.proto,
                    v = E ? r : b ? r[_] : (r[_] || {}).prototype,
                    T = E ? s : s[_] || (s[_] = {}),
                    O = T.prototype;
                for (p in t) n = !o(E ? p : _ + (b ? "." : "#") + p, e.forced) && v && d(v, p), h = T[p], n && (f = e.noTargetGet ? (y = i(v, p)) && y.value : v[p]), m = n && f ? f : t[p], n && typeof h == typeof m || (g = e.bind && n ? a(m, r) : e.wrap && n ? u(m) : I && "function" == typeof m ? a(Function.call, m) : m, (e.sham || m && m.sham || h && h.sham) && c(g, "sham", !0), T[p] = g, I && (d(s, l = _ + "Prototype") || c(s, l, {}), s[l][p] = m, e.real && O && !O[p] && c(O, p, m)))
            }
        },
        pjo1: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            }));
            var r = n("jDHv");
            const i = Object(r.define)("database-client")
        },
        qAG0: function(e, t, n) {
            "use strict";
            n("ZICu"), n("KiFO"), n("k6Bk")
        },
        qBft: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.pad.AnsiX923 = {
                pad: function(e, t) {
                    var n = e.sigBytes,
                        r = 4 * t,
                        i = r - n % r,
                        o = n + i - 1;
                    e.clamp(), e.words[o >>> 2] |= i << 24 - o % 4 * 8, e.sigBytes += i
                },
                unpad: function(e) {
                    var t = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= t
                }
            }, r.pad.Ansix923)
        },
        qM6L: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), function() {
                var e = r,
                    t = e.lib.WordArray,
                    n = e.enc;

                function i(e) {
                    return e << 8 & 4278255360 | e >>> 8 & 16711935
                }
                n.Utf16 = n.Utf16BE = {
                    stringify: function(e) {
                        for (var t = e.words, n = e.sigBytes, r = [], i = 0; i < n; i += 2) {
                            var o = t[i >>> 2] >>> 16 - i % 4 * 8 & 65535;
                            r.push(String.fromCharCode(o))
                        }
                        return r.join("")
                    },
                    parse: function(e) {
                        for (var n = e.length, r = [], i = 0; i < n; i++) r[i >>> 1] |= e.charCodeAt(i) << 16 - i % 2 * 16;
                        return t.create(r, 2 * n)
                    }
                }, n.Utf16LE = {
                    stringify: function(e) {
                        for (var t = e.words, n = e.sigBytes, r = [], o = 0; o < n; o += 2) {
                            var s = i(t[o >>> 2] >>> 16 - o % 4 * 8 & 65535);
                            r.push(String.fromCharCode(s))
                        }
                        return r.join("")
                    },
                    parse: function(e) {
                        for (var n = e.length, r = [], o = 0; o < n; o++) r[o >>> 1] |= i(e.charCodeAt(o) << 16 - o % 2 * 16);
                        return t.create(r, 2 * n)
                    }
                }
            }(), r.enc.Utf16)
        },
        qcQX: function(e, t, n) {
            "use strict";
            var r = n("teaq");
            n.d(t, "a", (function() {
                return r.a
            })), n.d(t, "b", (function() {
                return r.d
            }))
        },
        qu8F: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.mode.CTRGladman = function() {
                var e = r.lib.BlockCipherMode.extend();

                function t(e) {
                    if (255 == (e >> 24 & 255)) {
                        var t = e >> 16 & 255,
                            n = e >> 8 & 255,
                            r = 255 & e;
                        255 === t ? (t = 0, 255 === n ? (n = 0, 255 === r ? r = 0 : ++r) : ++n) : ++t, e = 0, e += t << 16, e += n << 8, e += r
                    } else e += 1 << 24;
                    return e
                }

                function n(e) {
                    return 0 === (e[0] = t(e[0])) && (e[1] = t(e[1])), e
                }
                var i = e.Encryptor = e.extend({
                    processBlock: function(e, t) {
                        var r = this._cipher,
                            i = r.blockSize,
                            o = this._iv,
                            s = this._counter;
                        o && (s = this._counter = o.slice(0), this._iv = void 0), n(s);
                        var a = s.slice(0);
                        r.encryptBlock(a, 0);
                        for (var c = 0; c < i; c++) e[t + c] ^= a[c]
                    }
                });
                return e.Decryptor = i, e
            }(), r.mode.CTRGladman)
        },
        rCOr: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            const r = "CBOR decode error:",
                i = [];
            i[23] = 1, i[24] = 2, i[25] = 3, i[26] = 5, i[27] = 9, t.assertEnoughData = function(e, t, n) {
                if (e.length - t < n) throw new Error("CBOR decode error: not enough data for type")
            }, t.decodeErrPrefix = r, t.encodeErrPrefix = "CBOR encode error:", t.uintMinorPrefixBytes = i
        },
        rFEu: function(e, t, n) {
            "use strict";
            n.d(t, "d", (function() {
                return P
            })), n.d(t, "c", (function() {
                return S
            })), n.d(t, "f", (function() {
                return A
            })), n.d(t, "b", (function() {
                return M
            })), n.d(t, "e", (function() {
                return C
            })), n.d(t, "a", (function() {
                return w
            }));
            class r {
                constructor() {
                    this.name = void 0, this.checkingMode = void 0, this.points = void 0
                }
            }
            class i {}
            class o extends r {
                constructor(e) {
                    super(), this.name = void 0, this.checkingMode = void 0, this.points = void 0, this.name = e.name, this.checkingMode = e.checkingMode || o.DEFAULT_CHECKING_MODE, this.points = e.points
                }
            }
            o.DEFAULT_CHECKING_MODE = "sequential";
            var s = o;
            class a {
                constructor(e) {
                    this.version = void 0, this.version = (null == e ? void 0 : e.version) || a.DEFAULT_VERSION
                }
            }
            a.DEFAULT_VERSION = 1;
            var c = a;
            var d = class extends c {
                constructor(e) {
                    super(e), this.name = void 0, this.condition = void 0, this.qos = void 0, this.points = void 0, this.disabled = void 0, this.name = e.name, this.condition = e.condition, this.qos = e.qos, this.points = e.points, this.disabled = e.disabled
                }
            };
            var u = class extends i {
                constructor() {
                    super(), this.statements = void 0;
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    this.statements = t
                }
                getAll() {
                    return this.statements
                }
            };
            var l = class extends c {
                    constructor(e) {
                        super(e), this.metrics = void 0, e.metrics.length && (this.metrics = e.metrics)
                    }
                    getMetrics() {
                        return this.metrics || []
                    }
                },
                p = n("AoYG");
            var m = class extends c {
                constructor(e) {
                    super(e), this.name = void 0, this.type = void 0, this.features = void 0, this.categories = void 0, this.fromProcess = void 0, this.startFromEpoch = void 0, this.showStackTrace = void 0, this.statement = void 0, this.disabled = void 0, this.mode = void 0, this.name = e.name, this.type = e.type || p.a.TIME, this.features = e.features, this.categories = e.categories, this.fromProcess = e.fromProcess, this.startFromEpoch = e.startFromEpoch, this.showStackTrace = e.showStackTrace, this.disabled = e.disabled, this.mode = e.mode, e.statement instanceof i ? this.statement = e.statement : e.statement instanceof r && (this.statement = I.StatementGroup(e.statement))
                }
            };
            var h = class extends c {
                constructor(e) {
                    super(), this.schemas = void 0, this.schemas = new Map(Object.entries(e))
                }
                getSchemas() {
                    return this.schemas ? Array.from(this.schemas.values()) : []
                }
            };
            var f = class extends m {
                constructor(e) {
                    super(e), this.timeline = void 0, this.type = p.a.MEMORY, this.timeline = e.timeline
                }
            };
            var g = class extends m {
                constructor(e) {
                    super(e), this.timeline = void 0, this.type = p.a.CPU, this.timeline = e.timeline
                }
            };
            var y = class extends m {
                constructor(e) {
                    super(e), this.timeout = void 0, this.type = p.a.FPS, this.timeout = e.timeout
                }
            };
            const _ = function(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                return new e(...n)
            };
            var E = class extends c {
                constructor() {
                    super(), this.timeNodes = void 0;
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    this.timeNodes = (t || []).map((e => ({
                        time: e
                    })))
                }
            };
            class b {
                constructor() {}
            }
            b.SchemaGroup = e => _(h, e), b.Schema = e => _(l, e), b.Metric = e => _(m, "string" == typeof e ? {
                name: e
            } : e), b.MetricMemory = e => _(f, e), b.MetricCPU = e => _(g, e), b.MetricFps = e => _(y, e), b.Statement = e => _(s, e), b.StatPoint = e => _(d, e), b.StatementGroup = function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                return _(u, ...t)
            }, b.Timeline = function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                return _(E, ...t)
            };
            var I = b,
                v = n("dFSO");
            let T;
            var O;
            (O = T || (T = {})).time = v.g, O.bytes = v.a, O.notNil = e => !Object(v.b)(e), O.extractCPUUsage = e => {
                var t, n, r;
                return null === (t = e.data) || void 0 === t || null === (n = t.usage) || void 0 === n || null === (r = n.cpu) || void 0 === r ? void 0 : r.percent
            }, O.extractHeapUsed = e => {
                var t, n, r;
                return null === (t = e.data) || void 0 === t || null === (n = t.usage) || void 0 === n || null === (r = n.memory) || void 0 === r ? void 0 : r.heapUsed
            }, O.extractPassedTime = e => {
                var t;
                return null === (t = e.data) || void 0 === t ? void 0 : t.passedTime
            }, O.extractRAM = e => {
                var t;
                return null === (t = e.systemInfo) || void 0 === t ? void 0 : t.totalMem
            }, O.isM1 = e => {
                var t, n;
                return "arm" === (null == e || null === (t = e.systemInfo) || void 0 === t ? void 0 : t.arch) || "arm64" === (null == e || null === (n = e.systemInfo) || void 0 === n ? void 0 : n.arch)
            };
            var w = T;
            const P = I.SchemaGroup,
                S = I.Schema,
                A = I.Timeline,
                R = I.Metric;
            R.Memory = I.MetricMemory, R.CPU = I.MetricCPU, R.Fps = I.MetricFps;
            const M = R,
                N = I.Statement;
            N.Group = I.StatementGroup, N.Point = I.StatPoint;
            const C = N
        },
        rQsU: function(e, t, n) {
            "use strict";
            n.d(t, "d", (function() {
                return i
            })), n.d(t, "c", (function() {
                return o
            })), n.d(t, "a", (function() {
                return s
            })), n.d(t, "b", (function() {
                return a
            }));
            var r = n("jDHv");
            let i, o;
            ! function(e) {
                e[e.ALL = 0] = "ALL", e[e.UNREAD = 1] = "UNREAD", e[e.STRANGER = 2] = "STRANGER", e[e.FOCUSED = 3] = "FOCUSED", e[e.ARCHIVED = 4] = "ARCHIVED", e[e.NONE = -1] = "NONE"
            }(i || (i = {})),
            function(e) {
                e[e.ALL = 0] = "ALL", e[e.UNREAD = 1] = "UNREAD"
            }(o || (o = {}));
            const s = "convlist-controller",
                a = Object(r.define)(s)
        },
        "rdC+": function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "async-store",
                    name: "AsyncStore",
                    fields: {
                        key: {
                            name: "key",
                            type: s.g.string
                        },
                        val: {
                            name: "val",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "key"
                            }],
                            unique: !0
                        }
                    }
                },
                d = {
                    AsyncStore: new i.d(c)
                },
                u = {
                    AsyncStore: new i.d(Object(r.a)({}, c))
                },
                l = {
                    AsyncStore: new i.d(Object(r.a)({}, c))
                },
                p = {
                    name: "SecureLocalstorage",
                    session: !0
                },
                m = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("SecureLocalstorage"), o.a.byTable()],
                    partitionsMap: Object(a.a)(l)
                },
                h = {
                    partitionNamingStrategy: [o.a.const("zsecure-localstorage")],
                    partitionsMap: Object(a.b)(u)
                },
                f = Object(r.a)(Object(r.a)(Object(r.a)({}, p), m), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                g = Object(r.a)(Object(r.a)(Object(r.a)({}, p), h), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.IDB
                });
            let y = null,
                _ = null;
            t.a = {
                basicSchema: d,
                get useSqlite() {
                    return null === y && (y = new i.a(f)), y
                },
                get useIdb() {
                    return null === _ && (_ = new i.a(g)), _
                }
            }
        },
        rhBN: function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("UK4g"),
                s = n("YEoC"),
                a = n("DI/x"),
                c = n("tHMN"),
                d = n("LzQZ");
            let u = i.ModuleContainer.injectable()(r = function(e, t) {
                return i.ModuleContainer.inject(c.b)(e, void 0, 0)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === c.b ? Object : c.b])(r = class {
                constructor(e) {
                    this.engine = e, this.currentId = 1, this.transactions = void 0, this.transactions = new Map
                }
                get(e) {
                    const t = this.transactions.get(e);
                    if (!t) throw new a.h("The transaction has already committed!");
                    return t
                }
                async beginTransaction(e, t, n) {
                    const r = this.currentId++,
                        i = new Error,
                        a = await this.engine.do({
                            type: s.d.BeginTransaction,
                            database: e,
                            table: t[0],
                            transaction: r,
                            priority: s.c.BLOCKING,
                            retry: o.i,
                            timing: {},
                            meta: {
                                step: -1,
                                timeout: o.k,
                                error: i
                            },
                            params: {
                                tables: t,
                                mode: n
                            },
                            trace: () => {}
                        });
                    return this.transactions.set(r, a), a
                }
                commitTransaction(e) {
                    const t = this.transactions.get(e);
                    return !t || t.closed ? (t && this.transactions.delete(e), Promise.resolve()) : new Promise(((n, r) => {
                        t.onClose((() => {
                            this.transactions.delete(e), t.error ? r(t.error) : n()
                        }))
                    }))
                }
                waitUntilIdle() {
                    if (0 === this.transactions.size) return Promise.resolve();
                    const e = Array.from(this.transactions.values());
                    return new Promise((t => {
                        e.forEach((n => {
                            n.onClose((() => {
                                e.every((e => e.closed)) && t()
                            }))
                        }))
                    }))
                }
            }) || r) || r) || r) || r;
            i.ModuleContainer.registerSingleton(d.a, u)
        },
        rkiK: function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return r.b
            })), n.d(t, "a", (function() {
                return r.a
            })), n.d(t, "d", (function() {
                return d
            })), n.d(t, "c", (function() {
                return u
            }));
            n("cfqX");
            var r = n("fbdB"),
                i = n("N1xz"),
                o = n("KBA3"),
                s = n("CHYU");
            const a = {
                    start: (e, t) => i.a.MetricManager.start(e, t),
                    end: (e, t, n) => i.a.MetricManager.end(e, t, n),
                    record: e => i.a.MetricManager.record(e)
                },
                c = {
                    Fps: {
                        record: (e, t) => i.a.UIManager.startRecordSectionFps(e, t),
                        endRecord: (e, t, n) => i.a.UIManager.endRecordSectionFps(e, t, n)
                    }
                },
                d = {
                    mergeSetting: e => {
                        o.a.mergeSetting(e)
                    },
                    registerQosControl: e => {
                        i.a.MetricResolver.registerQosControl(e)
                    },
                    exit: () => i.a.exit(),
                    _DEV_export: () => {}
                };
            "render" === __ZaBUNDLENAME__.toLowerCase() && (d._DEV_export = () => i.a.MetricResolver.exportAll(), window.exportMetrics = d._DEV_export);
            const u = {
                getConfig: e => {
                    var t;
                    return null === (t = o.a.getConfig()) || void 0 === t ? void 0 : t[e]
                },
                toggleFpsFallingRecorder: () => {
                    if (i.a.process === s.a.Render || i.a.process === s.a.Web) {
                        var e;
                        const {
                            ModuleContainer: t
                        } = n("jDHv"), {
                            SidebarController: r
                        } = n("iZzu");
                        t.resolve(r).togglePerfTab(!0), null === (e = i.a.UIManager.Tool) || void 0 === e || e.toggleFpsFallingRecorder()
                    }
                }
            };
            a.Fps = c.Fps;
            var l = a;
            t.e = l
        },
        rvru: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return c
            }));
            var r, i = n("jDHv"),
                o = n("DI/x"),
                s = n("12Ui");
            let a = Object(i.injectable)()(r = function(e, t) {
                return Object(i.inject)(s.a)(e, void 0, 0)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === s.a ? Object : s.a])(r = class {
                constructor(e) {
                    this.qos = e, this.stopDBErrorQos = !1, this.dbErrorQosCount = 0, this.stopMissingTablesQos = {}
                }
                sendDBErrorQos(e) {
                    if (!this.stopDBErrorQos) {
                        if (e instanceof o.e) e instanceof o.c ? this.sendDOMExceptionErrorQos(e) : this.sendDALErrorQos(e);
                        else {
                            let t = "";
                            "string" == typeof e ? t = e : e instanceof Error && (t = e.message || e.name);
                            const n = new o.i(t);
                            this.sendDALErrorQos(n)
                        }
                        return this.dbErrorQosCount += 1, this.dbErrorQosCount > 10 ? (this.stopDBErrorQos = !0, this.dbErrorQosCount = 0, void setTimeout((() => {
                            this.stopDBErrorQos = !1
                        }), 9e5)) : void 0
                    }
                }
                sendSuccessOpenDBDurationQos(e, t, n) {
                    let r = 1;
                    n > 2e4 ? r = 6 : n > 15e3 ? r = 5 : n > 1e4 ? r = 4 : n > 5e3 ? r = 3 : n > 1e3 && (r = 2), this.qos.increaseFailed(91063, 0, 0, r, t, [e])
                }
                sendLongOpenRequestQos(e) {
                    this.qos.increaseFailed(97126, 0, 0, 0, Date.now(), [e])
                }
                sendMissingTableQos(e, t) {
                    this.stopMissingTablesQos[e] || (this.qos.increaseFailed(91073, 0, 0, 0, Date.now(), [e, ...t]), this.stopMissingTablesQos[e] = !0)
                }
                sendDALErrorQos(e) {
                    this.qos.increaseFailed(97125, 0, 0, e.code, Date.now(), e.qosParams)
                }
                sendDOMExceptionErrorQos(e) {
                    let t = -1;
                    switch (e.name) {
                        case "IndexSizeError":
                            t = 1;
                            break;
                        case "HierarchyRequestError":
                            t = 3;
                            break;
                        case "WrongDocumentError":
                            t = 4;
                            break;
                        case "InvalidCharacterError":
                            t = 5;
                            break;
                        case "NoModificationAllowedError":
                            t = 7;
                            break;
                        case "NotFoundError":
                            t = 8;
                            break;
                        case "NotSupportedError":
                            t = 9;
                            break;
                        case "InUseAttributeError":
                            t = 10;
                            break;
                        case "InvalidStateError":
                            t = 11;
                            break;
                        case "SyntaxError":
                            t = 12;
                            break;
                        case "InvalidModificationError":
                            t = 13;
                            break;
                        case "NamespaceError":
                            t = 14;
                            break;
                        case "InvalidAccessError":
                            t = 15;
                            break;
                        case "SecurityError":
                            t = 18;
                            break;
                        case "NetworkError":
                            t = 19;
                            break;
                        case "AbortError":
                            t = 20;
                            break;
                        case "URLMismatchError":
                            t = 21;
                            break;
                        case "QuotaExceededError":
                            t = 22;
                            break;
                        case "TimeoutError":
                            t = 23;
                            break;
                        case "InvalidNodeTypeError":
                            t = 24;
                            break;
                        case "DataCloneError":
                            t = 25;
                            break;
                        case "EncodingError":
                            t = 26;
                            break;
                        case "NotReadableError":
                            t = 27;
                            break;
                        case "UnknownError":
                            t = -1;
                            break;
                        case "ConstraintError":
                            t = 28;
                            break;
                        case "DataError":
                            t = 29;
                            break;
                        case "TransactionInactiveError":
                            t = 30;
                            break;
                        case "ReadOnlyError":
                            t = 31;
                            break;
                        case "VersionError":
                            t = 32;
                            break;
                        case "OperationError":
                            t = 33;
                            break;
                        default:
                            void 0 !== e.code && (t = e.code)
                    }
                    const n = e.message || "";
                    this.qos.increaseFailed(91009, 0, 0, t, Date.now(), [n])
                }
            }) || r) || r) || r) || r;
            const c = Object(i.define)("database-qos");
            i.ModuleContainer.registerSingleton(c, a)
        },
        saaK: function(e, t, n) {
            n("vnA6");
            var r = n("POgF");
            e.exports = r
        },
        "sc+k": function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("3EqI"),
                i = n("Iwwi"),
                o = n.n(i),
                s = n("Cwh7"),
                a = n.n(s),
                c = n("vbkW"),
                d = n.n(c),
                u = n("N1xz");
            var l = class {
                constructor() {
                    this.directoryPath = void 0, this.directoryName = void 0, this.metaPath = void 0, this.logExt = void 0, this.accessibleFiles = {}, this.metaPreparing = !1, this.isMetaReady = !1, this.metaData = void 0, this.MAX_DIRECTORIES = 5, this.directoryPath = a.a.join(d.a.app.getPath("userData"), "metrics"), this.metaPath = a.a.join(d.a.app.getPath("userData"), "metrics", "meta"), this.logExt = ".txt", this.metaData = {
                        items: []
                    }
                }
                getFilePath(e) {
                    return a.a.join(this.directoryPath, e + this.logExt)
                }
                async checkFileExists(e) {
                    try {
                        return await o.a.promises.access(e, o.a.constants.F_OK), this.accessibleFiles[e] = !0, !0
                    } catch (t) {}
                    return !1
                }
                async ensureDirectoryExists() {
                    try {
                        await o.a.promises.mkdir(this.directoryPath, {
                            mode: 511,
                            recursive: !0
                        }), !this.isMetaReady && this.metaPreparing
                    } catch (e) {
                        throw new Error(e)
                    }
                }
                async prepareMeta() {
                    if (this.metaPreparing || this.isMetaReady) return;
                    let e;
                    this.metaPreparing = !0;
                    const t = async () => {
                            e = await o.a.promises.readFile(this.metaPath, "utf8")
                        },
                        n = async () => {
                            await this.checkFileExists(this.metaPath) && await t()
                        };
                    if (this.accessibleFiles[this.metaPath]) try {
                        await t()
                    } catch (s) {
                        await n()
                    } else await n();
                    if (e) try {
                        const t = JSON.parse(e);
                        if (null != t && t.items) {
                            var r;
                            this.metaData.items = t.items;
                            let e = this.metaData.items;
                            if (e = e.sort(((e, t) => e.createAt - t.createAt)), (null === (r = e) || void 0 === r ? void 0 : r.length) + 1 >= this.MAX_DIRECTORIES) {
                                e.splice(0, e.length + 1 - this.MAX_DIRECTORIES).forEach((e => {
                                    const t = a.a.join(d.a.app.getPath("userData"), "metrics", e.name);
                                    o.a.promises.unlink(t).catch((e => {}))
                                }))
                            }
                            this.metaData.items = e
                        }
                    } catch (c) {}
                    this.metaData.items.push({
                        name: this.directoryName,
                        createAt: u.a.EPOCH
                    });
                    const i = JSON.stringify(this.metaData);
                    await o.a.promises.writeFile(this.metaPath, i), this.metaPreparing = !1, this.isMetaReady = !0
                }
            };
            class p extends l {
                constructor() {
                    super(), this.lock = void 0, this.lock = new r.a
                }
                async write(e, t) {
                    return await this.lock.exec(e, (async () => {
                        const n = this.getFilePath(e),
                            r = async () => {
                                await this.ensureDirectoryExists(), await this.checkFileExists(n), await this.writeData(n, t)
                            };
                        if (this.accessibleFiles[n]) try {
                            await this.writeData(n, t)
                        } catch (i) {
                            await r()
                        } else await r()
                    }))
                }
                async append(e, t) {
                    return await this.lock.exec(e, (async () => {
                        const n = this.getFilePath(e),
                            r = async () => {
                                await this.ensureDirectoryExists();
                                await this.checkFileExists(n) ? await this.writeData(n, t) : await this.appendData(n, t)
                            };
                        if (this.accessibleFiles[n]) try {
                            await this.appendData(n, t)
                        } catch (i) {
                            await r()
                        } else await r()
                    }))
                }
                async writeData(e, t) {
                    try {
                        await o.a.promises.writeFile(e, t)
                    } catch (n) {
                        throw new Error(n)
                    }
                }
                async appendData(e, t) {
                    return new Promise(((n, r) => {
                        const i = o.a.createWriteStream(e, {
                            flags: "a"
                        }).on("error", (e => r(e))).on("close", n);
                        i.write(t), i.end("")
                    })).catch((e => {
                        throw new e
                    }))
                }
            }
            let m;
            t.default = () => (m || (m = new p), m)
        },
        tHMN: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return o
            })), n.d(t, "b", (function() {
                return s
            }));
            var r = n("jDHv"),
                i = n("AH6j");
            n("PmZf");
            class o extends i.b {}
            const s = Object(r.define)("database-engine")
        },
        tMB7: function(e, t, n) {
            var r = n("y1pI");
            e.exports = function(e) {
                var t = this.__data__,
                    n = r(t, e);
                return n < 0 ? void 0 : t[n][1]
            }
        },
        teaq: function(e, t, n) {
            "use strict";
            n.d(t, "c", (function() {
                return m
            })), n.d(t, "d", (function() {
                return f
            })), n.d(t, "a", (function() {
                return y
            })), n.d(t, "b", (function() {
                return _
            }));
            var r = n("VTBJ"),
                i = n("75pU"),
                o = n.n(i),
                s = n("jDHv"),
                a = n("UK4g"),
                c = n("YEoC"),
                d = n("DI/x");
            class u {}
            class l extends u {
                constructor(e) {
                    super(), this.fieldConfigs = void 0, this.fieldConfigs = Object.values(e).map((e => new m(e)))
                }
                getFields(e) {
                    return e ? this.fieldConfigs.filter((t => t.type === e)) : this.fieldConfigs
                }
                getFieldValues(e) {
                    return this.getFields().map((t => e[t.name]))
                }
                createValidator(e) {
                    const t = this.getFields().filter((e => !e.autoIncrement)),
                        n = e ? t.filter((t => e.includes(t.name))) : t;
                    let r = [`const vldFls = ${JSON.stringify(t.map((e=>e.name)))}`, "const curFlds = Object.keys(v)", "for (const field of curFlds) { if (!vldFls.includes(field)) return { ok: false, reason: 3, field }}"].join(";");
                    return r += n.map((e => e.type === c.g.json ? e.nullable || void 0 !== e.defaultValue ? "" : `if (v[${e.escapedName}] === null || v[${e.escapedName}] === undefined) return { ok: false, reason: 1, field: ${e.escapedName}, expected: "object - non-nullable", actual: v[${e.escapedName}] }` : e.nullable ? ["if (", `v[${e.escapedName}] !== null &&`, `v[${e.escapedName}] !== undefined &&`, `typeof v[${e.escapedName}] !== "${e.jsType}")`, `return { ok: false, reason: 2, field: ${e.escapedName}, expected: "${e.jsType} - nullable", actual: typeof v[${e.escapedName}] }`].join("") : [`if (v[${e.escapedName}] === null || v[${e.escapedName}] === undefined) return ${void 0!==e.defaultValue?"{ ok: true }":` {
                            ok: false,
                            reason: 1,
                            field: $ {
                                e.escapedName
                            },
                            expected: "non-nullable",
                            actual: typeof v[$ {
                                e.escapedName
                            }]
                        }
                        `};`, `if (typeof v[${e.escapedName}] !== "${e.jsType}") return { ok: false, reason: 2, field: ${e.escapedName}, expected: "${e.jsType}", actual: typeof v[${e.escapedName}] }`
                    ].join(";"))).join(";").concat(";return { ok: true };"), new Function("v", r)
                }
            }
            class p extends u {
                constructor(e) {
                    super(), this.fieldConfig = void 0, this.fieldConfig = new m(Object(r.a)({
                        name: "data"
                    }, e))
                }
                getFieldValues(e) {
                    return [e]
                }
                createValidator() {
                    const e = this.fieldConfig;
                    let t = `const v = { ${e.escapedName}: x };`;
                    return e.type === c.g.json ? e.nullable || void 0 !== e.defaultValue ? t = "" : t += `if (v[${e.escapedName}] === null || v[${e.escapedName}] === undefined) return { ok: false, reason: 1, field: ${e.escapedName}, expected: "object - non-nullable", actual: v[${e.escapedName}] }` : e.nullable ? t += ["if (", `v[${e.escapedName}] !== null &&`, `v[${e.escapedName}] !== undefined &&`, `typeof v[${e.escapedName}] !== "${e.jsType}")`, `return { ok: false, reason: 2, field: ${e.escapedName}, expected: "${e.jsType} - nullable", actual: typeof v[${e.escapedName}] }`].join("") : t += [`if (v[${e.escapedName}] === null || v[${e.escapedName}] === undefined) return ${void 0!==e.defaultValue?"{ ok: true }":` {
                            ok: false,
                            reason: 1,
                            field: $ {
                                e.escapedName
                            },
                            expected: "non-nullable",
                            actual: v[$ {
                                e.escapedName
                            }]
                        }
                        `};`, `if (typeof v[${e.escapedName}] !== "${e.jsType}") return { ok: false, reason: 2, field: ${e.escapedName}, expected: "${e.jsType}", actual: typeof v[${e.escapedName}] }`
                    ].join(";"), t = t.concat(";return { ok: true };"), new Function("x", t)
                }
                getFields(e) {
                    return e ? this.fieldConfig.type === e ? [this.fieldConfig] : [] : [this.fieldConfig]
                }
            }
            class m {
                constructor(e) {
                    this._config = e, this.name = void 0, this.nullable = void 0, this.escapedName = void 0, this.type = void 0, this.jsType = void 0, this.autoIncrement = void 0, this.defaultValue = void 0, this.name = e.name, this.nullable = !0 === e.nullable, this.escapedName = '"' + this.name + '"', this.type = e.type, this.jsType = this.getJsType(), this.autoIncrement = e.autoIncrement, this.defaultValue = e.default
                }
                getJsType() {
                    switch (this._config.type) {
                        case c.g.blob:
                            return "object";
                        case c.g.boolean:
                            return "boolean";
                        case c.g.float:
                        case c.g.integer:
                            return "number";
                        case c.g.json:
                            return "object";
                        case c.g.string:
                        default:
                            return "string"
                    }
                }
            }
            class h {
                constructor(e) {
                    this._config = e
                }
                get name() {
                    return this._config.name
                }
                get fields() {
                    return this._config.fields
                }
                get unique() {
                    return this._config.unique
                }
                get autoIncrement() {
                    return this._config.autoIncrement
                }
                getRealFields() {
                    return this._config.fields.filter((e => "raw" === e.type)).map((e => e.field))
                }
                createKey(e) {
                    return this.getRealFields().map((t => e[t]))
                }
                getValue(e, t) {
                    if (Array.isArray(e)) {
                        return e[this._config.fields.findIndex((e => e.field === t))]
                    }
                    if (1 === this._config.fields.length && this._config.fields[0].field === t) return e
                }
                validateKey(e) {
                    let t = !0;
                    return t = Array.isArray(e) ? this._config.fields.length === e.length : null != e && 1 === this._config.fields.length, t
                }
            }
            class f {
                constructor(e) {
                    var t;
                    this.entity = void 0, this.isNonFieldlikeEntity = void 0, this.fieldManager = void 0, this.indices = void 0, this.tableName = void 0, this.transforms = void 0, this.name = void 0, this.supportPartitionByField = void 0, this.partitionField = void 0, this.usePartitionTable = void 0, this.primaryIndex = void 0, this.mapNameToIndices = void 0, this.validators = void 0, this.migrations = void 0, this.dbName = void 0, this.isNonFieldlikeEntity = e.isNonFieldlikeEntity || !1, this.indices = Object.values(e.indices).map((e => new h(e)));
                    let n = e.fields;
                    if (!this.isNonFieldlikeEntity) {
                        const t = new Set;
                        this.indices.forEach((e => {
                            if (e.autoIncrement) {
                                e.fields.forEach((e => {
                                    let {
                                        field: n
                                    } = e;
                                    t.add(n)
                                }))
                            }
                        })), t.size && (n = Object.entries(e.fields).reduce(((e, n) => {
                            let [i, o] = n;
                            const s = Object(r.a)({}, o);
                            return t.has(s.name) && (s.autoIncrement = !0), e[i] = s, e
                        }), {}))
                    }
                    this.fieldManager = this.createConfigFieldManager(n), this.mapNameToIndices = new Map(this.indices.map((e => [e.name, e]))), this.primaryIndex = this.getPrimaryIndex() || null, e.partitionField ? this.usePartitionTable = !this.isNonFieldlikeEntity && -1 === this.primaryIndex.fields.findIndex((t => t.field === e.partitionField)) : this.usePartitionTable = !1, this.name = e.name, this.partitionField = null === (t = e.partitionField) || void 0 === t ? void 0 : t.toString(), this.supportPartitionByField = !this.isNonFieldlikeEntity && !!e.partitionField, this.tableName = e.tableName, this.transforms = e.transforms || [], this.validators = new Map, this.getIndexPartitionField = o()(this.getIndexPartitionField.bind(this)), this.migrations = e.migrations || {}
                }
                createConfigFieldManager(e) {
                    return this.isNonFieldlikeEntity ? new p(e) : new l(e)
                }
                getPrimaryIndex() {
                    if (!this.mapNameToIndices.has("primary") && !this.isNonFieldlikeEntity) throw new d.o("primary");
                    return this.mapNameToIndices.get("primary")
                }
                getIndex(e) {
                    const t = this.mapNameToIndices.get(e);
                    if (!t) throw new d.o(e);
                    return t
                }
                getIndexPartitionField(e) {
                    return this.getIndex(e).getRealFields().indexOf(this.partitionField)
                }
                validateFields(e, t) {
                    if (a.a) {
                        return this.getValidator(t)(e)
                    }
                    return {
                        ok: !0
                    }
                }
                validate(e, t) {
                    void 0 === t && (t = !0);
                    const n = t || this.isNonFieldlikeEntity ? void 0 : Object.keys(e).sort(),
                        r = this.validateFields(e, n);
                    let i = null;
                    if (!1 === r.ok) switch (r.reason) {
                        case 1:
                            i = new d.l(`'${r.field}' field is missing!`);
                            break;
                        case 2:
                            i = new d.l(`'${r.field}' field has invalid data type - Expected: ${r.expected} - Actual: ${r.actual}`);
                            break;
                        case 3:
                            i = new d.l(`'${r.field}' field is unknown!`)
                    }
                    if (i) throw i
                }
                getValidator(e) {
                    const t = e ? e.join("-") : "all_fields";
                    if (!this.validators.get(t)) {
                        const n = this.fieldManager.createValidator(e);
                        this.validators.set(t, n)
                    }
                    return this.validators.get(t)
                }
                getFieldValues(e) {
                    return this.fieldManager.getFieldValues(e)
                }
                getFields() {
                    return this.fieldManager.getFields()
                }
                prepareValue(e, t, n) {
                    if (!t) return e;
                    const i = this.getFields().filter((e => void 0 !== e.defaultValue));
                    if (0 === i.length) return e;
                    if (n) {
                        if (void 0 !== e) return e;
                        const {
                            defaultValue: t
                        } = i[0];
                        return "function" == typeof t ? t() : t
                    } {
                        const t = Object(r.a)({}, e);
                        return i.forEach((e => {
                            let {
                                name: n,
                                defaultValue: r
                            } = e;
                            if (void 0 === t[n]) {
                                const e = "function" == typeof r ? r() : r;
                                t[n] = e
                            }
                        })), t
                    }
                }
            }
            class g {
                constructor(e, t, n, r, i, o, s) {
                    this.database = e, this.type = t, this.name = n, this.version = r, this.milestoneVersion = i, this.cipherKey = o, this.tablesMap = void 0, this.tables = void 0, this.tablesMap = new Map(s.tables.map((e => [e.name, e]))), this.tables = s.tables, this.tables.forEach((t => {
                        t.dbName = e
                    }))
                }
                getTableConfig(e) {
                    return this.tablesMap.get(e)
                }
            }
            class y {
                get isSqlite() {
                    return this.type === c.a.SQLite
                }
                get isIDB() {
                    return this.type === c.a.IDB
                }
                get typeName() {
                    return this.type === c.a.IDB ? "idb" : "sql"
                }
                constructor(e) {
                    this.partitionsConfigCache = void 0, this.name = void 0, this.version = void 0, this.milestoneVersion = void 0, this.session = void 0, this.available = void 0, this.type = void 0, this.tables = void 0, this.partitionsMap = void 0, this.partitionNamingStrategy = void 0, this.partitionStrategies = void 0, this.supportPartitionByField = void 0, this.name = e.name, this.session = e.session, this.version = e.version, this.milestoneVersion = e.milestoneVersion, this.type = e.type, this.partitionsMap = e.partitionsMap, this.partitionNamingStrategy = e.partitionNamingStrategy, this.partitionStrategies = e.partitionStrategies || [], this.supportPartitionByField = e.type === c.a.SQLite, this.available = !0, this.tables = [], this.partitionsConfigCache = new Map, this.computeDatabaseName = o()(this.computeDatabaseName.bind(this)), this.computePartitionName = o()(this.computePartitionName.bind(this))
                }
                clearCache() {
                    this.partitionsConfigCache.clear()
                }
                configure() {
                    const e = Object.values(this.partitionsMap);
                    this.tables = e.map((e => e.tables)).flat()
                }
                getPartition(e, t) {
                    const n = (null == t ? void 0 : t.userId) || "",
                        r = (null == t ? void 0 : t.UIN) || "",
                        i = this.computePartitionName(n, e);
                    let o = this.partitionsConfigCache.get(i);
                    return o || (o = this.createPartitionConfig(i, r), o && this.partitionsConfigCache.set(i, o)), o
                }
                computeDatabaseName(e, t) {
                    const n = this.partitionNamingStrategy || [],
                        r = this.type === c.a.IDB ? "_" : "/",
                        i = {
                            session: e,
                            table: t
                        };
                    return n.map((e => i[e] || e)).join(r)
                }
                computePartitionName(e, t) {
                    const n = this.partitionStrategies;
                    if (!n || 0 === n.length) return "default";
                    const r = {
                        session: e,
                        table: t
                    };
                    return n.map((e => r[e] || e)).join("_")
                }
                createPartitionConfig(e, t) {
                    const n = this.partitionsMap[e];
                    return new g(this.name, this.type, e, this.version, this.milestoneVersion, t, n)
                }
            }
            const _ = Object(s.define)("database-config-manager")
        },
        u8Dt: function(e, t, n) {
            var r = n("YESw"),
                i = Object.prototype.hasOwnProperty;
            e.exports = function(e) {
                var t = this.__data__;
                if (r) {
                    var n = t[e];
                    return "__lodash_hash_undefined__" === n ? void 0 : n
                }
                return i.call(t, e) ? t[e] : void 0
            }
        },
        uGsb: function(e, t, n) {
            var r, i, o, s, a, c, d, u;
            e.exports = (u = n("Ib8C"), n("MlIO"), n("1uat"), i = (r = u).x64, o = i.Word, s = i.WordArray, a = r.algo, c = a.SHA512, d = a.SHA384 = c.extend({
                _doReset: function() {
                    this._hash = new s.init([new o.init(3418070365, 3238371032), new o.init(1654270250, 914150663), new o.init(2438529370, 812702999), new o.init(355462360, 4144912697), new o.init(1731405415, 4290775857), new o.init(2394180231, 1750603025), new o.init(3675008525, 1694076839), new o.init(1203062813, 3204075428)])
                },
                _doFinalize: function() {
                    var e = c._doFinalize.call(this);
                    return e.sigBytes -= 16, e
                }
            }), r.SHA384 = c._createHelper(d), r.HmacSHA384 = c._createHmacHelper(d), u.SHA384)
        },
        uGxW: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("OLod"), r.pad.NoPadding = {
                pad: function() {},
                unpad: function() {}
            }, r.pad.NoPadding)
        },
        uS0h: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("F1Ur"),
                i = n("rCOr");
            const o = [24, 256, 65536, 4294967296, BigInt("18446744073709551616")];

            function s(e, t, n) {
                i.assertEnoughData(e, t, 1);
                const r = e[t];
                if (!0 === n.strict && r < o[0]) throw new Error(`${i.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);
                return r
            }

            function a(e, t, n) {
                i.assertEnoughData(e, t, 2);
                const r = e[t] << 8 | e[t + 1];
                if (!0 === n.strict && r < o[1]) throw new Error(`${i.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);
                return r
            }

            function c(e, t, n) {
                i.assertEnoughData(e, t, 4);
                const r = 16777216 * e[t] + (e[t + 1] << 16) + (e[t + 2] << 8) + e[t + 3];
                if (!0 === n.strict && r < o[2]) throw new Error(`${i.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);
                return r
            }

            function d(e, t, n) {
                i.assertEnoughData(e, t, 8);
                const r = 16777216 * e[t] + (e[t + 1] << 16) + (e[t + 2] << 8) + e[t + 3],
                    s = 16777216 * e[t + 4] + (e[t + 5] << 16) + (e[t + 6] << 8) + e[t + 7],
                    a = (BigInt(r) << BigInt(32)) + BigInt(s);
                if (!0 === n.strict && a < o[3]) throw new Error(`${i.decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`);
                if (a <= Number.MAX_SAFE_INTEGER) return Number(a);
                if (!0 === n.allowBigInt) return a;
                throw new Error(`${i.decodeErrPrefix} integers outside of the safe integer range are not supported`)
            }

            function u(e, t) {
                return l(e, 0, t.value)
            }

            function l(e, t, n) {
                if (n < o[0]) {
                    const r = Number(n);
                    e.push([t | r])
                } else if (n < o[1]) {
                    const r = Number(n);
                    e.push([24 | t, r])
                } else if (n < o[2]) {
                    const r = Number(n);
                    e.push([25 | t, r >>> 8, 255 & r])
                } else if (n < o[3]) {
                    const r = Number(n);
                    e.push([26 | t, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r])
                } else {
                    const r = BigInt(n);
                    if (!(r < o[4])) throw new Error(`${i.decodeErrPrefix} encountered BigInt larger than allowable range`); {
                        const n = [27 | t, 0, 0, 0, 0, 0, 0, 0];
                        let i = Number(r & BigInt(4294967295)),
                            o = Number(r >> BigInt(32) & BigInt(4294967295));
                        n[8] = 255 & i, i >>= 8, n[7] = 255 & i, i >>= 8, n[6] = 255 & i, i >>= 8, n[5] = 255 & i, n[4] = 255 & o, o >>= 8, n[3] = 255 & o, o >>= 8, n[2] = 255 & o, o >>= 8, n[1] = 255 & o, e.push(n)
                    }
                }
            }
            u.encodedSize = function(e) {
                return l.encodedSize(e.value)
            }, l.encodedSize = function(e) {
                return e < o[0] ? 1 : e < o[1] ? 2 : e < o[2] ? 3 : e < o[3] ? 5 : 9
            }, u.compareTokens = function(e, t) {
                return e.value < t.value ? -1 : e.value > t.value ? 1 : 0
            }, t.decodeUint16 = function(e, t, n, i) {
                return new r.Token(r.Type.uint, a(e, t + 1, i), 3)
            }, t.decodeUint32 = function(e, t, n, i) {
                return new r.Token(r.Type.uint, c(e, t + 1, i), 5)
            }, t.decodeUint64 = function(e, t, n, i) {
                return new r.Token(r.Type.uint, d(e, t + 1, i), 9)
            }, t.decodeUint8 = function(e, t, n, i) {
                return new r.Token(r.Type.uint, s(e, t + 1, i), 2)
            }, t.encodeUint = u, t.encodeUintValue = l, t.readUint16 = a, t.readUint32 = c, t.readUint64 = d, t.readUint8 = s, t.uintBoundaries = o
        },
        uzza: function(e, t, n) {
            "use strict";
            t.a = {
                usage_memory: "usage_memory",
                usage_cpu: "usage_cpu",
                app_cpu_usage: "app_cpu_usage",
                app_ram_usage: "app_ram_usage",
                start_up_time: "start_up_time",
                query_resolution_time: "query_resolution_time",
                db_ready: "db_ready",
                authenticate: "authenticate",
                open_conversation: "open_conversation",
                conv_load_1st_msg: "conv_1st_load_msg",
                fps: "fps",
                fps_lowest_drop: "fps_lowest_drop",
                fps_scroll_conv_list: "fps_scroll_conv_list",
                fps_switch_conv: "fps_switch_conv",
                fps_jump_to_msg: "fps_jump_to_msg",
                fps_scroll_chat_box_view: "fps_scroll_chat_box_view",
                fps_switch_main_tab: "fps_switch_main_tab",
                fps_scroll_global_search_list: "fps_scroll_global_search_list"
            }
        },
        vFc7: function(e, t, n) {
            "use strict";
            n.d(t, "c", (function() {
                return r
            })), n.d(t, "b", (function() {
                return i
            })), n.d(t, "a", (function() {
                return o
            })), n.d(t, "d", (function() {
                return a
            })), n.d(t, "e", (function() {
                return d
            })), n.d(t, "g", (function() {
                return u
            })), n.d(t, "f", (function() {
                return l
            }));
            const r = {
                    TEXT: 1,
                    KEYWORD: 2
                },
                i = {
                    TIME: 1,
                    MP3: 2,
                    FILE: 3,
                    POLL: 4,
                    TET_EFFECT: 5,
                    FIRE_EFFECT: 6,
                    TIME_REMIND: 7,
                    MENTION_BLACKLIST: 8,
                    GENERAL_BLACKLIST: 12
                },
                o = 5;
            class s {
                constructor(e, t, n) {
                    void 0 === t && (t = 7907), void 0 === n && (n = 1000000007), this._base = t, this._mod = n, this._mul = new Array(e + 1), this._mul[0] = 1;
                    for (let r = 1; r <= e; r++) this._mul[r] = this._mul[r - 1] * t % n
                }
                hash(e) {
                    let t = 0,
                        n = (this._base, this._mod),
                        r = this._mul;
                    for (let i = 0; i < e.length; i++) t += e[i].charCodeAt(0) * r[i], t %= n;
                    return t
                }
            }
            class a {
                constructor() {
                    this.root = {}
                }
                add(e, t) {
                    if (0 == e.length) return;
                    let n = this.root,
                        r = 0;
                    for (; r < e.length;) {
                        let t = e[r];
                        n[t] || (n[t] = {}), n = n[t], r++
                    }
                    n.end = t
                }
            }
            class c {
                constructor() {
                    this._dataLoaded = !1, this._separater = {};
                    for (let e of "!@%^-*(){}+`=<>?\\,.;'\"&#[]~$_| ") this._separater[e] = !0;
                    this._endOfSentence = {};
                    for (let e of ".;?!") this._endOfSentence[e] = !0;
                    this.priority = {}
                }
                _devData() {}
                keywordPriority(e) {
                    return e && e.subType ? this.priority[e.subType] : 0
                }
                isEnabled(e) {
                    switch (e) {
                        case i.MP3:
                        case i.FILE:
                        case i.TIME:
                        case i.TIME_REMIND:
                        case i.MENTION_BLACKLIST:
                        case i.POLL:
                        case i.TET_EFFECT:
                        case i.FIRE_EFFECT:
                        case i.GENERAL_BLACKLIST:
                        case i.MSG_INFO_PATTERN:
                            return !0;
                        default:
                            return !1
                    }
                }
                getBestKeyword(e, t) {
                    void 0 === t && (t = {});
                    let n = null;
                    if (e && e.length)
                        for (let r = 0; r < e.length; r++) {
                            let i = e[r];
                            this.keywordPriority(n) < this.keywordPriority(i) && !t[i.subType] && (n = i)
                        }
                    return n
                }
                getExtraInfo(e) {
                    return this._extraInfo && this._extraInfo[e]
                }
                loadData() {
                    fetch("https://f6-group-zf.zdn.vn/7b732d03ccdd208379cc/8693288286356885730").then((e => e.json())).then((e => {
                        this.prepareData(e)
                    })).catch((e => {}))
                }
                transferKeyword(e) {
                    if (!e) return 0;
                    let t = this._hash,
                        n = 0,
                        r = 0;
                    for (let i = 0; i < e.length; i++) n += t._mul[r] * e[i].charCodeAt(0), n %= t._mod, r++;
                    return n
                }
                prepareData(e, t) {
                    void 0 === t && (t = !1), this._trieTree = new a, this.data = e, this._hash = new s(3e3), t && (this._extraInfo = {});
                    let n = this._hash;
                    Date.now();
                    e.forEach((e => {
                        let t = e.keyword,
                            r = [],
                            i = [e.type, e.id],
                            o = 0,
                            s = 0;
                        for (let a = 0; a <= t.length; a++) this._separater[t[a]] || a === t.length ? (r.push(o), o = 0, s = 0) : (o += n._mul[s] * t[a].charCodeAt(0), o %= n._mod, s++);
                        this._trieTree.add(r, i), this._extraInfo && e.extInfo && (this._extraInfo[e.id] = e.extInfo)
                    })), this.skipOneSymbol = this.transferKeyword("skx"), this.skipToTheNextMatchSymbol = this.transferKeyword("nex"), this.endSymbol = this.transferKeyword("enx"), this._dataLoaded = !0
                }
                parseDataPosLenMessage(e) {
                    if (!e || e.constructor != String) throw new Error("str " + e + " is not String");
                    if (!this._dataLoaded) return [];
                    Date.now();
                    let t = [],
                        n = this._hash,
                        r = [],
                        i = [],
                        o = [],
                        s = 0,
                        a = 0,
                        c = 0;
                    for (let l = 0; l <= e.length; l++) l === e.length || this._separater[e[l]] ? (r.push(s), i.push(c), o.push(a), s = 0, c = 0, a = l + 1) : (s += n._mul[c] * e[l].charCodeAt(0), s %= n._mod, c++);
                    let d = 0,
                        u = 0;
                    for (; d < r.length;) {
                        let e = this._trieTree.root,
                            n = -1,
                            s = d;
                        for (u = d; e[r[u]];) e = e[r[u]], e.end && (n = e.end, s = u), ++u;
                        if (-1 != n && n.constructor == Array && 2 == n.length) {
                            let e = [...n];
                            e.push(o[d]), e.push(o[s] + i[s] - o[d]), t.push(e), d = s + 1
                        } else ++d
                    }
                    return t
                }
                parseDataMessage(e) {
                    if (!e || e.constructor != String) throw new Error("str " + e + " is not String");
                    if (!this._dataLoaded) return [];
                    Date.now();
                    let t = [],
                        n = this._hash,
                        r = [],
                        i = 0,
                        o = 0;
                    for (let c = 0; c <= e.length; c++) c === e.length || this._separater[e[c]] ? (r.push(i), i = 0, o = 0) : (i += n._mul[o] * e[c].charCodeAt(0), i %= n._mod, o++);
                    let s = 0,
                        a = 0;
                    for (; s < r.length;) {
                        let e = this._trieTree.root,
                            n = -1,
                            i = s;
                        for (a = s; e[r[a]];) e = e[r[a]], e.end && (n = e.end, i = a), ++a;
                        if (-1 != n && n.constructor == Array && 2 == n.length) {
                            let e = [...n];
                            e.push(s), t.push(e), s = i + 1
                        } else ++s
                    }
                    return t
                }
                parseData(e) {
                    if (!e || e.constructor != String) return e;
                    if (!this._dataLoaded) return e;
                    Date.now();
                    let t = [],
                        n = this._hash,
                        i = [],
                        o = [],
                        s = [],
                        a = 0,
                        c = 0,
                        d = [],
                        u = e.toLowerCase();
                    for (let r = 0; r <= e.length; r++) r === e.length || this._separater[e[r]] ? (i.push(a), s.push(o.join("")), r !== e.length ? d.push(e[r]) : d.push(""), o = [], a = 0, c = 0) : (o.push(e[r]), a += n._mul[c] * u[r].charCodeAt(0), a %= n._mod, c++);
                    let l = [],
                        p = e => {
                            l.length > 0 && t.push({
                                value: l.join(""),
                                type: r.TEXT
                            }), l = []
                        },
                        m = 0,
                        h = 0;
                    for (; m < i.length;) {
                        let e, n, o = this._trieTree.root,
                            a = -1;
                        for (h = m; o[i[h]];) {
                            if (o = o[i[h]], o.end) {
                                let t = o.end;
                                t && t.constructor == Array && t.length > 1 && (a = h, e = t[0], n = t[1])
                            }++h
                        }
                        if (-1 != a) {
                            p();
                            let i = [];
                            for (let e = m; e <= a; e++) i.push(s[e]), e != a ? i.push(d[e]) : l.push(d[e]);
                            t.push({
                                value: i.join(""),
                                type: r.KEYWORD,
                                subType: e,
                                id: n
                            }), m = a + 1
                        } else l.push(s[m]), l.push(d[m]), ++m
                    }
                    return p(), t
                }
                parseData_v2(e) {
                    if (!e || e.constructor != String) return e;
                    if (!this._dataLoaded) return e;
                    Date.now();
                    let t = [],
                        n = this._hash,
                        i = [],
                        o = [],
                        s = [],
                        a = 0,
                        c = 0,
                        d = [],
                        u = e.toLowerCase();
                    for (let r = 0; r <= e.length; r++) r === e.length || this._separater[e[r]] ? (i.push(a), s.push(o.join("")), r !== e.length ? (this._endOfSentence[e[r]] && (i.push(this.endSymbol), s.push(""), d.push("")), d.push(e[r])) : (i.push(this.endSymbol), s.push(""), d.push("", "")), o = [], a = 0, c = 0) : (o.push(e[r]), a += n._mul[c] * u[r].charCodeAt(0), a %= n._mod, c++);
                    let l = [],
                        p = e => {
                            l.length > 0 && t.push({
                                value: l.join(""),
                                type: r.TEXT
                            }), l = []
                        },
                        m = 0,
                        h = 0;
                    for (; m < i.length;) {
                        let e, n, o = this._trieTree.root,
                            a = -1;
                        h = m;
                        let c = -1;
                        for (; o && i[h];) {
                            if (!o[i[h]]) {
                                c = -1;
                                break
                            } {
                                o = o[i[h]];
                                let t = o.end;
                                !t || -1 !== c && c !== t[0] || t && t.constructor == Array && t.length > 1 && (-1 === c || c === t[0]) && (a = h, e = t[0], n = t[1])
                            }++h
                        }
                        if (-1 != a) {
                            p();
                            let i = [];
                            for (let e = m; e <= a; e++) i.push(s[e]), e != a ? i.push(d[e]) : l.push(d[e]);
                            t.push({
                                value: i.join(""),
                                type: r.KEYWORD,
                                subType: e,
                                id: n
                            }), m = a + 1
                        } else l.push(s[m]), l.push(d[m]), ++m
                    }
                    return p(), t
                }
            }
            const d = new c,
                u = new c,
                l = new c,
                p = new c;
            t.h = p
        },
        vQ8b: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            })), n.d(t, "b", (function() {
                return o
            }));
            var r = n("jDHv");
            const i = "convmenu-controller",
                o = Object(r.define)(i)
        },
        vbkW: function(e, t, n) {
            (function(t) {
                var r = n("Iwwi"),
                    i = n("Cwh7"),
                    o = i.join(__dirname, "path.txt");
                e.exports = function() {
                    if (r.existsSync(o)) {
                        var e = r.readFileSync(o, "utf-8");
                        return t.env.ELECTRON_OVERRIDE_DIST_PATH ? i.join(t.env.ELECTRON_OVERRIDE_DIST_PATH, e) : i.join(__dirname, "dist", e)
                    }
                    throw new Error("Electron failed to install correctly, please delete node_modules/electron and try installing again")
                }()
            }).call(this, n("ckNr"))
        },
        vnA6: function(e, t, n) {
            n("UbhR")
        },
        w46u: function(e, t, n) {
            "use strict";
            n.r(t);
            var r = n("5Drw"),
                i = n("KA3I"),
                o = n("dFSO"),
                s = n("N1xz"),
                a = n("fbdB");
            t.default = class {
                constructor() {
                    this._timelineEngine = void 0, this._processUsagePerformer = void 0, this.times = void 0, this.caclUsage = e => {
                        const t = Date.now();
                        this.processUsagePerformer.run().then((n => {
                            this.recordMetric(n, t, e.passedTime), s.a.LocalStat.recordAppUsage(n, t)
                        }))
                    }, this.recordMetric = (e, t, n) => {
                        const r = s.a.SchemaManager.loadSchema(a.b.app_cpu_usage),
                            i = s.a.SchemaManager.loadSchema(a.b.app_ram_usage),
                            o = e.reduce(((e, t) => (e.cpuTotal += t.cpu, e.memoryTotal += t.memory, e)), {
                                cpuTotal: 0,
                                memoryTotal: 0
                            }),
                            c = (e, t) => {
                                const r = s.a.MetricFactory.create(e.name, void 0, e);
                                r.setData({
                                    cpuTotal: o.cpuTotal,
                                    memoryTotal: o.memoryTotal,
                                    passedTime: n
                                }), r.setDuration(t), r.pushInfo(o), r.evaluate(), r.resolve(), s.a.MetricResolver.resolve(r)
                            };
                        r.statement && c(r, o.cpuTotal), i.statement && c(i, o.memoryTotal)
                    }, this.times = [Object(o.g)("1m"), Object(o.g)("5m"), Object(o.g)("10m"), Object(o.g)("30m"), Object(o.g)("1h"), Object(o.g)("3h"), Object(o.g)("5h"), Object(o.g)("8h"), Object(o.g)("24h")]
                }
                get timelineEngine() {
                    return this._timelineEngine || (this._timelineEngine = new r.b, this._timelineEngine.onMessage(this.caclUsage)), this._timelineEngine
                }
                get processUsagePerformer() {
                    return this._processUsagePerformer || (this._processUsagePerformer = new i.a), this._processUsagePerformer
                }
                start() {
                    const e = [];
                    this.times.length && (this.times.forEach((t => {
                        e.push(new r.a(t))
                    })), this.timelineEngine.startUp(e))
                }
            }
        },
        w7YG: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("ETIr"), n("cv67"), n("K3mO"), n("OLod"), function() {
                var e = r,
                    t = e.lib.StreamCipher,
                    n = e.algo,
                    i = n.RC4 = t.extend({
                        _doReset: function() {
                            for (var e = this._key, t = e.words, n = e.sigBytes, r = this._S = [], i = 0; i < 256; i++) r[i] = i;
                            i = 0;
                            for (var o = 0; i < 256; i++) {
                                var s = i % n,
                                    a = t[s >>> 2] >>> 24 - s % 4 * 8 & 255;
                                o = (o + r[i] + a) % 256;
                                var c = r[i];
                                r[i] = r[o], r[o] = c
                            }
                            this._i = this._j = 0
                        },
                        _doProcessBlock: function(e, t) {
                            e[t] ^= o.call(this)
                        },
                        keySize: 8,
                        ivSize: 0
                    });

                function o() {
                    for (var e = this._S, t = this._i, n = this._j, r = 0, i = 0; i < 4; i++) {
                        n = (n + e[t = (t + 1) % 256]) % 256;
                        var o = e[t];
                        e[t] = e[n], e[n] = o, r |= e[(e[t] + e[n]) % 256] << 24 - 8 * i
                    }
                    return this._i = t, this._j = n, r
                }
                e.RC4 = t._createHelper(i);
                var s = n.RC4Drop = i.extend({
                    cfg: i.cfg.extend({
                        drop: 192
                    }),
                    _doReset: function() {
                        i._doReset.call(this);
                        for (var e = this.cfg.drop; e > 0; e--) o.call(this)
                    }
                });
                e.RC4Drop = t._createHelper(s)
            }(), r.RC4)
        },
        wH4e: function(e, t, n) {
            "use strict";
            var r = n("UK4g");
            n.d(t, "GET_ALL_RANGE", (function() {
                return r.b
            }));
            var i = n("YEoC");
            n.d(t, "CursorDirection", (function() {
                return i.b
            })), n.d(t, "RunMode", (function() {
                return i.e
            })), n.d(t, "TransactionMode", (function() {
                return i.f
            })), n.d(t, "ValidDataType", (function() {
                return i.g
            }));
            n("DI/x");
            var o = n("PmZf");
            n.d(t, "Events", (function() {
                return o.a
            })), n.d(t, "QueryErrorEvent", (function() {
                return o.b
            })), n.d(t, "SessionChangeEvent", (function() {
                return o.c
            })), n.d(t, "UnexpectedErrorEvent", (function() {
                return o.d
            }));
            n("bSii");
            var s = n("ibl3");
            n.o(s, "QueryUtils") && n.d(t, "QueryUtils", (function() {
                return s.QueryUtils
            }));
            n("xI/L"), n("ohhZ"), n("4W2c");
            var a = n("YZti");
            n.d(t, "QueryUtils", (function() {
                return a.b
            }));
            n("kFM4")
        },
        wKPd: function(e, t, n) {
            "use strict";
            var r, i = n("jDHv"),
                o = n("Mgpg"),
                s = n("YEoC"),
                a = n("x9oK"),
                c = n("0slR");
            let d = Object(i.injectable)()(r = function(e, t) {
                return Object(i.inject)(o.ZLoggerFactory)(e, void 0, 0)
            }(r = Reflect.metadata("design:type", Function)(r = Reflect.metadata("design:paramtypes", [void 0 === o.ZLoggerFactory ? Object : o.ZLoggerFactory])(r = class {
                constructor(e) {
                    this.configFactory = void 0, this.logger = void 0, this.logger = e.createZLogger("db", ["adapter-builder"])
                }
                install(e) {
                    this.configFactory = e
                }
                computeDatabaseConfig(e, t) {
                    return this.configFactory(e, t)
                }
                computeDatabaseName(e, t, n) {
                    var r;
                    const i = null !== (r = null == n ? void 0 : n.userId) && void 0 !== r ? r : "";
                    return e.computeDatabaseName(i, t)
                }
                computePartitionConfig(e, t, n) {
                    return e.getPartition(t, n)
                }
                computeTableConfig(e, t, n) {
                    const r = e.getTableConfig(t);
                    return r && (r.dbName = n), r
                }
                computePartitionKeyFromEntityValue(e, t) {
                    const n = e.partitionField;
                    if (void 0 !== n) return t[n]
                }
                computePartitionKeyFromEntityKey(e, t, n) {
                    void 0 === n && (n = "primary");
                    const r = e.partitionField;
                    if (void 0 !== r) return e.getIndex(n).getValue(t, r)
                }
                async computeDatabaseAdapter(e, t) {
                    const n = {
                        database: e,
                        version: t.version,
                        type: t.type
                    };
                    this.logger.zsymb(0, 8168, 3e4, (() => ["creating", n]));
                    const r = this.getAdapterFactoryToken(t.type),
                        o = i.ModuleContainer.resolve(r),
                        s = await o.createAdapter(e, t);
                    return this.logger.zsymb(0, 8168, 30001, (() => ["create success", n])), s
                }
                getAdapterFactoryToken(e) {
                    let t = a.b;
                    if (e === s.a.SQLite) t = a.c;
                    return t
                }
            }) || r) || r) || r) || r;
            i.ModuleContainer.registerSingleton(c.a, d)
        },
        wZgz: function(e, t, n) {
            var r;
            e.exports = (r = n("Ib8C"), n("ETIr"), n("cv67"), n("K3mO"), n("OLod"), function() {
                var e = r,
                    t = e.lib.BlockCipher,
                    n = e.algo,
                    i = [],
                    o = [],
                    s = [],
                    a = [],
                    c = [],
                    d = [],
                    u = [],
                    l = [],
                    p = [],
                    m = [];
                ! function() {
                    for (var e = [], t = 0; t < 256; t++) e[t] = t < 128 ? t << 1 : t << 1 ^ 283;
                    var n = 0,
                        r = 0;
                    for (t = 0; t < 256; t++) {
                        var h = r ^ r << 1 ^ r << 2 ^ r << 3 ^ r << 4;
                        h = h >>> 8 ^ 255 & h ^ 99, i[n] = h, o[h] = n;
                        var f = e[n],
                            g = e[f],
                            y = e[g],
                            _ = 257 * e[h] ^ 16843008 * h;
                        s[n] = _ << 24 | _ >>> 8, a[n] = _ << 16 | _ >>> 16, c[n] = _ << 8 | _ >>> 24, d[n] = _, _ = 16843009 * y ^ 65537 * g ^ 257 * f ^ 16843008 * n, u[h] = _ << 24 | _ >>> 8, l[h] = _ << 16 | _ >>> 16, p[h] = _ << 8 | _ >>> 24, m[h] = _, n ? (n = f ^ e[e[e[y ^ f]]], r ^= e[e[r]]) : n = r = 1
                    }
                }();
                var h = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                    f = n.AES = t.extend({
                        _doReset: function() {
                            if (!this._nRounds || this._keyPriorReset !== this._key) {
                                for (var e = this._keyPriorReset = this._key, t = e.words, n = e.sigBytes / 4, r = 4 * ((this._nRounds = n + 6) + 1), o = this._keySchedule = [], s = 0; s < r; s++)
                                    if (s < n) o[s] = t[s];
                                    else {
                                        var a = o[s - 1];
                                        s % n ? n > 6 && s % n == 4 && (a = i[a >>> 24] << 24 | i[a >>> 16 & 255] << 16 | i[a >>> 8 & 255] << 8 | i[255 & a]) : (a = i[(a = a << 8 | a >>> 24) >>> 24] << 24 | i[a >>> 16 & 255] << 16 | i[a >>> 8 & 255] << 8 | i[255 & a], a ^= h[s / n | 0] << 24), o[s] = o[s - n] ^ a
                                    }
                                for (var c = this._invKeySchedule = [], d = 0; d < r; d++) s = r - d, a = d % 4 ? o[s] : o[s - 4], c[d] = d < 4 || s <= 4 ? a : u[i[a >>> 24]] ^ l[i[a >>> 16 & 255]] ^ p[i[a >>> 8 & 255]] ^ m[i[255 & a]]
                            }
                        },
                        encryptBlock: function(e, t) {
                            this._doCryptBlock(e, t, this._keySchedule, s, a, c, d, i)
                        },
                        decryptBlock: function(e, t) {
                            var n = e[t + 1];
                            e[t + 1] = e[t + 3], e[t + 3] = n, this._doCryptBlock(e, t, this._invKeySchedule, u, l, p, m, o), n = e[t + 1], e[t + 1] = e[t + 3], e[t + 3] = n
                        },
                        _doCryptBlock: function(e, t, n, r, i, o, s, a) {
                            for (var c = this._nRounds, d = e[t] ^ n[0], u = e[t + 1] ^ n[1], l = e[t + 2] ^ n[2], p = e[t + 3] ^ n[3], m = 4, h = 1; h < c; h++) {
                                var f = r[d >>> 24] ^ i[u >>> 16 & 255] ^ o[l >>> 8 & 255] ^ s[255 & p] ^ n[m++],
                                    g = r[u >>> 24] ^ i[l >>> 16 & 255] ^ o[p >>> 8 & 255] ^ s[255 & d] ^ n[m++],
                                    y = r[l >>> 24] ^ i[p >>> 16 & 255] ^ o[d >>> 8 & 255] ^ s[255 & u] ^ n[m++],
                                    _ = r[p >>> 24] ^ i[d >>> 16 & 255] ^ o[u >>> 8 & 255] ^ s[255 & l] ^ n[m++];
                                d = f, u = g, l = y, p = _
                            }
                            f = (a[d >>> 24] << 24 | a[u >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & p]) ^ n[m++], g = (a[u >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[p >>> 8 & 255] << 8 | a[255 & d]) ^ n[m++], y = (a[l >>> 24] << 24 | a[p >>> 16 & 255] << 16 | a[d >>> 8 & 255] << 8 | a[255 & u]) ^ n[m++], _ = (a[p >>> 24] << 24 | a[d >>> 16 & 255] << 16 | a[u >>> 8 & 255] << 8 | a[255 & l]) ^ n[m++], e[t] = f, e[t + 1] = g, e[t + 2] = y, e[t + 3] = _
                        },
                        keySize: 8
                    });
                e.AES = t._createHelper(f)
            }(), r.AES)
        },
        wbIY: function(e, t, n) {
            var r = n("Bvq2");
            e.exports = !r((function() {
                return 7 != Object.defineProperty({}, 1, {
                    get: function() {
                        return 7
                    }
                })[1]
            }))
        },
        wudS: function(e, t, n) {
            "use strict";
            n.d(t, "c", (function() {
                return o
            })), n.d(t, "d", (function() {
                return s
            })), n.d(t, "b", (function() {
                return a
            })), n.d(t, "a", (function() {
                return c
            }));
            var r = n("ZcVI");
            const i = "sh_user_ids";

            function o() {
                const e = window.localStorage.getItem(i);
                let t = [];
                try {
                    e && (t = JSON.parse(e))
                } catch (n) {}
                return t
            }

            function s() {
                if (null !== window.localStorage.getItem(i)) return;
                const e = function() {
                    let e = new Set;
                    for (let t in localStorage)
                        for (let n of [r.i, r.h, r.m])
                            if (t && t.startsWith(n + "_")) {
                                let r = t.substring(n.length + 1, t.length);
                                if (r && !isNaN(+r)) {
                                    e.add(r);
                                    break
                                }
                            }
                    return 0 == e.size ? [] : Array.from(e)
                }();
                window.localStorage.setItem(i, JSON.stringify(e))
            }

            function a(e) {
                let t = o(),
                    n = t.indexOf(e);
                return -1 === n && (t.push(e), n = t.length - 1, window.localStorage.setItem(i, JSON.stringify(t))), n
            }

            function c(e) {
                const t = window.localStorage.getItem(i);
                if (null === t) return !1;
                return -1 !== JSON.parse(t).indexOf(e)
            }
        },
        x9oK: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return u
            })), n.d(t, "b", (function() {
                return m
            })), n.d(t, "c", (function() {
                return h
            }));
            var r = n("jDHv"),
                i = n("AH6j"),
                o = n("Mgpg"),
                s = (n("wH4e"), n("YEoC")),
                a = n("DI/x"),
                c = n("YZti"),
                d = n("Abbu");
            class u extends i.b {
                constructor(e, t, n, i, a, c, d) {
                    super(), this.partition = e, this.fullName = t, this.transactionManager = n, this.instance = i, this.queryExecutor = a, this.transactionExecutor = c, this.options = d, this.queryExecutorMap = void 0, this.logger = void 0, this.queryExecutorMap = {
                        [s.d.BeginTransaction]: a.beginTransaction.bind(a),
                        [s.d.CommitTransaction]: a.commitTransaction.bind(a),
                        [s.d.Clear]: a.clear.bind(a),
                        [s.d.Get]: a.get.bind(a),
                        [s.d.GetAndUpdate]: a.getAndUpdate.bind(a),
                        [s.d.GetMulti]: a.getMulti.bind(a),
                        [s.d.GetAll]: a.getAll.bind(a),
                        [s.d.GetAllKey]: a.getAllKey.bind(a),
                        [s.d.Insert]: a.insert.bind(a),
                        [s.d.InsertMulti]: a.insertMulti.bind(a),
                        [s.d.Update]: a.update.bind(a),
                        [s.d.UpdateMulti]: a.updateMulti.bind(a),
                        [s.d.Delete]: a.delete.bind(a),
                        [s.d.DeleteMulti]: a.deleteMulti.bind(a),
                        [s.d.FindAndDelete]: a.findAndDelete.bind(a),
                        [s.d.Count]: a.count.bind(a)
                    };
                    const u = r.ModuleContainer.resolve(o.ZLoggerFactory);
                    this.logger = u.createZLogger("db", ["adapter"])
                }
                get type() {
                    return this.partition.type
                }
                getFullName() {
                    return this.fullName
                }
                execute(e) {
                    e.meta.step = 11, d.a.isBeginTransaction(e) ? this.transactionExecutor.beginTransaction(e) : this.executeByQueryExecutor(e)
                }
                async closeThisDatabase() {
                    throw new a.a("closeThisDatabase")
                }
                async deleteThisDatabase() {
                    throw new a.a("deleteThisDatabase")
                }
                executeByQueryExecutor(e) {
                    e.timing.handled = Date.now();
                    const t = t => {
                        const n = {
                            adapter: this.partition.type,
                            database: e.database,
                            table: e.table,
                            trans: e.transaction
                        };
                        this.logger.zsymb(18, 8602, 3e4, (() => [c.b.getTypeName(e.type), {
                            logInfo: n,
                            error: t
                        }])), e.deferrer.reject(t)
                    };
                    try {
                        if (e.transaction) {
                            this.transactionManager.get(e.transaction).execute((() => this.queryExecutorMap[e.type](e))).then(e.deferrer.resolve).catch(e.deferrer.reject)
                        } else this.queryExecutorMap[e.type](e).then(e.deferrer.resolve).catch(e.deferrer.reject)
                    } catch (n) {
                        t(n)
                    }
                }
            }
            const l = `database-adapter-${s.a.IDB}`,
                p = `database-adapter-${s.a.SQLite}`,
                m = Object(r.define)(l),
                h = Object(r.define)(p)
        },
        xDBg: function(e, t, n) {
            "use strict";
            n.r(t),
                function(e) {
                    var r = n("VTBJ"),
                        i = n("N1xz"),
                        o = n("KBA3"),
                        s = n("KA3I"),
                        a = n("dFSO"),
                        c = n("Na1p"),
                        d = n("AoYG");
                    t.default = class {
                        constructor() {
                            this._processUsagePerformer = void 0, this.systemInfo = void 0
                        }
                        get processMonitor() {
                            return this._processUsagePerformer || (this._processUsagePerformer = new s.a), this._processUsagePerformer
                        }
                        recordAtTime(e, t) {
                            if (this.recordCurrentProcessStats(e, t), o.a.getConfig().allow_measure_usage_by_ps_cmd) {
                                const e = Date.now();
                                this.processMonitor.run().then((n => {
                                    if (i.a.LocalStat.recordUsage(n, e), null != t && t.length) {
                                        let e = [];
                                        n.forEach((e => {
                                            t.forEach((e => {}))
                                        })), e.forEach((e => {
                                            i.a.MetricResolver.resolve(e)
                                        }))
                                    }
                                }))
                            }
                        }
                        combineRendererStats(e) {
                            this.fillMetrics(e), i.a.LocalStat.recordProcessStats(e)
                        }
                        getArch() {
                            const e = n("TcBx");
                            try {} catch (t) {}
                            return e.arch()
                        }
                        getSystemInfo() {
                            if (!this.systemInfo) {
                                const e = n("TcBx");
                                this.systemInfo = {
                                    totalMem: e.totalmem(),
                                    arch: this.getArch(),
                                    osVersion: e.release()
                                }
                            }
                            return this.systemInfo
                        }
                        recordCurrentProcessStats(t, n) {
                            const o = Date.now(),
                                s = e.getHeapStatistics(),
                                u = e.memoryUsage(),
                                l = c.a.getUsage(),
                                p = {
                                    pid: e.pid,
                                    name: i.a.process,
                                    memory: {
                                        rss: u.rss,
                                        heapTotal: u.heapTotal,
                                        heapUsed: u.heapUsed,
                                        heapSizeLimit: Object(a.c)(s.heapSizeLimit),
                                        totalHeapSizeExecutable: Object(a.c)(s.totalHeapSizeExecutable),
                                        totalPhysicalSize: Object(a.c)(s.totalPhysicalSize),
                                        totalAvailableSize: Object(a.c)(s.totalAvailableSize),
                                        mallocedMemory: Object(a.c)(s.mallocedMemory),
                                        peakMallocedMemory: Object(a.c)(s.peakMallocedMemory),
                                        doesZapGarbage: s.doesZapGarbage,
                                        external: u.external,
                                        arrayBuffers: u.arrayBuffers
                                    },
                                    cpu: Object(r.a)({}, l),
                                    recordAt: o,
                                    usageTime: o - i.a.EPOCH
                                };
                            this.fillMetrics(p), null != n && n.length && n.forEach((e => {
                                const n = i.a.MetricFactory.create(e.name, `${p.name}.${t.passedTime}`, e);
                                var r;
                                (n.setStartAt(t.startTime), n.setEndAt(o), n.setData(p, t.passedTime), e.type === d.a.CPU) ? n.pushInfo({
                                    percentCPUUsage: null === (r = p.cpu) || void 0 === r ? void 0 : r.percent,
                                    recordAt: p.recordAt,
                                    usageTime: p.usageTime,
                                    processName: p.name
                                }): e.type === d.a.MEMORY && n.pushInfo({
                                    heapUsed: p.memory.heapUsed,
                                    heapTotal: p.memory.heapTotal,
                                    rss: p.memory.rss
                                });
                                n.evaluate(), n.resolve(), i.a.MetricResolver.resolve(n)
                            })), i.a.LocalStat.recordProcessStats(p)
                        }
                        recordGpuProcessStats() {
                            const e = Date.now(),
                                t = this.processMonitor.getGPUMetrics();
                            if (t) {
                                const n = {
                                    pid: Number(t.pid),
                                    name: "GPU",
                                    memory: {
                                        workingSetSize: Object(a.c)(t.memory.workingSetSize),
                                        peakWorkingSetSize: Object(a.c)(t.memory.peakWorkingSetSize)
                                    },
                                    cpu: {
                                        percent: t.cpu.percentCPUUsage
                                    },
                                    recordAt: Number(e),
                                    usageTime: Number(e - i.a.EPOCH),
                                    creationTime: t.creationTime,
                                    sandboxed: t.sandboxed,
                                    type: t.type
                                };
                                t.memory.privateBytes && (n.memory.privateBytes = Object(a.c)(t.memory.privateBytes)), i.a.LocalStat.recordProcessStats(n)
                            }
                        }
                        fillMetrics(e) {
                            const t = this.processMonitor.getPidMetrics(e.pid);
                            t && (e.memory.workingSetSize = Object(a.c)(t.memory.workingSetSize), e.memory.peakWorkingSetSize = Object(a.c)(t.memory.peakWorkingSetSize), t.memory.privateBytes && (e.memory.privateBytes = Object(a.c)(t.memory.privateBytes)), e.creationTime = t.creationTime, e.sandboxed = t.sandboxed, e.type = t.type)
                        }
                    }
                }.call(this, n("ckNr"))
        },
        "xI/L": function(e, t, n) {
            "use strict";
            n.d(t, "b", (function() {
                return r
            })), n.d(t, "a", (function() {
                return i
            }));
            const r = {
                    const: e => e,
                    byUser: () => "session",
                    byTable: () => "table"
                },
                i = {
                    const: e => e,
                    byUser: () => "session",
                    byTable: () => "table"
                }
        },
        "xS/Y": function(e, t, n) {
            "use strict";
            var r = n("VTBJ"),
                i = n("teaq"),
                o = n("xI/L"),
                s = n("YEoC"),
                a = n("C9Dv");
            const c = {
                    tableName: "ref",
                    name: "Ref",
                    fields: {
                        msgId: {
                            name: "msgId",
                            type: s.g.string
                        },
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        uid: {
                            name: "uid",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        uid_msgId: {
                            name: "uid_msgId",
                            fields: [{
                                type: "raw",
                                field: "uid"
                            }, {
                                type: "raw",
                                field: "msgId"
                            }],
                            unique: !0
                        },
                        convId: {
                            name: "convId",
                            fields: [{
                                type: "raw",
                                field: "convId"
                            }],
                            unique: !1
                        },
                        uid: {
                            name: "uid",
                            fields: [{
                                type: "raw",
                                field: "uid"
                            }],
                            unique: !1
                        }
                    }
                },
                d = new i.d(c),
                u = new i.d(Object(r.a)({}, c)),
                l = new i.d(Object(r.a)({}, c)),
                p = {
                    tableName: "res",
                    name: "Res",
                    fields: {
                        uid: {
                            name: "uid",
                            type: s.g.string
                        },
                        size: {
                            name: "size",
                            type: s.g.integer
                        },
                        type: {
                            name: "type",
                            type: s.g.integer
                        },
                        atime: {
                            name: "atime",
                            type: s.g.integer
                        },
                        params: {
                            name: "params",
                            type: s.g.string
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "uid"
                            }],
                            unique: !0
                        }
                    }
                },
                m = new i.d(p),
                h = new i.d(Object(r.a)({}, p)),
                f = new i.d(Object(r.a)({}, p)),
                g = {
                    tableName: "SyncDownload",
                    name: "SyncDownload",
                    fields: {
                        fromId: {
                            name: "fromId",
                            type: s.g.string
                        },
                        convId: {
                            name: "convId",
                            type: s.g.string
                        },
                        actionId: {
                            name: "actionId",
                            type: s.g.string,
                            nullable: !0
                        },
                        clientMsgId: {
                            name: "clientMsgId",
                            type: s.g.integer
                        },
                        globalMsgId: {
                            name: "globalMsgId",
                            type: s.g.string,
                            nullable: !0
                        },
                        platform: {
                            name: "platform",
                            type: s.g.integer
                        },
                        deviceId: {
                            name: "deviceId",
                            type: s.g.string
                        },
                        actionSource: {
                            name: "actionSource",
                            type: s.g.integer
                        },
                        sendDttm: {
                            name: "sendDttm",
                            type: s.g.integer
                        },
                        status: {
                            name: "status",
                            type: s.g.integer
                        },
                        sendDate: {
                            name: "sendDate",
                            type: s.g.integer
                        },
                        submited: {
                            name: "submited",
                            type: s.g.boolean
                        },
                        mediaType: {
                            name: "mediaType",
                            type: s.g.string,
                            nullable: !0
                        },
                        metaData: {
                            name: "metaData",
                            type: s.g.json,
                            nullable: !0
                        }
                    },
                    indices: {
                        primary: {
                            name: "primary",
                            fields: [{
                                type: "raw",
                                field: "convId"
                            }, {
                                type: "raw",
                                field: "fromId"
                            }, {
                                type: "raw",
                                field: "clientMsgId"
                            }],
                            unique: !0
                        },
                        sendDate_status: {
                            name: "sendDate_status",
                            fields: [{
                                type: "raw",
                                field: "sendDate"
                            }, {
                                type: "raw",
                                field: "status"
                            }],
                            unique: !1
                        },
                        actionSource_status_clientMsgId: {
                            name: "actionSource_status_clientMsgId",
                            fields: [{
                                type: "raw",
                                field: "actionSource"
                            }, {
                                type: "raw",
                                field: "status"
                            }, {
                                type: "raw",
                                field: "clientMsgId"
                            }],
                            unique: !1
                        }
                    }
                },
                y = {
                    Ref: d,
                    Res: m,
                    SyncDownload: new i.d(g)
                },
                _ = {
                    Ref: u,
                    Res: h,
                    SyncDownload: new i.d(Object(r.a)(Object(r.a)({}, g), {}, {
                        migrations: {
                            2: {
                                version: 2,
                                scripts: [{
                                    type: "create-table"
                                }]
                            }
                        }
                    }))
                },
                E = {
                    Ref: l,
                    Res: f,
                    SyncDownload: new i.d(Object(r.a)({}, g))
                },
                b = {
                    name: "Res",
                    session: !0
                },
                I = {
                    partitionStrategies: [o.b.byTable()],
                    partitionNamingStrategy: [o.a.byUser(), o.a.const("Res"), o.a.byTable()],
                    partitionsMap: Object(a.a)(E)
                },
                v = {
                    partitionNamingStrategy: [o.a.const("zres"), o.a.byUser()],
                    partitionsMap: Object(a.b)(_)
                },
                T = Object(r.a)(Object(r.a)(Object(r.a)({}, b), I), {}, {
                    version: 1,
                    milestoneVersion: 1,
                    type: s.a.SQLite
                }),
                O = Object(r.a)(Object(r.a)(Object(r.a)({}, b), v), {}, {
                    version: 2,
                    milestoneVersion: 1,
                    type: s.a.IDB
                });
            let w = null,
                P = null;
            t.a = {
                basicSchema: y,
                get useSqlite() {
                    return null === w && (w = new i.a(T)), w
                },
                get useIdb() {
                    return null === P && (P = new i.a(O)), P
                }
            }
        },
        xpEm: function(e, t, n) {
            "use strict";
            (function(e) {
                n.d(t, "a", (function() {
                    return V
                })), n.d(t, "b", (function() {
                    return k
                })), n.d(t, "c", (function() {
                    return z
                })), n.d(t, "d", (function() {
                    return K
                })), n.d(t, "e", (function() {
                    return G
                })), n.d(t, "f", (function() {
                    return q
                })), n.d(t, "g", (function() {
                    return H
                })), n.d(t, "h", (function() {
                    return B
                })), n.d(t, "i", (function() {
                    return F
                })), n.d(t, "j", (function() {
                    return W
                })), n.d(t, "k", (function() {
                    return j
                })), n.d(t, "l", (function() {
                    return E
                })), n.d(t, "m", (function() {
                    return R
                }));
                var r = function(e, t) {
                    return r = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(e, t) {
                        e.__proto__ = t
                    } || function(e, t) {
                        for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
                    }, r(e, t)
                };

                function i(e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");

                    function n() {
                        this.constructor = e
                    }
                    r(e, t), e.prototype = null === t ? Object.create(t) : (n.prototype = t.prototype, new n)
                }
                var o = function(e) {
                        var t = "[object " + e + "]";
                        return function(e) {
                            return s(e) === t
                        }
                    },
                    s = function(e) {
                        return Object.prototype.toString.call(e)
                    },
                    a = function(e) {
                        return e instanceof Date ? e.getTime() : c(e) ? e.map(a) : e && "function" == typeof e.toJSON ? e.toJSON() : e
                    },
                    c = o("Array"),
                    d = o("Object"),
                    u = (o("Function"), function(e, t) {
                        if (null == e && e == t) return !0;
                        if (e === t) return !0;
                        if (Object.prototype.toString.call(e) !== Object.prototype.toString.call(t)) return !1;
                        if (c(e)) {
                            if (e.length !== t.length) return !1;
                            for (var n = 0, r = e.length; n < r; n++)
                                if (!u(e[n], t[n])) return !1;
                            return !0
                        }
                        if (d(e)) {
                            if (Object.keys(e).length !== Object.keys(t).length) return !1;
                            for (var i in e)
                                if (!u(e[i], t[i])) return !1;
                            return !0
                        }
                        return !1
                    }),
                    l = function(e, t, n, r, i, o) {
                        var s = t[r];
                        if (c(e) && isNaN(Number(s)))
                            for (var a = 0, d = e.length; a < d; a++)
                                if (!l(e[a], t, n, r, a, e)) return !1;
                        return r === t.length || null == e ? n(e, i, o, 0 === r) : l(e[s], t, n, r + 1, s, e)
                    },
                    p = function() {
                        function e(e, t, n, r) {
                            this.params = e, this.owneryQuery = t, this.options = n, this.name = r, this.init()
                        }
                        return e.prototype.init = function() {}, e.prototype.reset = function() {
                            this.done = !1, this.keep = !1
                        }, e
                    }(),
                    m = function(e) {
                        function t(t, n, r, i) {
                            var o = e.call(this, t, n, r) || this;
                            return o.children = i, o
                        }
                        return i(t, e), t.prototype.reset = function() {
                            this.keep = !1, this.done = !1;
                            for (var e = 0, t = this.children.length; e < t; e++) this.children[e].reset()
                        }, t.prototype.childrenNext = function(e, t, n, r) {
                            for (var i = !0, o = !0, s = 0, a = this.children.length; s < a; s++) {
                                var c = this.children[s];
                                if (c.done || c.next(e, t, n, r), c.keep || (o = !1), c.done) {
                                    if (!c.keep) break
                                } else i = !1
                            }
                            this.done = i, this.keep = o
                        }, t
                    }(p),
                    h = function(e) {
                        function t(t, n, r, i, o) {
                            var s = e.call(this, t, n, r, i) || this;
                            return s.name = o, s
                        }
                        return i(t, e), t
                    }(m),
                    f = function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.next = function(e, t, n, r) {
                            this.childrenNext(e, t, n, r)
                        }, t
                    }(m),
                    g = function(e) {
                        function t(t, n, r, i, o) {
                            var s = e.call(this, n, r, i, o) || this;
                            return s.keyPath = t, s.propop = !0, s._nextNestedValue = function(e, t, n, r) {
                                return s.childrenNext(e, t, n, r), !s.done
                            }, s
                        }
                        return i(t, e), t.prototype.next = function(e, t, n) {
                            l(e, this.keyPath, this._nextNestedValue, 0, t, n)
                        }, t
                    }(m),
                    y = function(e, t) {
                        if (e instanceof Function) return e;
                        if (e instanceof RegExp) return function(t) {
                            var n = "string" == typeof t && e.test(t);
                            return e.lastIndex = 0, n
                        };
                        var n = a(e);
                        return function(e) {
                            return t(n, a(e))
                        }
                    },
                    _ = function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.init = function() {
                            this._test = y(this.params, this.options.compare)
                        }, t.prototype.next = function(e, t, n) {
                            Array.isArray(n) && !n.hasOwnProperty(t) || this._test(e, t, n) && (this.done = !0, this.keep = !0)
                        }, t
                    }(p),
                    E = function(e, t, n) {
                        return new _(e, t, n)
                    },
                    b = function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.next = function() {
                            this.done = !0, this.keep = !1
                        }, t
                    }(p),
                    I = function(e) {
                        return t = function(t, n, r, i) {
                                var o = typeof a(t),
                                    s = e(t);
                                return new _((function(e) {
                                    return typeof a(e) === o && s(e)
                                }), n, r, i)
                            },
                            function(e, n, r, i) {
                                return null == e ? new b(e, n, r, i) : t(e, n, r, i)
                            };
                        var t
                    },
                    v = function(e, t, n, r) {
                        var i = r.operations[e];
                        return i || T(e), i(t, n, r, e)
                    },
                    T = function(e) {
                        throw new Error("Unsupported operation: " + e)
                    },
                    O = function(e, t) {
                        for (var n in e)
                            if (t.operations.hasOwnProperty(n) || "$" === n.charAt(0)) return !0;
                        return !1
                    },
                    w = function(e, t, n, r, i) {
                        if (O(t, i)) {
                            var o = S(t, n, i),
                                s = o[0];
                            if (o[1].length) throw new Error("Property queries must contain only operations, or exact objects.");
                            return new g(e, t, r, i, s)
                        }
                        return new g(e, t, r, i, [new _(t, r, i)])
                    },
                    P = function(e, t, n) {
                        void 0 === t && (t = null);
                        var r = void 0 === n ? {} : n,
                            i = r.compare,
                            o = r.operations,
                            s = {
                                compare: i || u,
                                operations: Object.assign({}, o || {})
                            },
                            a = S(e, null, s),
                            c = a[0],
                            d = a[1],
                            l = [];
                        return c.length && l.push(new g([], e, t, s, c)), l.push.apply(l, d), 1 === l.length ? l[0] : new f(e, t, s, l)
                    },
                    S = function(e, t, n) {
                        var r, i = [],
                            o = [];
                        if (!(r = e) || r.constructor !== Object && r.constructor !== Array && "function Object() { [native code] }" !== r.constructor.toString() && "function Array() { [native code] }" !== r.constructor.toString() || r.toJSON) return i.push(new _(e, e, n)), [i, o];
                        for (var s in e)
                            if (n.operations.hasOwnProperty(s)) {
                                var a = v(s, e[s], e, n);
                                if (a && !a.propop && t && !n.operations[t]) throw new Error("Malformed query. " + s + " cannot be matched against property.");
                                null != a && i.push(a)
                            } else "$" === s.charAt(0) ? T(s) : o.push(w(s.split("."), e[s], s, e, n));
                        return [i, o]
                    },
                    A = function(e) {
                        return function(t, n, r) {
                            return e.reset(), e.next(t, n, r), e.keep
                        }
                    },
                    R = function(e, t) {
                        return void 0 === t && (t = {}), A(P(e, null, t))
                    },
                    M = function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.init = function() {
                            this._test = y(this.params, this.options.compare)
                        }, t.prototype.reset = function() {
                            e.prototype.reset.call(this), this.keep = !0
                        }, t.prototype.next = function(e) {
                            this._test(e) && (this.done = !0, this.keep = !1)
                        }, t
                    }(p),
                    N = (function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        i(t, e), t.prototype.init = function() {
                            if (!this.params || "object" != typeof this.params) throw new Error("Malformed query. $elemMatch must by an object.");
                            this._queryOperation = P(this.params, this.owneryQuery, this.options)
                        }, t.prototype.reset = function() {
                            e.prototype.reset.call(this), this._queryOperation.reset()
                        }, t.prototype.next = function(e) {
                            if (c(e)) {
                                for (var t = 0, n = e.length; t < n; t++) {
                                    this._queryOperation.reset();
                                    var r = e[t];
                                    this._queryOperation.next(r, t, e, !1), this.keep = this.keep || this._queryOperation.keep
                                }
                                this.done = !0
                            } else this.done = !1, this.keep = !1
                        }
                    }(p), function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.init = function() {
                            this._queryOperation = P(this.params, this.owneryQuery, this.options)
                        }, t.prototype.reset = function() {
                            e.prototype.reset.call(this), this._queryOperation.reset()
                        }, t.prototype.next = function(e, t, n, r) {
                            this._queryOperation.next(e, t, n, r), this.done = this._queryOperation.done, this.keep = !this._queryOperation.keep
                        }, t
                    }(p)),
                    C = (function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        i(t, e), t.prototype.init = function() {}, t.prototype.next = function(e) {
                            c(e) && e.length === this.params && (this.done = !0, this.keep = !0)
                        }
                    }(p), function(e) {
                        if (0 === e.length) throw new Error("$and/$or/$nor must be a nonempty array")
                    }),
                    D = function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !1, t
                        }
                        return i(t, e), t.prototype.init = function() {
                            var e = this;
                            C(this.params), this._ops = this.params.map((function(t) {
                                return P(t, null, e.options)
                            }))
                        }, t.prototype.reset = function() {
                            this.done = !1, this.keep = !1;
                            for (var e = 0, t = this._ops.length; e < t; e++) this._ops[e].reset()
                        }, t.prototype.next = function(e, t, n) {
                            for (var r = !1, i = !1, o = 0, s = this._ops.length; o < s; o++) {
                                var a = this._ops[o];
                                if (a.next(e, t, n), a.keep) {
                                    r = !0, i = a.keep;
                                    break
                                }
                            }
                            this.keep = i, this.done = r
                        }, t
                    }(p),
                    L = (function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !1, t
                        }
                        i(t, e), t.prototype.next = function(t, n, r) {
                            e.prototype.next.call(this, t, n, r), this.keep = !this.keep
                        }
                    }(D), function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        return i(t, e), t.prototype.init = function() {
                            var e = this;
                            this._testers = this.params.map((function(t) {
                                if (O(t, e.options)) throw new Error("cannot nest $ under " + e.name.toLowerCase());
                                return y(t, e.options.compare)
                            }))
                        }, t.prototype.next = function(e, t, n) {
                            for (var r = !1, i = !1, o = 0, s = this._testers.length; o < s; o++) {
                                if ((0, this._testers[o])(e)) {
                                    r = !0, i = !0;
                                    break
                                }
                            }
                            this.keep = i, this.done = r
                        }, t
                    }(p)),
                    U = function(e) {
                        function t(t, n, r, i) {
                            var o = e.call(this, t, n, r, i) || this;
                            return o.propop = !0, o._in = new L(t, n, r, i), o
                        }
                        return i(t, e), t.prototype.next = function(e, t, n, r) {
                            this._in.next(e, t, n), c(n) && !r ? this._in.keep ? (this.keep = !1, this.done = !0) : t == n.length - 1 && (this.keep = !0, this.done = !0) : (this.keep = !this._in.keep, this.done = !0)
                        }, t.prototype.reset = function() {
                            e.prototype.reset.call(this), this._in.reset()
                        }, t
                    }(p),
                    x = (function(e) {
                        function t() {
                            var t = null !== e && e.apply(this, arguments) || this;
                            return t.propop = !0, t
                        }
                        i(t, e), t.prototype.next = function(e, t, n) {
                            n.hasOwnProperty(t) === this.params && (this.done = !0, this.keep = !0)
                        }
                    }(p), function(e) {
                        function t(t, n, r, i) {
                            var o = e.call(this, t, n, r, t.map((function(e) {
                                return P(e, n, r)
                            })), i) || this;
                            return o.propop = !1, C(t), o
                        }
                        return i(t, e), t.prototype.next = function(e, t, n, r) {
                            this.childrenNext(e, t, n, r)
                        }, t
                    }(h)),
                    k = (function(e) {
                        function t(t, n, r, i) {
                            var o = e.call(this, t, n, r, t.map((function(e) {
                                return P(e, n, r)
                            })), i) || this;
                            return o.propop = !0, o
                        }
                        i(t, e), t.prototype.next = function(e, t, n, r) {
                            this.childrenNext(e, t, n, r)
                        }
                    }(h), function(e, t, n) {
                        return new _(e, t, n)
                    }),
                    B = function(e, t, n, r) {
                        return new M(e, t, n, r)
                    },
                    j = function(e, t, n, r) {
                        return new D(e, t, n, r)
                    },
                    F = function(e, t, n, r) {
                        return new U(e, t, n, r)
                    },
                    G = function(e, t, n, r) {
                        return new L(e, t, n, r)
                    },
                    q = I((function(e) {
                        return function(t) {
                            return t < e
                        }
                    })),
                    H = I((function(e) {
                        return function(t) {
                            return t <= e
                        }
                    })),
                    z = I((function(e) {
                        return function(t) {
                            return t > e
                        }
                    })),
                    K = I((function(e) {
                        return function(t) {
                            return t >= e
                        }
                    })),
                    W = function(e, t, n, r) {
                        return new N(e, t, n, r)
                    },
                    V = function(e, t, n, r) {
                        return new x(e, t, n, r)
                    }
            }).call(this, n("ckNr"))
        },
        y1pI: function(e, t, n) {
            var r = n("ljhN");
            e.exports = function(e, t) {
                for (var n = e.length; n--;)
                    if (r(e[n][0], t)) return n;
                return -1
            }
        },
        yBqK: function(e, t, n) {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = n("Gtd2"),
                i = n("UURK"),
                o = n("F1Ur");
            t.encode = r.encode, t.decode = i.decode, t.Token = o.Token, t.Type = o.Type
        },
        zJQS: function(e, t) {
            e.exports = function(e) {
                if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
                return e
            }
        },
        zkos: function(e, t, n) {
            "use strict";
            n.d(t, "a", (function() {
                return i
            })), n.d(t, "b", (function() {
                return o
            })), n.d(t, "c", (function() {
                return s
            })), n.d(t, "d", (function() {
                return a
            }));
            var r = n("UK4g");
            const i = [r.c, r.d, r.e, r.f],
                o = "load-original-script",
                s = "dal-qos",
                a = [...i, o, "user-data-path", s]
        },
        zoYe: function(e, t, n) {
            var r = n("nmnc"),
                i = n("eUgh"),
                o = n("Z0cm"),
                s = n("/9aa"),
                a = r ? r.prototype : void 0,
                c = a ? a.toString : void 0;
            e.exports = function e(t) {
                if ("string" == typeof t) return t;
                if (o(t)) return i(t, e) + "";
                if (s(t)) return c ? c.call(t) : "";
                var n = t + "";
                return "0" == n && 1 / t == -Infinity ? "-0" : n
            }
        }
    });
//# sourceMappingURL=sourcemaps/search-worker.129d87058129827939d4.js.map